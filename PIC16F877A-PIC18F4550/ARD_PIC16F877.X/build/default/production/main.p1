Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"99 Tonche_16F877.h
[v _setup `(v ~T0 @X0 0 ef ]
"100
[v _loop `(v ~T0 @X0 0 ef ]
"1287 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f877.h
[s S56 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S56 . TRISA0 TRISA1 TRISA2 TRISA3 TRISA4 TRISA5 ]
"1286
[u S55 `S56 1 ]
[n S55 . . ]
"1296
[v _TRISAbits `VS55 ~T0 @X0 0 e@133 ]
"1336
[s S58 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S58 . TRISB0 TRISB1 TRISB2 TRISB3 TRISB4 TRISB5 TRISB6 TRISB7 ]
"1335
[u S57 `S58 1 ]
[n S57 . . ]
"1347
[v _TRISBbits `VS57 ~T0 @X0 0 e@134 ]
"1397
[s S60 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S60 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1396
[u S59 `S60 1 ]
[n S59 . . ]
"1408
[v _TRISCbits `VS59 ~T0 @X0 0 e@135 ]
"1519
[s S64 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S64 . TRISE0 TRISE1 TRISE2 . PSPMODE IBOV OBF IBF ]
"1518
[u S63 `S64 1 ]
[n S63 . . ]
"1530
[v _TRISEbits `VS63 ~T0 @X0 0 e@137 ]
"164
[s S7 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S7 . RA0 RA1 RA2 RA3 RA4 RA5 ]
"163
[u S6 `S7 1 ]
[n S6 . . ]
"173
[v _PORTAbits `VS6 ~T0 @X0 0 e@5 ]
"213
[s S9 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S9 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"212
[u S8 `S9 1 ]
[n S8 . . ]
"224
[v _PORTBbits `VS8 ~T0 @X0 0 e@6 ]
"274
[s S11 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S11 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"273
[u S10 `S11 1 ]
[n S10 . . ]
"285
[v _PORTCbits `VS10 ~T0 @X0 0 e@7 ]
"335
[s S13 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S13 . RD0 RD1 RD2 RD3 RD4 RD5 RD6 RD7 ]
"334
[u S12 `S13 1 ]
[n S12 . . ]
"346
[v _PORTDbits `VS12 ~T0 @X0 0 e@8 ]
"396
[s S15 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S15 . RE0 RE1 RE2 ]
"395
[u S14 `S15 1 ]
[n S14 . . ]
"402
[v _PORTEbits `VS14 ~T0 @X0 0 e@9 ]
"94 Tonche_16F877.h
[v _preventiveWDTtoTMR0 `(v ~T0 @X0 0 ef ]
"1218 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f877.h
[s S53 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S53 . PS PSA T0SE T0CS INTEDG nRBPU ]
"1226
[s S54 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S54 . PS0 PS1 PS2 ]
"1217
[u S52 `S53 1 `S54 1 ]
[n S52 . . . ]
"1232
[v _OPTION_REGbits `VS52 ~T0 @X0 0 e@129 ]
"634
[s S26 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 ]
[n S26 . TMR1ON TMR1CS nT1SYNC T1OSCEN T1CKPS ]
"641
[s S27 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S27 . . T1CKPS0 T1CKPS1 ]
"646
[s S28 :2 `uc 1 :1 `uc 1 ]
[n S28 . . T1INSYNC ]
"650
[s S29 :2 `uc 1 :1 `uc 1 ]
[n S29 . . T1SYNC ]
"633
[u S25 `S26 1 `S27 1 `S28 1 `S29 1 ]
[n S25 . . . . . ]
"655
[v _T1CONbits `VS25 ~T0 @X0 0 e@16 ]
"622
[v _TMR1H `Vuc ~T0 @X0 0 e@15 ]
"616
[v _TMR1L `Vuc ~T0 @X0 0 e@14 ]
"780
[v _SSPBUF `Vuc ~T0 @X0 0 e@19 ]
"85 Tonche_16F877.h
[v _ADPortConfiguration `(v ~T0 @X0 0 ef1`Ci ]
"1774 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f877.h
[s S75 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S75 . BF UA R_nW S P D_nA CKE SMP ]
"1784
[s S76 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S76 . . R . D ]
"1790
[s S77 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S77 . . I2C_READ I2C_START I2C_STOP I2C_DATA ]
"1797
[s S78 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S78 . . nW . nA ]
"1803
[s S79 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S79 . . nWRITE . nADDRESS ]
"1809
[s S80 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S80 . . R_W . D_A ]
"1815
[s S81 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S81 . . READ_WRITE . DATA_ADDRESS ]
"1773
[u S74 `S75 1 `S76 1 `S77 1 `S78 1 `S79 1 `S80 1 `S81 1 ]
[n S74 . . . . . . . . ]
"1822
[v _SSPSTATbits `VS74 ~T0 @X0 0 e@148 ]
"792
[s S34 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S34 . SSPM CKP SSPEN SSPOV WCOL ]
"799
[s S35 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S35 . SSPM0 SSPM1 SSPM2 SSPM3 ]
"791
[u S33 `S34 1 `S35 1 ]
[n S33 . . . ]
"806
[v _SSPCONbits `VS33 ~T0 @X0 0 e@20 ]
"2034
[s S87 :4 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S87 . PCFG . ADFM ]
"2039
[s S88 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S88 . PCFG0 PCFG1 PCFG2 PCFG3 ]
"2033
[u S86 `S87 1 `S88 1 ]
[n S86 . . . ]
"2046
[v _ADCON1bits `VS86 ~T0 @X0 0 e@159 ]
"446
[s S19 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . RBIF INTF T0IF RBIE INTE T0IE PEIE GIE ]
"456
[s S20 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S20 . . TMR0IF . TMR0IE ]
"445
[u S18 `S19 1 `S20 1 ]
[n S18 . . . ]
"463
[v _INTCONbits `VS18 ~T0 @X0 0 e@11 ]
"1575
[s S66 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S66 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE PSPIE ]
"1574
[u S65 `S66 1 ]
[n S65 . . ]
"1586
[v _PIE1bits `VS65 ~T0 @X0 0 e@140 ]
"523
[s S22 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S22 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF PSPIF ]
"522
[u S21 `S22 1 ]
[n S21 . . ]
"534
[v _PIR1bits `VS21 ~T0 @X0 0 e@12 ]
"1636
[s S68 :1 `uc 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S68 . CCP2IE . BCLIE EEIE ]
"1635
[u S67 `S68 1 ]
[n S67 . . ]
"1643
[v _PIE2bits `VS67 ~T0 @X0 0 e@141 ]
"584
[s S24 :1 `uc 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S24 . CCP2IF . BCLIF EEIF ]
"583
[u S23 `S24 1 ]
[n S23 . . ]
"591
[v _PIR2bits `VS23 ~T0 @X0 0 e@13 ]
"1458
[s S62 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S62 . TRISD0 TRISD1 TRISD2 TRISD3 TRISD4 TRISD5 TRISD6 TRISD7 ]
"1457
[u S61 `S62 1 ]
[n S61 . . ]
"1469
[v _TRISDbits `VS61 ~T0 @X0 0 e@136 ]
"207
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
[; ;htc.h: 21: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 24: extern void __builtin_software_breakpoint(void);
[; ;pic16f877.h: 47: extern volatile unsigned char INDF @ 0x000;
"49 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f877.h
[; ;pic16f877.h: 49: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f877.h: 53: extern volatile unsigned char TMR0 @ 0x001;
"55
[; ;pic16f877.h: 55: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f877.h: 59: extern volatile unsigned char PCL @ 0x002;
"61
[; ;pic16f877.h: 61: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f877.h: 65: extern volatile unsigned char STATUS @ 0x003;
"67
[; ;pic16f877.h: 67: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f877.h: 70: typedef union {
[; ;pic16f877.h: 71: struct {
[; ;pic16f877.h: 72: unsigned C :1;
[; ;pic16f877.h: 73: unsigned DC :1;
[; ;pic16f877.h: 74: unsigned Z :1;
[; ;pic16f877.h: 75: unsigned nPD :1;
[; ;pic16f877.h: 76: unsigned nTO :1;
[; ;pic16f877.h: 77: unsigned RP :2;
[; ;pic16f877.h: 78: unsigned IRP :1;
[; ;pic16f877.h: 79: };
[; ;pic16f877.h: 80: struct {
[; ;pic16f877.h: 81: unsigned :5;
[; ;pic16f877.h: 82: unsigned RP0 :1;
[; ;pic16f877.h: 83: unsigned RP1 :1;
[; ;pic16f877.h: 84: };
[; ;pic16f877.h: 85: struct {
[; ;pic16f877.h: 86: unsigned CARRY :1;
[; ;pic16f877.h: 87: };
[; ;pic16f877.h: 88: struct {
[; ;pic16f877.h: 89: unsigned :2;
[; ;pic16f877.h: 90: unsigned ZERO :1;
[; ;pic16f877.h: 91: };
[; ;pic16f877.h: 92: } STATUSbits_t;
[; ;pic16f877.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f877.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;pic16f877.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f877.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;pic16f877.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f877.h: 163: typedef union {
[; ;pic16f877.h: 164: struct {
[; ;pic16f877.h: 165: unsigned RA0 :1;
[; ;pic16f877.h: 166: unsigned RA1 :1;
[; ;pic16f877.h: 167: unsigned RA2 :1;
[; ;pic16f877.h: 168: unsigned RA3 :1;
[; ;pic16f877.h: 169: unsigned RA4 :1;
[; ;pic16f877.h: 170: unsigned RA5 :1;
[; ;pic16f877.h: 171: };
[; ;pic16f877.h: 172: } PORTAbits_t;
[; ;pic16f877.h: 173: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f877.h: 207: extern volatile unsigned char PORTB @ 0x006;
"209
[; ;pic16f877.h: 209: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f877.h: 212: typedef union {
[; ;pic16f877.h: 213: struct {
[; ;pic16f877.h: 214: unsigned RB0 :1;
[; ;pic16f877.h: 215: unsigned RB1 :1;
[; ;pic16f877.h: 216: unsigned RB2 :1;
[; ;pic16f877.h: 217: unsigned RB3 :1;
[; ;pic16f877.h: 218: unsigned RB4 :1;
[; ;pic16f877.h: 219: unsigned RB5 :1;
[; ;pic16f877.h: 220: unsigned RB6 :1;
[; ;pic16f877.h: 221: unsigned RB7 :1;
[; ;pic16f877.h: 222: };
[; ;pic16f877.h: 223: } PORTBbits_t;
[; ;pic16f877.h: 224: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f877.h: 268: extern volatile unsigned char PORTC @ 0x007;
"270
[; ;pic16f877.h: 270: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f877.h: 273: typedef union {
[; ;pic16f877.h: 274: struct {
[; ;pic16f877.h: 275: unsigned RC0 :1;
[; ;pic16f877.h: 276: unsigned RC1 :1;
[; ;pic16f877.h: 277: unsigned RC2 :1;
[; ;pic16f877.h: 278: unsigned RC3 :1;
[; ;pic16f877.h: 279: unsigned RC4 :1;
[; ;pic16f877.h: 280: unsigned RC5 :1;
[; ;pic16f877.h: 281: unsigned RC6 :1;
[; ;pic16f877.h: 282: unsigned RC7 :1;
[; ;pic16f877.h: 283: };
[; ;pic16f877.h: 284: } PORTCbits_t;
[; ;pic16f877.h: 285: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f877.h: 329: extern volatile unsigned char PORTD @ 0x008;
"331
[; ;pic16f877.h: 331: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f877.h: 334: typedef union {
[; ;pic16f877.h: 335: struct {
[; ;pic16f877.h: 336: unsigned RD0 :1;
[; ;pic16f877.h: 337: unsigned RD1 :1;
[; ;pic16f877.h: 338: unsigned RD2 :1;
[; ;pic16f877.h: 339: unsigned RD3 :1;
[; ;pic16f877.h: 340: unsigned RD4 :1;
[; ;pic16f877.h: 341: unsigned RD5 :1;
[; ;pic16f877.h: 342: unsigned RD6 :1;
[; ;pic16f877.h: 343: unsigned RD7 :1;
[; ;pic16f877.h: 344: };
[; ;pic16f877.h: 345: } PORTDbits_t;
[; ;pic16f877.h: 346: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f877.h: 390: extern volatile unsigned char PORTE @ 0x009;
"392
[; ;pic16f877.h: 392: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f877.h: 395: typedef union {
[; ;pic16f877.h: 396: struct {
[; ;pic16f877.h: 397: unsigned RE0 :1;
[; ;pic16f877.h: 398: unsigned RE1 :1;
[; ;pic16f877.h: 399: unsigned RE2 :1;
[; ;pic16f877.h: 400: };
[; ;pic16f877.h: 401: } PORTEbits_t;
[; ;pic16f877.h: 402: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f877.h: 421: extern volatile unsigned char PCLATH @ 0x00A;
"423
[; ;pic16f877.h: 423: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f877.h: 426: typedef union {
[; ;pic16f877.h: 427: struct {
[; ;pic16f877.h: 428: unsigned PCLATH :5;
[; ;pic16f877.h: 429: };
[; ;pic16f877.h: 430: } PCLATHbits_t;
[; ;pic16f877.h: 431: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f877.h: 440: extern volatile unsigned char INTCON @ 0x00B;
"442
[; ;pic16f877.h: 442: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f877.h: 445: typedef union {
[; ;pic16f877.h: 446: struct {
[; ;pic16f877.h: 447: unsigned RBIF :1;
[; ;pic16f877.h: 448: unsigned INTF :1;
[; ;pic16f877.h: 449: unsigned T0IF :1;
[; ;pic16f877.h: 450: unsigned RBIE :1;
[; ;pic16f877.h: 451: unsigned INTE :1;
[; ;pic16f877.h: 452: unsigned T0IE :1;
[; ;pic16f877.h: 453: unsigned PEIE :1;
[; ;pic16f877.h: 454: unsigned GIE :1;
[; ;pic16f877.h: 455: };
[; ;pic16f877.h: 456: struct {
[; ;pic16f877.h: 457: unsigned :2;
[; ;pic16f877.h: 458: unsigned TMR0IF :1;
[; ;pic16f877.h: 459: unsigned :2;
[; ;pic16f877.h: 460: unsigned TMR0IE :1;
[; ;pic16f877.h: 461: };
[; ;pic16f877.h: 462: } INTCONbits_t;
[; ;pic16f877.h: 463: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f877.h: 517: extern volatile unsigned char PIR1 @ 0x00C;
"519
[; ;pic16f877.h: 519: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f877.h: 522: typedef union {
[; ;pic16f877.h: 523: struct {
[; ;pic16f877.h: 524: unsigned TMR1IF :1;
[; ;pic16f877.h: 525: unsigned TMR2IF :1;
[; ;pic16f877.h: 526: unsigned CCP1IF :1;
[; ;pic16f877.h: 527: unsigned SSPIF :1;
[; ;pic16f877.h: 528: unsigned TXIF :1;
[; ;pic16f877.h: 529: unsigned RCIF :1;
[; ;pic16f877.h: 530: unsigned ADIF :1;
[; ;pic16f877.h: 531: unsigned PSPIF :1;
[; ;pic16f877.h: 532: };
[; ;pic16f877.h: 533: } PIR1bits_t;
[; ;pic16f877.h: 534: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f877.h: 578: extern volatile unsigned char PIR2 @ 0x00D;
"580
[; ;pic16f877.h: 580: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f877.h: 583: typedef union {
[; ;pic16f877.h: 584: struct {
[; ;pic16f877.h: 585: unsigned CCP2IF :1;
[; ;pic16f877.h: 586: unsigned :2;
[; ;pic16f877.h: 587: unsigned BCLIF :1;
[; ;pic16f877.h: 588: unsigned EEIF :1;
[; ;pic16f877.h: 589: };
[; ;pic16f877.h: 590: } PIR2bits_t;
[; ;pic16f877.h: 591: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f877.h: 610: extern volatile unsigned short TMR1 @ 0x00E;
"612
[; ;pic16f877.h: 612: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f877.h: 616: extern volatile unsigned char TMR1L @ 0x00E;
"618
[; ;pic16f877.h: 618: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f877.h: 622: extern volatile unsigned char TMR1H @ 0x00F;
"624
[; ;pic16f877.h: 624: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f877.h: 628: extern volatile unsigned char T1CON @ 0x010;
"630
[; ;pic16f877.h: 630: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f877.h: 633: typedef union {
[; ;pic16f877.h: 634: struct {
[; ;pic16f877.h: 635: unsigned TMR1ON :1;
[; ;pic16f877.h: 636: unsigned TMR1CS :1;
[; ;pic16f877.h: 637: unsigned nT1SYNC :1;
[; ;pic16f877.h: 638: unsigned T1OSCEN :1;
[; ;pic16f877.h: 639: unsigned T1CKPS :2;
[; ;pic16f877.h: 640: };
[; ;pic16f877.h: 641: struct {
[; ;pic16f877.h: 642: unsigned :4;
[; ;pic16f877.h: 643: unsigned T1CKPS0 :1;
[; ;pic16f877.h: 644: unsigned T1CKPS1 :1;
[; ;pic16f877.h: 645: };
[; ;pic16f877.h: 646: struct {
[; ;pic16f877.h: 647: unsigned :2;
[; ;pic16f877.h: 648: unsigned T1INSYNC :1;
[; ;pic16f877.h: 649: };
[; ;pic16f877.h: 650: struct {
[; ;pic16f877.h: 651: unsigned :2;
[; ;pic16f877.h: 652: unsigned T1SYNC :1;
[; ;pic16f877.h: 653: };
[; ;pic16f877.h: 654: } T1CONbits_t;
[; ;pic16f877.h: 655: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f877.h: 704: extern volatile unsigned char TMR2 @ 0x011;
"706
[; ;pic16f877.h: 706: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f877.h: 710: extern volatile unsigned char T2CON @ 0x012;
"712
[; ;pic16f877.h: 712: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f877.h: 715: typedef union {
[; ;pic16f877.h: 716: struct {
[; ;pic16f877.h: 717: unsigned T2CKPS :2;
[; ;pic16f877.h: 718: unsigned TMR2ON :1;
[; ;pic16f877.h: 719: unsigned TOUTPS :4;
[; ;pic16f877.h: 720: };
[; ;pic16f877.h: 721: struct {
[; ;pic16f877.h: 722: unsigned T2CKPS0 :1;
[; ;pic16f877.h: 723: unsigned T2CKPS1 :1;
[; ;pic16f877.h: 724: unsigned :1;
[; ;pic16f877.h: 725: unsigned TOUTPS0 :1;
[; ;pic16f877.h: 726: unsigned TOUTPS1 :1;
[; ;pic16f877.h: 727: unsigned TOUTPS2 :1;
[; ;pic16f877.h: 728: unsigned TOUTPS3 :1;
[; ;pic16f877.h: 729: };
[; ;pic16f877.h: 730: } T2CONbits_t;
[; ;pic16f877.h: 731: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f877.h: 780: extern volatile unsigned char SSPBUF @ 0x013;
"782
[; ;pic16f877.h: 782: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f877.h: 786: extern volatile unsigned char SSPCON @ 0x014;
"788
[; ;pic16f877.h: 788: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f877.h: 791: typedef union {
[; ;pic16f877.h: 792: struct {
[; ;pic16f877.h: 793: unsigned SSPM :4;
[; ;pic16f877.h: 794: unsigned CKP :1;
[; ;pic16f877.h: 795: unsigned SSPEN :1;
[; ;pic16f877.h: 796: unsigned SSPOV :1;
[; ;pic16f877.h: 797: unsigned WCOL :1;
[; ;pic16f877.h: 798: };
[; ;pic16f877.h: 799: struct {
[; ;pic16f877.h: 800: unsigned SSPM0 :1;
[; ;pic16f877.h: 801: unsigned SSPM1 :1;
[; ;pic16f877.h: 802: unsigned SSPM2 :1;
[; ;pic16f877.h: 803: unsigned SSPM3 :1;
[; ;pic16f877.h: 804: };
[; ;pic16f877.h: 805: } SSPCONbits_t;
[; ;pic16f877.h: 806: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f877.h: 855: extern volatile unsigned short CCPR1 @ 0x015;
"857
[; ;pic16f877.h: 857: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f877.h: 861: extern volatile unsigned char CCPR1L @ 0x015;
"863
[; ;pic16f877.h: 863: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f877.h: 867: extern volatile unsigned char CCPR1H @ 0x016;
"869
[; ;pic16f877.h: 869: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f877.h: 873: extern volatile unsigned char CCP1CON @ 0x017;
"875
[; ;pic16f877.h: 875: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f877.h: 878: typedef union {
[; ;pic16f877.h: 879: struct {
[; ;pic16f877.h: 880: unsigned CCP1M :4;
[; ;pic16f877.h: 881: unsigned CCP1Y :1;
[; ;pic16f877.h: 882: unsigned CCP1X :1;
[; ;pic16f877.h: 883: };
[; ;pic16f877.h: 884: struct {
[; ;pic16f877.h: 885: unsigned CCP1M0 :1;
[; ;pic16f877.h: 886: unsigned CCP1M1 :1;
[; ;pic16f877.h: 887: unsigned CCP1M2 :1;
[; ;pic16f877.h: 888: unsigned CCP1M3 :1;
[; ;pic16f877.h: 889: };
[; ;pic16f877.h: 890: } CCP1CONbits_t;
[; ;pic16f877.h: 891: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f877.h: 930: extern volatile unsigned char RCSTA @ 0x018;
"932
[; ;pic16f877.h: 932: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f877.h: 935: typedef union {
[; ;pic16f877.h: 936: struct {
[; ;pic16f877.h: 937: unsigned RX9D :1;
[; ;pic16f877.h: 938: unsigned OERR :1;
[; ;pic16f877.h: 939: unsigned FERR :1;
[; ;pic16f877.h: 940: unsigned ADDEN :1;
[; ;pic16f877.h: 941: unsigned CREN :1;
[; ;pic16f877.h: 942: unsigned SREN :1;
[; ;pic16f877.h: 943: unsigned RX9 :1;
[; ;pic16f877.h: 944: unsigned SPEN :1;
[; ;pic16f877.h: 945: };
[; ;pic16f877.h: 946: struct {
[; ;pic16f877.h: 947: unsigned RCD8 :1;
[; ;pic16f877.h: 948: unsigned :5;
[; ;pic16f877.h: 949: unsigned RC9 :1;
[; ;pic16f877.h: 950: };
[; ;pic16f877.h: 951: struct {
[; ;pic16f877.h: 952: unsigned :6;
[; ;pic16f877.h: 953: unsigned nRC8 :1;
[; ;pic16f877.h: 954: };
[; ;pic16f877.h: 955: struct {
[; ;pic16f877.h: 956: unsigned :6;
[; ;pic16f877.h: 957: unsigned RC8_9 :1;
[; ;pic16f877.h: 958: };
[; ;pic16f877.h: 959: } RCSTAbits_t;
[; ;pic16f877.h: 960: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f877.h: 1024: extern volatile unsigned char TXREG @ 0x019;
"1026
[; ;pic16f877.h: 1026: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f877.h: 1030: extern volatile unsigned char RCREG @ 0x01A;
"1032
[; ;pic16f877.h: 1032: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f877.h: 1036: extern volatile unsigned short CCPR2 @ 0x01B;
"1038
[; ;pic16f877.h: 1038: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f877.h: 1042: extern volatile unsigned char CCPR2L @ 0x01B;
"1044
[; ;pic16f877.h: 1044: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f877.h: 1048: extern volatile unsigned char CCPR2H @ 0x01C;
"1050
[; ;pic16f877.h: 1050: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f877.h: 1054: extern volatile unsigned char CCP2CON @ 0x01D;
"1056
[; ;pic16f877.h: 1056: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f877.h: 1059: typedef union {
[; ;pic16f877.h: 1060: struct {
[; ;pic16f877.h: 1061: unsigned CCP2M :4;
[; ;pic16f877.h: 1062: unsigned CCP2Y :1;
[; ;pic16f877.h: 1063: unsigned CCP2X :1;
[; ;pic16f877.h: 1064: };
[; ;pic16f877.h: 1065: struct {
[; ;pic16f877.h: 1066: unsigned CCP2M0 :1;
[; ;pic16f877.h: 1067: unsigned CCP2M1 :1;
[; ;pic16f877.h: 1068: unsigned CCP2M2 :1;
[; ;pic16f877.h: 1069: unsigned CCP2M3 :1;
[; ;pic16f877.h: 1070: };
[; ;pic16f877.h: 1071: } CCP2CONbits_t;
[; ;pic16f877.h: 1072: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f877.h: 1111: extern volatile unsigned char ADRESH @ 0x01E;
"1113
[; ;pic16f877.h: 1113: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f877.h: 1117: extern volatile unsigned char ADCON0 @ 0x01F;
"1119
[; ;pic16f877.h: 1119: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f877.h: 1122: typedef union {
[; ;pic16f877.h: 1123: struct {
[; ;pic16f877.h: 1124: unsigned ADON :1;
[; ;pic16f877.h: 1125: unsigned :1;
[; ;pic16f877.h: 1126: unsigned GO_nDONE :1;
[; ;pic16f877.h: 1127: unsigned CHS :3;
[; ;pic16f877.h: 1128: unsigned ADCS :2;
[; ;pic16f877.h: 1129: };
[; ;pic16f877.h: 1130: struct {
[; ;pic16f877.h: 1131: unsigned :2;
[; ;pic16f877.h: 1132: unsigned GO :1;
[; ;pic16f877.h: 1133: unsigned CHS0 :1;
[; ;pic16f877.h: 1134: unsigned CHS1 :1;
[; ;pic16f877.h: 1135: unsigned CHS2 :1;
[; ;pic16f877.h: 1136: unsigned ADCS0 :1;
[; ;pic16f877.h: 1137: unsigned ADCS1 :1;
[; ;pic16f877.h: 1138: };
[; ;pic16f877.h: 1139: struct {
[; ;pic16f877.h: 1140: unsigned :2;
[; ;pic16f877.h: 1141: unsigned nDONE :1;
[; ;pic16f877.h: 1142: };
[; ;pic16f877.h: 1143: struct {
[; ;pic16f877.h: 1144: unsigned :2;
[; ;pic16f877.h: 1145: unsigned GO_DONE :1;
[; ;pic16f877.h: 1146: };
[; ;pic16f877.h: 1147: } ADCON0bits_t;
[; ;pic16f877.h: 1148: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f877.h: 1212: extern volatile unsigned char OPTION_REG @ 0x081;
"1214
[; ;pic16f877.h: 1214: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f877.h: 1217: typedef union {
[; ;pic16f877.h: 1218: struct {
[; ;pic16f877.h: 1219: unsigned PS :3;
[; ;pic16f877.h: 1220: unsigned PSA :1;
[; ;pic16f877.h: 1221: unsigned T0SE :1;
[; ;pic16f877.h: 1222: unsigned T0CS :1;
[; ;pic16f877.h: 1223: unsigned INTEDG :1;
[; ;pic16f877.h: 1224: unsigned nRBPU :1;
[; ;pic16f877.h: 1225: };
[; ;pic16f877.h: 1226: struct {
[; ;pic16f877.h: 1227: unsigned PS0 :1;
[; ;pic16f877.h: 1228: unsigned PS1 :1;
[; ;pic16f877.h: 1229: unsigned PS2 :1;
[; ;pic16f877.h: 1230: };
[; ;pic16f877.h: 1231: } OPTION_REGbits_t;
[; ;pic16f877.h: 1232: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f877.h: 1281: extern volatile unsigned char TRISA @ 0x085;
"1283
[; ;pic16f877.h: 1283: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f877.h: 1286: typedef union {
[; ;pic16f877.h: 1287: struct {
[; ;pic16f877.h: 1288: unsigned TRISA0 :1;
[; ;pic16f877.h: 1289: unsigned TRISA1 :1;
[; ;pic16f877.h: 1290: unsigned TRISA2 :1;
[; ;pic16f877.h: 1291: unsigned TRISA3 :1;
[; ;pic16f877.h: 1292: unsigned TRISA4 :1;
[; ;pic16f877.h: 1293: unsigned TRISA5 :1;
[; ;pic16f877.h: 1294: };
[; ;pic16f877.h: 1295: } TRISAbits_t;
[; ;pic16f877.h: 1296: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f877.h: 1330: extern volatile unsigned char TRISB @ 0x086;
"1332
[; ;pic16f877.h: 1332: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f877.h: 1335: typedef union {
[; ;pic16f877.h: 1336: struct {
[; ;pic16f877.h: 1337: unsigned TRISB0 :1;
[; ;pic16f877.h: 1338: unsigned TRISB1 :1;
[; ;pic16f877.h: 1339: unsigned TRISB2 :1;
[; ;pic16f877.h: 1340: unsigned TRISB3 :1;
[; ;pic16f877.h: 1341: unsigned TRISB4 :1;
[; ;pic16f877.h: 1342: unsigned TRISB5 :1;
[; ;pic16f877.h: 1343: unsigned TRISB6 :1;
[; ;pic16f877.h: 1344: unsigned TRISB7 :1;
[; ;pic16f877.h: 1345: };
[; ;pic16f877.h: 1346: } TRISBbits_t;
[; ;pic16f877.h: 1347: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f877.h: 1391: extern volatile unsigned char TRISC @ 0x087;
"1393
[; ;pic16f877.h: 1393: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f877.h: 1396: typedef union {
[; ;pic16f877.h: 1397: struct {
[; ;pic16f877.h: 1398: unsigned TRISC0 :1;
[; ;pic16f877.h: 1399: unsigned TRISC1 :1;
[; ;pic16f877.h: 1400: unsigned TRISC2 :1;
[; ;pic16f877.h: 1401: unsigned TRISC3 :1;
[; ;pic16f877.h: 1402: unsigned TRISC4 :1;
[; ;pic16f877.h: 1403: unsigned TRISC5 :1;
[; ;pic16f877.h: 1404: unsigned TRISC6 :1;
[; ;pic16f877.h: 1405: unsigned TRISC7 :1;
[; ;pic16f877.h: 1406: };
[; ;pic16f877.h: 1407: } TRISCbits_t;
[; ;pic16f877.h: 1408: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f877.h: 1452: extern volatile unsigned char TRISD @ 0x088;
"1454
[; ;pic16f877.h: 1454: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f877.h: 1457: typedef union {
[; ;pic16f877.h: 1458: struct {
[; ;pic16f877.h: 1459: unsigned TRISD0 :1;
[; ;pic16f877.h: 1460: unsigned TRISD1 :1;
[; ;pic16f877.h: 1461: unsigned TRISD2 :1;
[; ;pic16f877.h: 1462: unsigned TRISD3 :1;
[; ;pic16f877.h: 1463: unsigned TRISD4 :1;
[; ;pic16f877.h: 1464: unsigned TRISD5 :1;
[; ;pic16f877.h: 1465: unsigned TRISD6 :1;
[; ;pic16f877.h: 1466: unsigned TRISD7 :1;
[; ;pic16f877.h: 1467: };
[; ;pic16f877.h: 1468: } TRISDbits_t;
[; ;pic16f877.h: 1469: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f877.h: 1513: extern volatile unsigned char TRISE @ 0x089;
"1515
[; ;pic16f877.h: 1515: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f877.h: 1518: typedef union {
[; ;pic16f877.h: 1519: struct {
[; ;pic16f877.h: 1520: unsigned TRISE0 :1;
[; ;pic16f877.h: 1521: unsigned TRISE1 :1;
[; ;pic16f877.h: 1522: unsigned TRISE2 :1;
[; ;pic16f877.h: 1523: unsigned :1;
[; ;pic16f877.h: 1524: unsigned PSPMODE :1;
[; ;pic16f877.h: 1525: unsigned IBOV :1;
[; ;pic16f877.h: 1526: unsigned OBF :1;
[; ;pic16f877.h: 1527: unsigned IBF :1;
[; ;pic16f877.h: 1528: };
[; ;pic16f877.h: 1529: } TRISEbits_t;
[; ;pic16f877.h: 1530: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f877.h: 1569: extern volatile unsigned char PIE1 @ 0x08C;
"1571
[; ;pic16f877.h: 1571: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f877.h: 1574: typedef union {
[; ;pic16f877.h: 1575: struct {
[; ;pic16f877.h: 1576: unsigned TMR1IE :1;
[; ;pic16f877.h: 1577: unsigned TMR2IE :1;
[; ;pic16f877.h: 1578: unsigned CCP1IE :1;
[; ;pic16f877.h: 1579: unsigned SSPIE :1;
[; ;pic16f877.h: 1580: unsigned TXIE :1;
[; ;pic16f877.h: 1581: unsigned RCIE :1;
[; ;pic16f877.h: 1582: unsigned ADIE :1;
[; ;pic16f877.h: 1583: unsigned PSPIE :1;
[; ;pic16f877.h: 1584: };
[; ;pic16f877.h: 1585: } PIE1bits_t;
[; ;pic16f877.h: 1586: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f877.h: 1630: extern volatile unsigned char PIE2 @ 0x08D;
"1632
[; ;pic16f877.h: 1632: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f877.h: 1635: typedef union {
[; ;pic16f877.h: 1636: struct {
[; ;pic16f877.h: 1637: unsigned CCP2IE :1;
[; ;pic16f877.h: 1638: unsigned :2;
[; ;pic16f877.h: 1639: unsigned BCLIE :1;
[; ;pic16f877.h: 1640: unsigned EEIE :1;
[; ;pic16f877.h: 1641: };
[; ;pic16f877.h: 1642: } PIE2bits_t;
[; ;pic16f877.h: 1643: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f877.h: 1662: extern volatile unsigned char PCON @ 0x08E;
"1664
[; ;pic16f877.h: 1664: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f877.h: 1667: typedef union {
[; ;pic16f877.h: 1668: struct {
[; ;pic16f877.h: 1669: unsigned nBOR :1;
[; ;pic16f877.h: 1670: unsigned nPOR :1;
[; ;pic16f877.h: 1671: };
[; ;pic16f877.h: 1672: struct {
[; ;pic16f877.h: 1673: unsigned nBO :1;
[; ;pic16f877.h: 1674: };
[; ;pic16f877.h: 1675: } PCONbits_t;
[; ;pic16f877.h: 1676: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f877.h: 1695: extern volatile unsigned char SSPCON2 @ 0x091;
"1697
[; ;pic16f877.h: 1697: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f877.h: 1700: typedef union {
[; ;pic16f877.h: 1701: struct {
[; ;pic16f877.h: 1702: unsigned SEN :1;
[; ;pic16f877.h: 1703: unsigned RSEN :1;
[; ;pic16f877.h: 1704: unsigned PEN :1;
[; ;pic16f877.h: 1705: unsigned RCEN :1;
[; ;pic16f877.h: 1706: unsigned ACKEN :1;
[; ;pic16f877.h: 1707: unsigned ACKDT :1;
[; ;pic16f877.h: 1708: unsigned ACKSTAT :1;
[; ;pic16f877.h: 1709: unsigned GCEN :1;
[; ;pic16f877.h: 1710: };
[; ;pic16f877.h: 1711: } SSPCON2bits_t;
[; ;pic16f877.h: 1712: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f877.h: 1756: extern volatile unsigned char PR2 @ 0x092;
"1758
[; ;pic16f877.h: 1758: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f877.h: 1762: extern volatile unsigned char SSPADD @ 0x093;
"1764
[; ;pic16f877.h: 1764: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f877.h: 1768: extern volatile unsigned char SSPSTAT @ 0x094;
"1770
[; ;pic16f877.h: 1770: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f877.h: 1773: typedef union {
[; ;pic16f877.h: 1774: struct {
[; ;pic16f877.h: 1775: unsigned BF :1;
[; ;pic16f877.h: 1776: unsigned UA :1;
[; ;pic16f877.h: 1777: unsigned R_nW :1;
[; ;pic16f877.h: 1778: unsigned S :1;
[; ;pic16f877.h: 1779: unsigned P :1;
[; ;pic16f877.h: 1780: unsigned D_nA :1;
[; ;pic16f877.h: 1781: unsigned CKE :1;
[; ;pic16f877.h: 1782: unsigned SMP :1;
[; ;pic16f877.h: 1783: };
[; ;pic16f877.h: 1784: struct {
[; ;pic16f877.h: 1785: unsigned :2;
[; ;pic16f877.h: 1786: unsigned R :1;
[; ;pic16f877.h: 1787: unsigned :2;
[; ;pic16f877.h: 1788: unsigned D :1;
[; ;pic16f877.h: 1789: };
[; ;pic16f877.h: 1790: struct {
[; ;pic16f877.h: 1791: unsigned :2;
[; ;pic16f877.h: 1792: unsigned I2C_READ :1;
[; ;pic16f877.h: 1793: unsigned I2C_START :1;
[; ;pic16f877.h: 1794: unsigned I2C_STOP :1;
[; ;pic16f877.h: 1795: unsigned I2C_DATA :1;
[; ;pic16f877.h: 1796: };
[; ;pic16f877.h: 1797: struct {
[; ;pic16f877.h: 1798: unsigned :2;
[; ;pic16f877.h: 1799: unsigned nW :1;
[; ;pic16f877.h: 1800: unsigned :2;
[; ;pic16f877.h: 1801: unsigned nA :1;
[; ;pic16f877.h: 1802: };
[; ;pic16f877.h: 1803: struct {
[; ;pic16f877.h: 1804: unsigned :2;
[; ;pic16f877.h: 1805: unsigned nWRITE :1;
[; ;pic16f877.h: 1806: unsigned :2;
[; ;pic16f877.h: 1807: unsigned nADDRESS :1;
[; ;pic16f877.h: 1808: };
[; ;pic16f877.h: 1809: struct {
[; ;pic16f877.h: 1810: unsigned :2;
[; ;pic16f877.h: 1811: unsigned R_W :1;
[; ;pic16f877.h: 1812: unsigned :2;
[; ;pic16f877.h: 1813: unsigned D_A :1;
[; ;pic16f877.h: 1814: };
[; ;pic16f877.h: 1815: struct {
[; ;pic16f877.h: 1816: unsigned :2;
[; ;pic16f877.h: 1817: unsigned READ_WRITE :1;
[; ;pic16f877.h: 1818: unsigned :2;
[; ;pic16f877.h: 1819: unsigned DATA_ADDRESS :1;
[; ;pic16f877.h: 1820: };
[; ;pic16f877.h: 1821: } SSPSTATbits_t;
[; ;pic16f877.h: 1822: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f877.h: 1936: extern volatile unsigned char TXSTA @ 0x098;
"1938
[; ;pic16f877.h: 1938: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f877.h: 1941: typedef union {
[; ;pic16f877.h: 1942: struct {
[; ;pic16f877.h: 1943: unsigned TX9D :1;
[; ;pic16f877.h: 1944: unsigned TRMT :1;
[; ;pic16f877.h: 1945: unsigned BRGH :1;
[; ;pic16f877.h: 1946: unsigned :1;
[; ;pic16f877.h: 1947: unsigned SYNC :1;
[; ;pic16f877.h: 1948: unsigned TXEN :1;
[; ;pic16f877.h: 1949: unsigned TX9 :1;
[; ;pic16f877.h: 1950: unsigned CSRC :1;
[; ;pic16f877.h: 1951: };
[; ;pic16f877.h: 1952: struct {
[; ;pic16f877.h: 1953: unsigned TXD8 :1;
[; ;pic16f877.h: 1954: unsigned :5;
[; ;pic16f877.h: 1955: unsigned nTX8 :1;
[; ;pic16f877.h: 1956: };
[; ;pic16f877.h: 1957: struct {
[; ;pic16f877.h: 1958: unsigned :6;
[; ;pic16f877.h: 1959: unsigned TX8_9 :1;
[; ;pic16f877.h: 1960: };
[; ;pic16f877.h: 1961: } TXSTAbits_t;
[; ;pic16f877.h: 1962: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f877.h: 2016: extern volatile unsigned char SPBRG @ 0x099;
"2018
[; ;pic16f877.h: 2018: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f877.h: 2022: extern volatile unsigned char ADRESL @ 0x09E;
"2024
[; ;pic16f877.h: 2024: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f877.h: 2028: extern volatile unsigned char ADCON1 @ 0x09F;
"2030
[; ;pic16f877.h: 2030: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f877.h: 2033: typedef union {
[; ;pic16f877.h: 2034: struct {
[; ;pic16f877.h: 2035: unsigned PCFG :4;
[; ;pic16f877.h: 2036: unsigned :3;
[; ;pic16f877.h: 2037: unsigned ADFM :1;
[; ;pic16f877.h: 2038: };
[; ;pic16f877.h: 2039: struct {
[; ;pic16f877.h: 2040: unsigned PCFG0 :1;
[; ;pic16f877.h: 2041: unsigned PCFG1 :1;
[; ;pic16f877.h: 2042: unsigned PCFG2 :1;
[; ;pic16f877.h: 2043: unsigned PCFG3 :1;
[; ;pic16f877.h: 2044: };
[; ;pic16f877.h: 2045: } ADCON1bits_t;
[; ;pic16f877.h: 2046: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f877.h: 2080: extern volatile unsigned char EEDATA @ 0x10C;
"2082
[; ;pic16f877.h: 2082: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f877.h: 2086: extern volatile unsigned char EEADR @ 0x10D;
"2088
[; ;pic16f877.h: 2088: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f877.h: 2092: extern volatile unsigned char EEDATH @ 0x10E;
"2094
[; ;pic16f877.h: 2094: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f877.h: 2098: extern volatile unsigned char EEADRH @ 0x10F;
"2100
[; ;pic16f877.h: 2100: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f877.h: 2104: extern volatile unsigned char EECON1 @ 0x18C;
"2106
[; ;pic16f877.h: 2106: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f877.h: 2109: typedef union {
[; ;pic16f877.h: 2110: struct {
[; ;pic16f877.h: 2111: unsigned RD :1;
[; ;pic16f877.h: 2112: unsigned WR :1;
[; ;pic16f877.h: 2113: unsigned WREN :1;
[; ;pic16f877.h: 2114: unsigned WRERR :1;
[; ;pic16f877.h: 2115: unsigned :3;
[; ;pic16f877.h: 2116: unsigned EEPGD :1;
[; ;pic16f877.h: 2117: };
[; ;pic16f877.h: 2118: } EECON1bits_t;
[; ;pic16f877.h: 2119: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f877.h: 2148: extern volatile unsigned char EECON2 @ 0x18D;
"2150
[; ;pic16f877.h: 2150: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f877.h: 2160: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f877.h: 2162: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f877.h: 2164: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f877.h: 2166: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f877.h: 2168: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f877.h: 2170: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f877.h: 2172: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f877.h: 2174: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f877.h: 2176: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f877.h: 2178: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f877.h: 2180: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f877.h: 2182: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f877.h: 2184: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f877.h: 2186: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f877.h: 2188: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f877.h: 2190: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f877.h: 2192: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f877.h: 2194: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f877.h: 2196: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f877.h: 2198: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f877.h: 2200: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f877.h: 2202: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f877.h: 2204: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f877.h: 2206: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f877.h: 2208: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f877.h: 2210: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f877.h: 2212: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f877.h: 2214: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f877.h: 2216: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f877.h: 2218: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f877.h: 2220: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f877.h: 2222: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f877.h: 2224: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f877.h: 2226: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f877.h: 2228: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f877.h: 2230: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f877.h: 2232: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f877.h: 2234: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f877.h: 2236: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2238: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f877.h: 2240: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2242: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2244: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f877.h: 2246: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f877.h: 2248: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f877.h: 2250: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f877.h: 2252: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f877.h: 2254: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f877.h: 2256: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877.h: 2258: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877.h: 2260: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877.h: 2262: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2264: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877.h: 2266: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f877.h: 2268: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f877.h: 2270: extern volatile __bit IBF @ (((unsigned) &TRISE)*8) + 7;
[; ;pic16f877.h: 2272: extern volatile __bit IBOV @ (((unsigned) &TRISE)*8) + 5;
[; ;pic16f877.h: 2274: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f877.h: 2276: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f877.h: 2278: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f877.h: 2280: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f877.h: 2282: extern volatile __bit OBF @ (((unsigned) &TRISE)*8) + 6;
[; ;pic16f877.h: 2284: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f877.h: 2286: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f877.h: 2288: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f877.h: 2290: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f877.h: 2292: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f877.h: 2294: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f877.h: 2296: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f877.h: 2298: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f877.h: 2300: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f877.h: 2302: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f877.h: 2304: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f877.h: 2306: extern volatile __bit PSPIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f877.h: 2308: extern volatile __bit PSPIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f877.h: 2310: extern volatile __bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;
[; ;pic16f877.h: 2312: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f877.h: 2314: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f877.h: 2316: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f877.h: 2318: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f877.h: 2320: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f877.h: 2322: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f877.h: 2324: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f877.h: 2326: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f877.h: 2328: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f877.h: 2330: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f877.h: 2332: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f877.h: 2334: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f877.h: 2336: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f877.h: 2338: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f877.h: 2340: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f877.h: 2342: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f877.h: 2344: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f877.h: 2346: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f877.h: 2348: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f877.h: 2350: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f877.h: 2352: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f877.h: 2354: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f877.h: 2356: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f877.h: 2358: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f877.h: 2360: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877.h: 2362: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877.h: 2364: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877.h: 2366: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f877.h: 2368: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f877.h: 2370: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f877.h: 2372: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f877.h: 2374: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f877.h: 2376: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f877.h: 2378: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f877.h: 2380: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f877.h: 2382: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f877.h: 2384: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f877.h: 2386: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f877.h: 2388: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f877.h: 2390: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f877.h: 2392: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f877.h: 2394: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f877.h: 2396: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877.h: 2398: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f877.h: 2400: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f877.h: 2402: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f877.h: 2404: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877.h: 2406: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877.h: 2408: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877.h: 2410: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877.h: 2412: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f877.h: 2414: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f877.h: 2416: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f877.h: 2418: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f877.h: 2420: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f877.h: 2422: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f877.h: 2424: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f877.h: 2426: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f877.h: 2428: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f877.h: 2430: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f877.h: 2432: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f877.h: 2434: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f877.h: 2436: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f877.h: 2438: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f877.h: 2440: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877.h: 2442: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877.h: 2444: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f877.h: 2446: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f877.h: 2448: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f877.h: 2450: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877.h: 2452: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f877.h: 2454: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877.h: 2456: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f877.h: 2458: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f877.h: 2460: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877.h: 2462: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877.h: 2464: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f877.h: 2466: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f877.h: 2468: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f877.h: 2470: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f877.h: 2472: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f877.h: 2474: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f877.h: 2476: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f877.h: 2478: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f877.h: 2480: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f877.h: 2482: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f877.h: 2484: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f877.h: 2486: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f877.h: 2488: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f877.h: 2490: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f877.h: 2492: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f877.h: 2494: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f877.h: 2496: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f877.h: 2498: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f877.h: 2500: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f877.h: 2502: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f877.h: 2504: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f877.h: 2506: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f877.h: 2508: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f877.h: 2510: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f877.h: 2512: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f877.h: 2514: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f877.h: 2516: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f877.h: 2518: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f877.h: 2520: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f877.h: 2522: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f877.h: 2524: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f877.h: 2526: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f877.h: 2528: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f877.h: 2530: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f877.h: 2532: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f877.h: 2534: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f877.h: 2536: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f877.h: 2538: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f877.h: 2540: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f877.h: 2542: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f877.h: 2544: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f877.h: 2546: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f877.h: 2548: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f877.h: 2550: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f877.h: 2552: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f877.h: 2554: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877.h: 2556: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877.h: 2558: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877.h: 2560: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877.h: 2562: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f877.h: 2564: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f877.h: 2566: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f877.h: 2568: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f877.h: 2570: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f877.h: 2572: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f877.h: 2574: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f877.h: 2576: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f877.h: 2578: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f877.h: 2580: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2582: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2584: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877.h: 2586: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877.h: 2588: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877.h: 2590: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f877.h: 2592: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f877.h: 2594: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f877.h: 2596: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877.h: 2598: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877.h: 2600: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f877.h: 2602: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877.h: 2604: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877.h: 2606: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 80: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 154: extern __nonreentrant void _delay(unsigned long);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
"26 Tonche_16F877.h
[p x FOSC=HS ]
"27
[p x WDTE=OFF ]
"28
[p x PWRTE=OFF ]
"29
[p x CP=OFF ]
"30
[p x BOREN=OFF ]
"31
[p x LVP=OFF ]
"32
[p x CPD=OFF ]
"33
[p x WRT=ON ]
[; ;Tonche_16F877.h: 46: void TxRxOcurredReset(void);
[; ;Tonche_16F877.h: 47: void SSPInterruptEnable(void);
[; ;Tonche_16F877.h: 48: void SSPInterruptDisable(void);
[; ;Tonche_16F877.h: 49: void spiCLKpolarity(char polarity);
[; ;Tonche_16F877.h: 50: int ADInterrupt(void);
[; ;Tonche_16F877.h: 51: void ADInterruptReset(void);
[; ;Tonche_16F877.h: 52: int usartRXint(void);
[; ;Tonche_16F877.h: 53: int usartTXint(void);
[; ;Tonche_16F877.h: 54: int SSPIFinterrupt(void);
[; ;Tonche_16F877.h: 55: int CCP1IFInterrupt(void);
[; ;Tonche_16F877.h: 56: void CCP1IFReset(void);
[; ;Tonche_16F877.h: 57: int TMR2IFInterrupt(void);
[; ;Tonche_16F877.h: 58: void TMR2FReset(void);
[; ;Tonche_16F877.h: 59: int TMR1Interrupt(void);
[; ;Tonche_16F877.h: 60: void TMR1IFReset(void);
[; ;Tonche_16F877.h: 61: void EEPROMwriteIntEn(int mode);
[; ;Tonche_16F877.h: 62: void BusCollisionEnable(int mode);
[; ;Tonche_16F877.h: 63: void CCP2InterruptEnable(int mode);
[; ;Tonche_16F877.h: 64: int EEPROMWriteFlag(void);
[; ;Tonche_16F877.h: 65: int BusCollisionFlag(void);
[; ;Tonche_16F877.h: 66: int CCP2Flag(void);
[; ;Tonche_16F877.h: 67: void EEPROMFlagReset(void);
[; ;Tonche_16F877.h: 68: void BusColisionReset(void);
[; ;Tonche_16F877.h: 69: void CCP2FlagReset(void);
[; ;Tonche_16F877.h: 70: void ExternalIntEnable(int mode);
[; ;Tonche_16F877.h: 71: void ExternalIntEnable(int mode);
[; ;Tonche_16F877.h: 72: void PortBChangeIntEnable(int mode);
[; ;Tonche_16F877.h: 73: int TMR0Overflow(void);
[; ;Tonche_16F877.h: 74: int ExternalInt(void);
[; ;Tonche_16F877.h: 75: void ExternalIntReset(void);
[; ;Tonche_16F877.h: 76: int PortBChangeInt(void);
[; ;Tonche_16F877.h: 77: void TMR0IntReset(void);
[; ;Tonche_16F877.h: 78: int TMR0Overflow(void);
[; ;Tonche_16F877.h: 79: void PortBChangeIntEnable(int mode);
[; ;Tonche_16F877.h: 80: void ExternalIntEnable(int mode);
[; ;Tonche_16F877.h: 81: void timer0IntEnable(int mode);
[; ;Tonche_16F877.h: 82: void PeripheralIntEnable(int mode);
[; ;Tonche_16F877.h: 83: void GlobalInterruptEnable(int mode);
[; ;Tonche_16F877.h: 84: int spiRead(void);
[; ;Tonche_16F877.h: 85: void ADPortConfiguration(const int config);
[; ;Tonche_16F877.h: 86: int spiBufferfull(void);
[; ;Tonche_16F877.h: 87: void spiSlavebegin(void);
[; ;Tonche_16F877.h: 88: void spiMasterbegin(void);
[; ;Tonche_16F877.h: 89: void tmr1Prescaler(int rate);
[; ;Tonche_16F877.h: 90: int timer1read(void);
[; ;Tonche_16F877.h: 91: void timerCounter1start(void);
[; ;Tonche_16F877.h: 92: void counter1begin(void);
[; ;Tonche_16F877.h: 93: void timer1begin(void);
[; ;Tonche_16F877.h: 94: void preventiveWDTtoTMR0(void);
[; ;Tonche_16F877.h: 95: void timerCounter0Prescaler(const int rate);
[; ;Tonche_16F877.h: 96: void timer0begin(void);
[; ;Tonche_16F877.h: 97: void counter0begin(char edge);
[; ;Tonche_16F877.h: 98: void digitalWrite(int pin, char port, char value);
[; ;Tonche_16F877.h: 99: void setup(void);
[; ;Tonche_16F877.h: 100: void loop(void);
[; ;Tonche_16F877.h: 101: void portaMode(int pin, char mode);
[; ;Tonche_16F877.h: 102: void portbMode(int pin, char mode);
[; ;Tonche_16F877.h: 103: void portcMode(int pin, char mode);
[; ;Tonche_16F877.h: 104: void portdMode(int pin, char mode);
[; ;Tonche_16F877.h: 105: void porteMode(int pin, char mode);
[; ;Tonche_16F877.h: 106: int digitalRead(int pin, char port);
[; ;Tonche_16F877.h: 107: void digitalWrite(int pin, char port, char value);
"108
[v _main `(i ~T0 @X0 1 ef ]
"109
{
[; ;Tonche_16F877.h: 108: int main(void)
[; ;Tonche_16F877.h: 109: {
[e :U _main ]
[f ]
[; ;Tonche_16F877.h: 110: setup();
"110
[e ( _setup ..  ]
[; ;Tonche_16F877.h: 111: while(1)
"111
[e :U 93 ]
[; ;Tonche_16F877.h: 112: {
"112
{
[; ;Tonche_16F877.h: 113: loop();
"113
[e ( _loop ..  ]
"114
}
[e :U 92 ]
"111
[e $U 93  ]
[e :U 94 ]
[; ;Tonche_16F877.h: 114: }
[; ;Tonche_16F877.h: 115: }
"115
[e :UE 91 ]
}
"125
[v _portaMode `(v ~T0 @X0 1 ef2`i`uc ]
"126
{
[; ;Tonche_16F877.h: 125: void portaMode(int pin, char mode)
[; ;Tonche_16F877.h: 126: {
[e :U _portaMode ]
"125
[v _pin `i ~T0 @X0 1 r1 ]
[v _mode `uc ~T0 @X0 1 r2 ]
"126
[f ]
[; ;Tonche_16F877.h: 127: if(pin >= 6)
"127
[e $ ! >= _pin -> 6 `i 96  ]
[; ;Tonche_16F877.h: 128: {
"128
{
[; ;Tonche_16F877.h: 129: pin = 5;
"129
[e = _pin -> 5 `i ]
[; ;Tonche_16F877.h: 130: if((mode == 'I') || (mode == 'i'))
"130
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 97  ]
[; ;Tonche_16F877.h: 131: {
"131
{
[; ;Tonche_16F877.h: 132: TRISAbits.TRISA5 = 1;
"132
[e = . . _TRISAbits 0 5 -> -> 1 `i `uc ]
"133
}
[; ;Tonche_16F877.h: 133: }
[e $U 98  ]
"134
[e :U 97 ]
[; ;Tonche_16F877.h: 134: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 99  ]
[; ;Tonche_16F877.h: 135: {
"135
{
[; ;Tonche_16F877.h: 136: TRISAbits.TRISA5 = 0;
"136
[e = . . _TRISAbits 0 5 -> -> 0 `i `uc ]
"137
}
[e :U 99 ]
"138
[e :U 98 ]
}
[; ;Tonche_16F877.h: 137: }
[; ;Tonche_16F877.h: 138: }
[e $U 100  ]
"139
[e :U 96 ]
[; ;Tonche_16F877.h: 139: else
[; ;Tonche_16F877.h: 140: {
"140
{
[; ;Tonche_16F877.h: 141: switch(pin)
"141
[e $U 102  ]
[; ;Tonche_16F877.h: 142: {
"142
{
[; ;Tonche_16F877.h: 143: case 0:
"143
[e :U 103 ]
[; ;Tonche_16F877.h: 144: if((mode == 'I') || (mode == 'i'))
"144
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 104  ]
[; ;Tonche_16F877.h: 145: {
"145
{
[; ;Tonche_16F877.h: 146: TRISAbits.TRISA0 = 1;
"146
[e = . . _TRISAbits 0 0 -> -> 1 `i `uc ]
"147
}
[; ;Tonche_16F877.h: 147: }
[e $U 105  ]
"148
[e :U 104 ]
[; ;Tonche_16F877.h: 148: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 106  ]
[; ;Tonche_16F877.h: 149: {
"149
{
[; ;Tonche_16F877.h: 150: TRISAbits.TRISA0 = 0;
"150
[e = . . _TRISAbits 0 0 -> -> 0 `i `uc ]
"151
}
[e :U 106 ]
"152
[e :U 105 ]
[; ;Tonche_16F877.h: 151: }
[; ;Tonche_16F877.h: 152: break;
[e $U 101  ]
[; ;Tonche_16F877.h: 153: case 1:
"153
[e :U 107 ]
[; ;Tonche_16F877.h: 154: if((mode == 'I') || (mode == 'i'))
"154
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 108  ]
[; ;Tonche_16F877.h: 155: {
"155
{
[; ;Tonche_16F877.h: 156: TRISAbits.TRISA1 = 1;
"156
[e = . . _TRISAbits 0 1 -> -> 1 `i `uc ]
"157
}
[; ;Tonche_16F877.h: 157: }
[e $U 109  ]
"158
[e :U 108 ]
[; ;Tonche_16F877.h: 158: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 110  ]
[; ;Tonche_16F877.h: 159: {
"159
{
[; ;Tonche_16F877.h: 160: TRISAbits.TRISA1 = 0;
"160
[e = . . _TRISAbits 0 1 -> -> 0 `i `uc ]
"161
}
[e :U 110 ]
"162
[e :U 109 ]
[; ;Tonche_16F877.h: 161: }
[; ;Tonche_16F877.h: 162: break;
[e $U 101  ]
[; ;Tonche_16F877.h: 163: case 2:
"163
[e :U 111 ]
[; ;Tonche_16F877.h: 164: if((mode == 'I') || (mode == 'i'))
"164
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 112  ]
[; ;Tonche_16F877.h: 165: {
"165
{
[; ;Tonche_16F877.h: 166: TRISAbits.TRISA2 = 1;
"166
[e = . . _TRISAbits 0 2 -> -> 1 `i `uc ]
"167
}
[; ;Tonche_16F877.h: 167: }
[e $U 113  ]
"168
[e :U 112 ]
[; ;Tonche_16F877.h: 168: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 114  ]
[; ;Tonche_16F877.h: 169: {
"169
{
[; ;Tonche_16F877.h: 170: TRISAbits.TRISA2 = 0;
"170
[e = . . _TRISAbits 0 2 -> -> 0 `i `uc ]
"171
}
[e :U 114 ]
"172
[e :U 113 ]
[; ;Tonche_16F877.h: 171: }
[; ;Tonche_16F877.h: 172: break;
[e $U 101  ]
[; ;Tonche_16F877.h: 173: case 3:
"173
[e :U 115 ]
[; ;Tonche_16F877.h: 174: if((mode == 'I') || (mode == 'i'))
"174
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 116  ]
[; ;Tonche_16F877.h: 175: {
"175
{
[; ;Tonche_16F877.h: 176: TRISAbits.TRISA3 = 1;
"176
[e = . . _TRISAbits 0 3 -> -> 1 `i `uc ]
"177
}
[; ;Tonche_16F877.h: 177: }
[e $U 117  ]
"178
[e :U 116 ]
[; ;Tonche_16F877.h: 178: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 118  ]
[; ;Tonche_16F877.h: 179: {
"179
{
[; ;Tonche_16F877.h: 180: TRISAbits.TRISA3 = 0;
"180
[e = . . _TRISAbits 0 3 -> -> 0 `i `uc ]
"181
}
[e :U 118 ]
"182
[e :U 117 ]
[; ;Tonche_16F877.h: 181: }
[; ;Tonche_16F877.h: 182: break;
[e $U 101  ]
[; ;Tonche_16F877.h: 183: case 4:
"183
[e :U 119 ]
[; ;Tonche_16F877.h: 184: if((mode == 'I') || (mode == 'i'))
"184
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 120  ]
[; ;Tonche_16F877.h: 185: {
"185
{
[; ;Tonche_16F877.h: 186: TRISAbits.TRISA4 = 1;
"186
[e = . . _TRISAbits 0 4 -> -> 1 `i `uc ]
"187
}
[; ;Tonche_16F877.h: 187: }
[e $U 121  ]
"188
[e :U 120 ]
[; ;Tonche_16F877.h: 188: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 122  ]
[; ;Tonche_16F877.h: 189: {
"189
{
[; ;Tonche_16F877.h: 190: TRISAbits.TRISA4 = 0;
"190
[e = . . _TRISAbits 0 4 -> -> 0 `i `uc ]
"191
}
[e :U 122 ]
"192
[e :U 121 ]
[; ;Tonche_16F877.h: 191: }
[; ;Tonche_16F877.h: 192: break;
[e $U 101  ]
[; ;Tonche_16F877.h: 193: case 5:
"193
[e :U 123 ]
[; ;Tonche_16F877.h: 194: if((mode == 'I') || (mode == 'i'))
"194
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 124  ]
[; ;Tonche_16F877.h: 195: {
"195
{
[; ;Tonche_16F877.h: 196: TRISAbits.TRISA5 = 1;
"196
[e = . . _TRISAbits 0 5 -> -> 1 `i `uc ]
"197
}
[; ;Tonche_16F877.h: 197: }
[e $U 125  ]
"198
[e :U 124 ]
[; ;Tonche_16F877.h: 198: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 126  ]
[; ;Tonche_16F877.h: 199: {
"199
{
[; ;Tonche_16F877.h: 200: TRISAbits.TRISA5 = 0;
"200
[e = . . _TRISAbits 0 5 -> -> 0 `i `uc ]
"201
}
[e :U 126 ]
"202
[e :U 125 ]
[; ;Tonche_16F877.h: 201: }
[; ;Tonche_16F877.h: 202: break;
[e $U 101  ]
"203
}
[; ;Tonche_16F877.h: 203: }
[e $U 101  ]
"141
[e :U 102 ]
[e [\ _pin , $ -> 0 `i 103
 , $ -> 1 `i 107
 , $ -> 2 `i 111
 , $ -> 3 `i 115
 , $ -> 4 `i 119
 , $ -> 5 `i 123
 101 ]
"203
[e :U 101 ]
"205
}
[e :U 100 ]
[; ;Tonche_16F877.h: 205: }
[; ;Tonche_16F877.h: 206: }
"206
[e :UE 95 ]
}
"207
[v _portbMode `(v ~T0 @X0 1 ef2`i`uc ]
"208
{
[; ;Tonche_16F877.h: 207: void portbMode(int pin, char mode)
[; ;Tonche_16F877.h: 208: {
[e :U _portbMode ]
"207
[v _pin `i ~T0 @X0 1 r1 ]
[v _mode `uc ~T0 @X0 1 r2 ]
"208
[f ]
[; ;Tonche_16F877.h: 209: if(pin >= 8)
"209
[e $ ! >= _pin -> 8 `i 128  ]
[; ;Tonche_16F877.h: 210: {
"210
{
[; ;Tonche_16F877.h: 211: pin = 7;
"211
[e = _pin -> 7 `i ]
[; ;Tonche_16F877.h: 212: if((mode == 'I') || (mode == 'i'))
"212
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 129  ]
[; ;Tonche_16F877.h: 213: {
"213
{
[; ;Tonche_16F877.h: 214: TRISBbits.TRISB7 = 1;
"214
[e = . . _TRISBbits 0 7 -> -> 1 `i `uc ]
"215
}
[; ;Tonche_16F877.h: 215: }
[e $U 130  ]
"216
[e :U 129 ]
[; ;Tonche_16F877.h: 216: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 131  ]
[; ;Tonche_16F877.h: 217: {
"217
{
[; ;Tonche_16F877.h: 218: TRISBbits.TRISB7 = 0;
"218
[e = . . _TRISBbits 0 7 -> -> 0 `i `uc ]
"219
}
[e :U 131 ]
"220
[e :U 130 ]
}
[; ;Tonche_16F877.h: 219: }
[; ;Tonche_16F877.h: 220: }
[e $U 132  ]
"221
[e :U 128 ]
[; ;Tonche_16F877.h: 221: else
[; ;Tonche_16F877.h: 222: {
"222
{
[; ;Tonche_16F877.h: 223: switch(pin)
"223
[e $U 134  ]
[; ;Tonche_16F877.h: 224: {
"224
{
[; ;Tonche_16F877.h: 225: case 0:
"225
[e :U 135 ]
[; ;Tonche_16F877.h: 226: if((mode == 'I')||(mode == 'i'))
"226
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 136  ]
[; ;Tonche_16F877.h: 227: {
"227
{
[; ;Tonche_16F877.h: 228: TRISBbits.TRISB0 = 1;
"228
[e = . . _TRISBbits 0 0 -> -> 1 `i `uc ]
"229
}
[; ;Tonche_16F877.h: 229: }
[e $U 137  ]
"230
[e :U 136 ]
[; ;Tonche_16F877.h: 230: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 138  ]
[; ;Tonche_16F877.h: 231: {
"231
{
[; ;Tonche_16F877.h: 232: TRISBbits.TRISB0 = 0;
"232
[e = . . _TRISBbits 0 0 -> -> 0 `i `uc ]
"233
}
[e :U 138 ]
"234
[e :U 137 ]
[; ;Tonche_16F877.h: 233: }
[; ;Tonche_16F877.h: 234: break;
[e $U 133  ]
[; ;Tonche_16F877.h: 235: case 1:
"235
[e :U 139 ]
[; ;Tonche_16F877.h: 236: if((mode == 'I')||(mode == 'i'))
"236
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 140  ]
[; ;Tonche_16F877.h: 237: {
"237
{
[; ;Tonche_16F877.h: 238: TRISBbits.TRISB1 = 1;
"238
[e = . . _TRISBbits 0 1 -> -> 1 `i `uc ]
"239
}
[; ;Tonche_16F877.h: 239: }
[e $U 141  ]
"240
[e :U 140 ]
[; ;Tonche_16F877.h: 240: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 142  ]
[; ;Tonche_16F877.h: 241: {
"241
{
[; ;Tonche_16F877.h: 242: TRISBbits.TRISB1 = 0;
"242
[e = . . _TRISBbits 0 1 -> -> 0 `i `uc ]
"243
}
[e :U 142 ]
"244
[e :U 141 ]
[; ;Tonche_16F877.h: 243: }
[; ;Tonche_16F877.h: 244: break;
[e $U 133  ]
[; ;Tonche_16F877.h: 245: case 2:
"245
[e :U 143 ]
[; ;Tonche_16F877.h: 246: if((mode == 'I')||(mode == 'i'))
"246
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 144  ]
[; ;Tonche_16F877.h: 247: {
"247
{
[; ;Tonche_16F877.h: 248: TRISBbits.TRISB2 = 1;
"248
[e = . . _TRISBbits 0 2 -> -> 1 `i `uc ]
"249
}
[; ;Tonche_16F877.h: 249: }
[e $U 145  ]
"250
[e :U 144 ]
[; ;Tonche_16F877.h: 250: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 146  ]
[; ;Tonche_16F877.h: 251: {
"251
{
[; ;Tonche_16F877.h: 252: TRISBbits.TRISB2 = 0;
"252
[e = . . _TRISBbits 0 2 -> -> 0 `i `uc ]
"253
}
[e :U 146 ]
"254
[e :U 145 ]
[; ;Tonche_16F877.h: 253: }
[; ;Tonche_16F877.h: 254: break;
[e $U 133  ]
[; ;Tonche_16F877.h: 255: case 3:
"255
[e :U 147 ]
[; ;Tonche_16F877.h: 256: if((mode == 'I')||(mode == 'i'))
"256
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 148  ]
[; ;Tonche_16F877.h: 257: {
"257
{
[; ;Tonche_16F877.h: 258: TRISBbits.TRISB3 = 1;
"258
[e = . . _TRISBbits 0 3 -> -> 1 `i `uc ]
"259
}
[; ;Tonche_16F877.h: 259: }
[e $U 149  ]
"260
[e :U 148 ]
[; ;Tonche_16F877.h: 260: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 150  ]
[; ;Tonche_16F877.h: 261: {
"261
{
[; ;Tonche_16F877.h: 262: TRISBbits.TRISB3 = 0;
"262
[e = . . _TRISBbits 0 3 -> -> 0 `i `uc ]
"263
}
[e :U 150 ]
"264
[e :U 149 ]
[; ;Tonche_16F877.h: 263: }
[; ;Tonche_16F877.h: 264: break;
[e $U 133  ]
[; ;Tonche_16F877.h: 265: case 4:
"265
[e :U 151 ]
[; ;Tonche_16F877.h: 266: if((mode == 'I')||(mode == 'i'))
"266
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 152  ]
[; ;Tonche_16F877.h: 267: {
"267
{
[; ;Tonche_16F877.h: 268: TRISBbits.TRISB4 = 1;
"268
[e = . . _TRISBbits 0 4 -> -> 1 `i `uc ]
"269
}
[; ;Tonche_16F877.h: 269: }
[e $U 153  ]
"270
[e :U 152 ]
[; ;Tonche_16F877.h: 270: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 154  ]
[; ;Tonche_16F877.h: 271: {
"271
{
[; ;Tonche_16F877.h: 272: TRISBbits.TRISB4 = 0;
"272
[e = . . _TRISBbits 0 4 -> -> 0 `i `uc ]
"273
}
[e :U 154 ]
"274
[e :U 153 ]
[; ;Tonche_16F877.h: 273: }
[; ;Tonche_16F877.h: 274: break;
[e $U 133  ]
[; ;Tonche_16F877.h: 275: case 5:
"275
[e :U 155 ]
[; ;Tonche_16F877.h: 276: if((mode == 'I')||(mode == 'i'))
"276
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 156  ]
[; ;Tonche_16F877.h: 277: {
"277
{
[; ;Tonche_16F877.h: 278: TRISBbits.TRISB5 = 1;
"278
[e = . . _TRISBbits 0 5 -> -> 1 `i `uc ]
"279
}
[; ;Tonche_16F877.h: 279: }
[e $U 157  ]
"280
[e :U 156 ]
[; ;Tonche_16F877.h: 280: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 158  ]
[; ;Tonche_16F877.h: 281: {
"281
{
[; ;Tonche_16F877.h: 282: TRISBbits.TRISB5 = 0;
"282
[e = . . _TRISBbits 0 5 -> -> 0 `i `uc ]
"283
}
[e :U 158 ]
"284
[e :U 157 ]
[; ;Tonche_16F877.h: 283: }
[; ;Tonche_16F877.h: 284: break;
[e $U 133  ]
[; ;Tonche_16F877.h: 285: case 6:
"285
[e :U 159 ]
[; ;Tonche_16F877.h: 286: if((mode == 'I')||(mode == 'i'))
"286
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 160  ]
[; ;Tonche_16F877.h: 287: {
"287
{
[; ;Tonche_16F877.h: 288: TRISBbits.TRISB6 = 1;
"288
[e = . . _TRISBbits 0 6 -> -> 1 `i `uc ]
"289
}
[; ;Tonche_16F877.h: 289: }
[e $U 161  ]
"290
[e :U 160 ]
[; ;Tonche_16F877.h: 290: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 162  ]
[; ;Tonche_16F877.h: 291: {
"291
{
[; ;Tonche_16F877.h: 292: TRISBbits.TRISB6 = 0;
"292
[e = . . _TRISBbits 0 6 -> -> 0 `i `uc ]
"293
}
[e :U 162 ]
"294
[e :U 161 ]
[; ;Tonche_16F877.h: 293: }
[; ;Tonche_16F877.h: 294: break;
[e $U 133  ]
[; ;Tonche_16F877.h: 295: case 7:
"295
[e :U 163 ]
[; ;Tonche_16F877.h: 296: if((mode == 'I')||(mode == 'i'))
"296
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 164  ]
[; ;Tonche_16F877.h: 297: {
"297
{
[; ;Tonche_16F877.h: 298: TRISBbits.TRISB7 = 1;
"298
[e = . . _TRISBbits 0 7 -> -> 1 `i `uc ]
"299
}
[; ;Tonche_16F877.h: 299: }
[e $U 165  ]
"300
[e :U 164 ]
[; ;Tonche_16F877.h: 300: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 166  ]
[; ;Tonche_16F877.h: 301: {
"301
{
[; ;Tonche_16F877.h: 302: TRISBbits.TRISB7 = 0;
"302
[e = . . _TRISBbits 0 7 -> -> 0 `i `uc ]
"303
}
[e :U 166 ]
"304
[e :U 165 ]
[; ;Tonche_16F877.h: 303: }
[; ;Tonche_16F877.h: 304: break;
[e $U 133  ]
"305
}
[; ;Tonche_16F877.h: 305: }
[e $U 133  ]
"223
[e :U 134 ]
[e [\ _pin , $ -> 0 `i 135
 , $ -> 1 `i 139
 , $ -> 2 `i 143
 , $ -> 3 `i 147
 , $ -> 4 `i 151
 , $ -> 5 `i 155
 , $ -> 6 `i 159
 , $ -> 7 `i 163
 133 ]
"305
[e :U 133 ]
"306
}
[e :U 132 ]
[; ;Tonche_16F877.h: 306: }
[; ;Tonche_16F877.h: 307: }
"307
[e :UE 127 ]
}
"308
[v _portcMode `(v ~T0 @X0 1 ef2`i`uc ]
"309
{
[; ;Tonche_16F877.h: 308: void portcMode(int pin, char mode)
[; ;Tonche_16F877.h: 309: {
[e :U _portcMode ]
"308
[v _pin `i ~T0 @X0 1 r1 ]
[v _mode `uc ~T0 @X0 1 r2 ]
"309
[f ]
[; ;Tonche_16F877.h: 310: if(pin >= 8)
"310
[e $ ! >= _pin -> 8 `i 168  ]
[; ;Tonche_16F877.h: 311: {
"311
{
[; ;Tonche_16F877.h: 312: pin = 7;
"312
[e = _pin -> 7 `i ]
[; ;Tonche_16F877.h: 313: if((mode == 'I')||(mode == 'i'))
"313
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 169  ]
[; ;Tonche_16F877.h: 314: {
"314
{
[; ;Tonche_16F877.h: 315: TRISCbits.TRISC7 = 1;
"315
[e = . . _TRISCbits 0 7 -> -> 1 `i `uc ]
"316
}
[; ;Tonche_16F877.h: 316: }
[e $U 170  ]
"317
[e :U 169 ]
[; ;Tonche_16F877.h: 317: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 171  ]
[; ;Tonche_16F877.h: 318: {
"318
{
[; ;Tonche_16F877.h: 319: TRISCbits.TRISC7 = 0;
"319
[e = . . _TRISCbits 0 7 -> -> 0 `i `uc ]
"320
}
[e :U 171 ]
"321
[e :U 170 ]
}
[; ;Tonche_16F877.h: 320: }
[; ;Tonche_16F877.h: 321: }
[e $U 172  ]
"322
[e :U 168 ]
[; ;Tonche_16F877.h: 322: else
[; ;Tonche_16F877.h: 323: {
"323
{
[; ;Tonche_16F877.h: 324: switch(pin)
"324
[e $U 174  ]
[; ;Tonche_16F877.h: 325: {
"325
{
[; ;Tonche_16F877.h: 326: case 0:
"326
[e :U 175 ]
[; ;Tonche_16F877.h: 327: if((mode == 'I')||(mode == 'i'))
"327
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 176  ]
[; ;Tonche_16F877.h: 328: {
"328
{
[; ;Tonche_16F877.h: 329: TRISCbits.TRISC0 = 1;
"329
[e = . . _TRISCbits 0 0 -> -> 1 `i `uc ]
"330
}
[; ;Tonche_16F877.h: 330: }
[e $U 177  ]
"331
[e :U 176 ]
[; ;Tonche_16F877.h: 331: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 178  ]
[; ;Tonche_16F877.h: 332: {
"332
{
[; ;Tonche_16F877.h: 333: TRISCbits.TRISC0 = 0;
"333
[e = . . _TRISCbits 0 0 -> -> 0 `i `uc ]
"334
}
[e :U 178 ]
"335
[e :U 177 ]
[; ;Tonche_16F877.h: 334: }
[; ;Tonche_16F877.h: 335: break;
[e $U 173  ]
[; ;Tonche_16F877.h: 336: case 1:
"336
[e :U 179 ]
[; ;Tonche_16F877.h: 337: if((mode == 'I')||(mode == 'i'))
"337
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 180  ]
[; ;Tonche_16F877.h: 338: {
"338
{
[; ;Tonche_16F877.h: 339: TRISCbits.TRISC1 = 1;
"339
[e = . . _TRISCbits 0 1 -> -> 1 `i `uc ]
"340
}
[; ;Tonche_16F877.h: 340: }
[e $U 181  ]
"341
[e :U 180 ]
[; ;Tonche_16F877.h: 341: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 182  ]
[; ;Tonche_16F877.h: 342: {
"342
{
[; ;Tonche_16F877.h: 343: TRISCbits.TRISC1 = 0;
"343
[e = . . _TRISCbits 0 1 -> -> 0 `i `uc ]
"344
}
[e :U 182 ]
"345
[e :U 181 ]
[; ;Tonche_16F877.h: 344: }
[; ;Tonche_16F877.h: 345: break;
[e $U 173  ]
[; ;Tonche_16F877.h: 346: case 2:
"346
[e :U 183 ]
[; ;Tonche_16F877.h: 347: if((mode == 'I')||(mode == 'i'))
"347
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 184  ]
[; ;Tonche_16F877.h: 348: {
"348
{
[; ;Tonche_16F877.h: 349: TRISCbits.TRISC2 = 1;
"349
[e = . . _TRISCbits 0 2 -> -> 1 `i `uc ]
"350
}
[; ;Tonche_16F877.h: 350: }
[e $U 185  ]
"351
[e :U 184 ]
[; ;Tonche_16F877.h: 351: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 186  ]
[; ;Tonche_16F877.h: 352: {
"352
{
[; ;Tonche_16F877.h: 353: TRISCbits.TRISC2 = 0;
"353
[e = . . _TRISCbits 0 2 -> -> 0 `i `uc ]
"354
}
[e :U 186 ]
"355
[e :U 185 ]
[; ;Tonche_16F877.h: 354: }
[; ;Tonche_16F877.h: 355: break;
[e $U 173  ]
[; ;Tonche_16F877.h: 356: case 3:
"356
[e :U 187 ]
[; ;Tonche_16F877.h: 357: if((mode == 'I')||(mode == 'i'))
"357
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 188  ]
[; ;Tonche_16F877.h: 358: {
"358
{
[; ;Tonche_16F877.h: 359: TRISCbits.TRISC3 = 1;
"359
[e = . . _TRISCbits 0 3 -> -> 1 `i `uc ]
"360
}
[; ;Tonche_16F877.h: 360: }
[e $U 189  ]
"361
[e :U 188 ]
[; ;Tonche_16F877.h: 361: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 190  ]
[; ;Tonche_16F877.h: 362: {
"362
{
[; ;Tonche_16F877.h: 363: TRISCbits.TRISC3 = 0;
"363
[e = . . _TRISCbits 0 3 -> -> 0 `i `uc ]
"364
}
[e :U 190 ]
"365
[e :U 189 ]
[; ;Tonche_16F877.h: 364: }
[; ;Tonche_16F877.h: 365: break;
[e $U 173  ]
[; ;Tonche_16F877.h: 366: case 4:
"366
[e :U 191 ]
[; ;Tonche_16F877.h: 367: if((mode == 'I')||(mode == 'i'))
"367
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 192  ]
[; ;Tonche_16F877.h: 368: {
"368
{
[; ;Tonche_16F877.h: 369: TRISCbits.TRISC4 = 1;
"369
[e = . . _TRISCbits 0 4 -> -> 1 `i `uc ]
"370
}
[; ;Tonche_16F877.h: 370: }
[e $U 193  ]
"371
[e :U 192 ]
[; ;Tonche_16F877.h: 371: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 194  ]
[; ;Tonche_16F877.h: 372: {
"372
{
[; ;Tonche_16F877.h: 373: TRISCbits.TRISC4 = 0;
"373
[e = . . _TRISCbits 0 4 -> -> 0 `i `uc ]
"374
}
[e :U 194 ]
"375
[e :U 193 ]
[; ;Tonche_16F877.h: 374: }
[; ;Tonche_16F877.h: 375: break;
[e $U 173  ]
[; ;Tonche_16F877.h: 376: case 5:
"376
[e :U 195 ]
[; ;Tonche_16F877.h: 377: if((mode == 'I')||(mode == 'i'))
"377
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 196  ]
[; ;Tonche_16F877.h: 378: {
"378
{
[; ;Tonche_16F877.h: 379: TRISCbits.TRISC5 = 1;
"379
[e = . . _TRISCbits 0 5 -> -> 1 `i `uc ]
"380
}
[; ;Tonche_16F877.h: 380: }
[e $U 197  ]
"381
[e :U 196 ]
[; ;Tonche_16F877.h: 381: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 198  ]
[; ;Tonche_16F877.h: 382: {
"382
{
[; ;Tonche_16F877.h: 383: TRISCbits.TRISC5 = 0;
"383
[e = . . _TRISCbits 0 5 -> -> 0 `i `uc ]
"384
}
[e :U 198 ]
"385
[e :U 197 ]
[; ;Tonche_16F877.h: 384: }
[; ;Tonche_16F877.h: 385: break;
[e $U 173  ]
[; ;Tonche_16F877.h: 386: case 6:
"386
[e :U 199 ]
[; ;Tonche_16F877.h: 387: if((mode == 'I')||(mode == 'i'))
"387
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 200  ]
[; ;Tonche_16F877.h: 388: {
"388
{
[; ;Tonche_16F877.h: 389: TRISCbits.TRISC6 = 1;
"389
[e = . . _TRISCbits 0 6 -> -> 1 `i `uc ]
"390
}
[; ;Tonche_16F877.h: 390: }
[e $U 201  ]
"391
[e :U 200 ]
[; ;Tonche_16F877.h: 391: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 202  ]
[; ;Tonche_16F877.h: 392: {
"392
{
[; ;Tonche_16F877.h: 393: TRISCbits.TRISC6 = 0;
"393
[e = . . _TRISCbits 0 6 -> -> 0 `i `uc ]
"394
}
[e :U 202 ]
"395
[e :U 201 ]
[; ;Tonche_16F877.h: 394: }
[; ;Tonche_16F877.h: 395: break;
[e $U 173  ]
[; ;Tonche_16F877.h: 396: case 7:
"396
[e :U 203 ]
[; ;Tonche_16F877.h: 397: if((mode == 'I')||(mode == 'i'))
"397
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 204  ]
[; ;Tonche_16F877.h: 398: {
"398
{
[; ;Tonche_16F877.h: 399: TRISCbits.TRISC7 = 1;
"399
[e = . . _TRISCbits 0 7 -> -> 1 `i `uc ]
"400
}
[; ;Tonche_16F877.h: 400: }
[e $U 205  ]
"401
[e :U 204 ]
[; ;Tonche_16F877.h: 401: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 206  ]
[; ;Tonche_16F877.h: 402: {
"402
{
[; ;Tonche_16F877.h: 403: TRISCbits.TRISC7 = 0;
"403
[e = . . _TRISCbits 0 7 -> -> 0 `i `uc ]
"404
}
[e :U 206 ]
"405
[e :U 205 ]
[; ;Tonche_16F877.h: 404: }
[; ;Tonche_16F877.h: 405: break;
[e $U 173  ]
"406
}
[; ;Tonche_16F877.h: 406: }
[e $U 173  ]
"324
[e :U 174 ]
[e [\ _pin , $ -> 0 `i 175
 , $ -> 1 `i 179
 , $ -> 2 `i 183
 , $ -> 3 `i 187
 , $ -> 4 `i 191
 , $ -> 5 `i 195
 , $ -> 6 `i 199
 , $ -> 7 `i 203
 173 ]
"406
[e :U 173 ]
"407
}
[e :U 172 ]
[; ;Tonche_16F877.h: 407: }
[; ;Tonche_16F877.h: 408: }
"408
[e :UE 167 ]
}
"409
[v _portdMode `(v ~T0 @X0 1 ef2`i`uc ]
"410
{
[; ;Tonche_16F877.h: 409: void portdMode(int pin, char mode)
[; ;Tonche_16F877.h: 410: {
[e :U _portdMode ]
"409
[v _pin `i ~T0 @X0 1 r1 ]
[v _mode `uc ~T0 @X0 1 r2 ]
"410
[f ]
[; ;Tonche_16F877.h: 411: if(pin >= 8)
"411
[e $ ! >= _pin -> 8 `i 208  ]
[; ;Tonche_16F877.h: 412: {
"412
{
[; ;Tonche_16F877.h: 413: pin = 7;
"413
[e = _pin -> 7 `i ]
[; ;Tonche_16F877.h: 414: if((mode == 'I')||(mode == 'i'))
"414
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 209  ]
[; ;Tonche_16F877.h: 415: {
"415
{
[; ;Tonche_16F877.h: 416: TRISCbits.TRISC7 = 1;
"416
[e = . . _TRISCbits 0 7 -> -> 1 `i `uc ]
"417
}
[; ;Tonche_16F877.h: 417: }
[e $U 210  ]
"418
[e :U 209 ]
[; ;Tonche_16F877.h: 418: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 211  ]
[; ;Tonche_16F877.h: 419: {
"419
{
[; ;Tonche_16F877.h: 420: TRISCbits.TRISC7 = 0;
"420
[e = . . _TRISCbits 0 7 -> -> 0 `i `uc ]
"421
}
[e :U 211 ]
"422
[e :U 210 ]
}
[; ;Tonche_16F877.h: 421: }
[; ;Tonche_16F877.h: 422: }
[e $U 212  ]
"423
[e :U 208 ]
[; ;Tonche_16F877.h: 423: else
[; ;Tonche_16F877.h: 424: {
"424
{
[; ;Tonche_16F877.h: 425: switch(pin)
"425
[e $U 214  ]
[; ;Tonche_16F877.h: 426: {
"426
{
[; ;Tonche_16F877.h: 427: case 0:
"427
[e :U 215 ]
[; ;Tonche_16F877.h: 428: if((mode == 'I')||(mode == 'i'))
"428
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 216  ]
[; ;Tonche_16F877.h: 429: {
"429
{
[; ;Tonche_16F877.h: 430: TRISCbits.TRISC0 = 1;
"430
[e = . . _TRISCbits 0 0 -> -> 1 `i `uc ]
"431
}
[; ;Tonche_16F877.h: 431: }
[e $U 217  ]
"432
[e :U 216 ]
[; ;Tonche_16F877.h: 432: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 218  ]
[; ;Tonche_16F877.h: 433: {
"433
{
[; ;Tonche_16F877.h: 434: TRISCbits.TRISC0 = 0;
"434
[e = . . _TRISCbits 0 0 -> -> 0 `i `uc ]
"435
}
[e :U 218 ]
"436
[e :U 217 ]
[; ;Tonche_16F877.h: 435: }
[; ;Tonche_16F877.h: 436: break;
[e $U 213  ]
[; ;Tonche_16F877.h: 437: case 1:
"437
[e :U 219 ]
[; ;Tonche_16F877.h: 438: if((mode == 'I')||(mode == 'i'))
"438
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 220  ]
[; ;Tonche_16F877.h: 439: {
"439
{
[; ;Tonche_16F877.h: 440: TRISCbits.TRISC1 = 1;
"440
[e = . . _TRISCbits 0 1 -> -> 1 `i `uc ]
"441
}
[; ;Tonche_16F877.h: 441: }
[e $U 221  ]
"442
[e :U 220 ]
[; ;Tonche_16F877.h: 442: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 222  ]
[; ;Tonche_16F877.h: 443: {
"443
{
[; ;Tonche_16F877.h: 444: TRISCbits.TRISC1 = 0;
"444
[e = . . _TRISCbits 0 1 -> -> 0 `i `uc ]
"445
}
[e :U 222 ]
"446
[e :U 221 ]
[; ;Tonche_16F877.h: 445: }
[; ;Tonche_16F877.h: 446: break;
[e $U 213  ]
[; ;Tonche_16F877.h: 447: case 2:
"447
[e :U 223 ]
[; ;Tonche_16F877.h: 448: if((mode == 'I')||(mode == 'i'))
"448
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 224  ]
[; ;Tonche_16F877.h: 449: {
"449
{
[; ;Tonche_16F877.h: 450: TRISCbits.TRISC2 = 1;
"450
[e = . . _TRISCbits 0 2 -> -> 1 `i `uc ]
"451
}
[; ;Tonche_16F877.h: 451: }
[e $U 225  ]
"452
[e :U 224 ]
[; ;Tonche_16F877.h: 452: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 226  ]
[; ;Tonche_16F877.h: 453: {
"453
{
[; ;Tonche_16F877.h: 454: TRISCbits.TRISC2 = 0;
"454
[e = . . _TRISCbits 0 2 -> -> 0 `i `uc ]
"455
}
[e :U 226 ]
"456
[e :U 225 ]
[; ;Tonche_16F877.h: 455: }
[; ;Tonche_16F877.h: 456: break;
[e $U 213  ]
[; ;Tonche_16F877.h: 457: case 3:
"457
[e :U 227 ]
[; ;Tonche_16F877.h: 458: if((mode == 'I')||(mode == 'i'))
"458
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 228  ]
[; ;Tonche_16F877.h: 459: {
"459
{
[; ;Tonche_16F877.h: 460: TRISCbits.TRISC3 = 1;
"460
[e = . . _TRISCbits 0 3 -> -> 1 `i `uc ]
"461
}
[; ;Tonche_16F877.h: 461: }
[e $U 229  ]
"462
[e :U 228 ]
[; ;Tonche_16F877.h: 462: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 230  ]
[; ;Tonche_16F877.h: 463: {
"463
{
[; ;Tonche_16F877.h: 464: TRISCbits.TRISC3 = 0;
"464
[e = . . _TRISCbits 0 3 -> -> 0 `i `uc ]
"465
}
[e :U 230 ]
"466
[e :U 229 ]
[; ;Tonche_16F877.h: 465: }
[; ;Tonche_16F877.h: 466: break;
[e $U 213  ]
[; ;Tonche_16F877.h: 467: case 4:
"467
[e :U 231 ]
[; ;Tonche_16F877.h: 468: if((mode == 'I')||(mode == 'i'))
"468
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 232  ]
[; ;Tonche_16F877.h: 469: {
"469
{
[; ;Tonche_16F877.h: 470: TRISCbits.TRISC4 = 1;
"470
[e = . . _TRISCbits 0 4 -> -> 1 `i `uc ]
"471
}
[; ;Tonche_16F877.h: 471: }
[e $U 233  ]
"472
[e :U 232 ]
[; ;Tonche_16F877.h: 472: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 234  ]
[; ;Tonche_16F877.h: 473: {
"473
{
[; ;Tonche_16F877.h: 474: TRISCbits.TRISC4 = 0;
"474
[e = . . _TRISCbits 0 4 -> -> 0 `i `uc ]
"475
}
[e :U 234 ]
"476
[e :U 233 ]
[; ;Tonche_16F877.h: 475: }
[; ;Tonche_16F877.h: 476: break;
[e $U 213  ]
[; ;Tonche_16F877.h: 477: case 5:
"477
[e :U 235 ]
[; ;Tonche_16F877.h: 478: if((mode == 'I')||(mode == 'i'))
"478
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 236  ]
[; ;Tonche_16F877.h: 479: {
"479
{
[; ;Tonche_16F877.h: 480: TRISCbits.TRISC5 = 1;
"480
[e = . . _TRISCbits 0 5 -> -> 1 `i `uc ]
"481
}
[; ;Tonche_16F877.h: 481: }
[e $U 237  ]
"482
[e :U 236 ]
[; ;Tonche_16F877.h: 482: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 238  ]
[; ;Tonche_16F877.h: 483: {
"483
{
[; ;Tonche_16F877.h: 484: TRISCbits.TRISC5 = 0;
"484
[e = . . _TRISCbits 0 5 -> -> 0 `i `uc ]
"485
}
[e :U 238 ]
"486
[e :U 237 ]
[; ;Tonche_16F877.h: 485: }
[; ;Tonche_16F877.h: 486: break;
[e $U 213  ]
[; ;Tonche_16F877.h: 487: case 6:
"487
[e :U 239 ]
[; ;Tonche_16F877.h: 488: if((mode == 'I')||(mode == 'i'))
"488
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 240  ]
[; ;Tonche_16F877.h: 489: {
"489
{
[; ;Tonche_16F877.h: 490: TRISCbits.TRISC6 = 1;
"490
[e = . . _TRISCbits 0 6 -> -> 1 `i `uc ]
"491
}
[; ;Tonche_16F877.h: 491: }
[e $U 241  ]
"492
[e :U 240 ]
[; ;Tonche_16F877.h: 492: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 242  ]
[; ;Tonche_16F877.h: 493: {
"493
{
[; ;Tonche_16F877.h: 494: TRISCbits.TRISC6 = 0;
"494
[e = . . _TRISCbits 0 6 -> -> 0 `i `uc ]
"495
}
[e :U 242 ]
"496
[e :U 241 ]
[; ;Tonche_16F877.h: 495: }
[; ;Tonche_16F877.h: 496: break;
[e $U 213  ]
[; ;Tonche_16F877.h: 497: case 7:
"497
[e :U 243 ]
[; ;Tonche_16F877.h: 498: if((mode == 'I')||(mode == 'i'))
"498
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 244  ]
[; ;Tonche_16F877.h: 499: {
"499
{
[; ;Tonche_16F877.h: 500: TRISCbits.TRISC7 = 1;
"500
[e = . . _TRISCbits 0 7 -> -> 1 `i `uc ]
"501
}
[; ;Tonche_16F877.h: 501: }
[e $U 245  ]
"502
[e :U 244 ]
[; ;Tonche_16F877.h: 502: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 246  ]
[; ;Tonche_16F877.h: 503: {
"503
{
[; ;Tonche_16F877.h: 504: TRISCbits.TRISC7 = 0;
"504
[e = . . _TRISCbits 0 7 -> -> 0 `i `uc ]
"505
}
[e :U 246 ]
"506
[e :U 245 ]
[; ;Tonche_16F877.h: 505: }
[; ;Tonche_16F877.h: 506: break;
[e $U 213  ]
"507
}
[; ;Tonche_16F877.h: 507: }
[e $U 213  ]
"425
[e :U 214 ]
[e [\ _pin , $ -> 0 `i 215
 , $ -> 1 `i 219
 , $ -> 2 `i 223
 , $ -> 3 `i 227
 , $ -> 4 `i 231
 , $ -> 5 `i 235
 , $ -> 6 `i 239
 , $ -> 7 `i 243
 213 ]
"507
[e :U 213 ]
"508
}
[e :U 212 ]
[; ;Tonche_16F877.h: 508: }
[; ;Tonche_16F877.h: 509: }
"509
[e :UE 207 ]
}
"510
[v _porteMode `(v ~T0 @X0 1 ef2`i`uc ]
"511
{
[; ;Tonche_16F877.h: 510: void porteMode(int pin, char mode)
[; ;Tonche_16F877.h: 511: {
[e :U _porteMode ]
"510
[v _pin `i ~T0 @X0 1 r1 ]
[v _mode `uc ~T0 @X0 1 r2 ]
"511
[f ]
[; ;Tonche_16F877.h: 512: if(pin >= 3)
"512
[e $ ! >= _pin -> 3 `i 248  ]
[; ;Tonche_16F877.h: 513: {
"513
{
[; ;Tonche_16F877.h: 514: if((mode == 'I')||(mode == 'i'))
"514
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 249  ]
[; ;Tonche_16F877.h: 515: {
"515
{
[; ;Tonche_16F877.h: 516: TRISEbits.TRISE2 = 1;
"516
[e = . . _TRISEbits 0 2 -> -> 1 `i `uc ]
"517
}
[; ;Tonche_16F877.h: 517: }
[e $U 250  ]
"518
[e :U 249 ]
[; ;Tonche_16F877.h: 518: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 251  ]
[; ;Tonche_16F877.h: 519: {
"519
{
[; ;Tonche_16F877.h: 520: TRISEbits.TRISE2 = 0;
"520
[e = . . _TRISEbits 0 2 -> -> 0 `i `uc ]
"521
}
[e :U 251 ]
"522
[e :U 250 ]
}
[; ;Tonche_16F877.h: 521: }
[; ;Tonche_16F877.h: 522: }
[e $U 252  ]
"523
[e :U 248 ]
[; ;Tonche_16F877.h: 523: else
[; ;Tonche_16F877.h: 524: {
"524
{
[; ;Tonche_16F877.h: 525: switch(pin)
"525
[e $U 254  ]
[; ;Tonche_16F877.h: 526: {
"526
{
[; ;Tonche_16F877.h: 527: case 0:
"527
[e :U 255 ]
[; ;Tonche_16F877.h: 528: if((mode == 'I')||(mode == 'i'))
"528
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 256  ]
[; ;Tonche_16F877.h: 529: {
"529
{
[; ;Tonche_16F877.h: 530: TRISEbits.TRISE0 = 1;
"530
[e = . . _TRISEbits 0 0 -> -> 1 `i `uc ]
"531
}
[; ;Tonche_16F877.h: 531: }
[e $U 257  ]
"532
[e :U 256 ]
[; ;Tonche_16F877.h: 532: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 258  ]
[; ;Tonche_16F877.h: 533: {
"533
{
[; ;Tonche_16F877.h: 534: TRISEbits.TRISE0 = 0;
"534
[e = . . _TRISEbits 0 0 -> -> 0 `i `uc ]
"535
}
[e :U 258 ]
"536
[e :U 257 ]
[; ;Tonche_16F877.h: 535: }
[; ;Tonche_16F877.h: 536: break;
[e $U 253  ]
[; ;Tonche_16F877.h: 537: case 1:
"537
[e :U 259 ]
[; ;Tonche_16F877.h: 538: if((mode == 'I')||(mode == 'i'))
"538
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 260  ]
[; ;Tonche_16F877.h: 539: {
"539
{
[; ;Tonche_16F877.h: 540: TRISEbits.TRISE1 = 1;
"540
[e = . . _TRISEbits 0 1 -> -> 1 `i `uc ]
"541
}
[; ;Tonche_16F877.h: 541: }
[e $U 261  ]
"542
[e :U 260 ]
[; ;Tonche_16F877.h: 542: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 262  ]
[; ;Tonche_16F877.h: 543: {
"543
{
[; ;Tonche_16F877.h: 544: TRISEbits.TRISE1 = 0;
"544
[e = . . _TRISEbits 0 1 -> -> 0 `i `uc ]
"545
}
[e :U 262 ]
"546
[e :U 261 ]
[; ;Tonche_16F877.h: 545: }
[; ;Tonche_16F877.h: 546: break;
[e $U 253  ]
[; ;Tonche_16F877.h: 547: case 2:
"547
[e :U 263 ]
[; ;Tonche_16F877.h: 548: if((mode == 'I')||(mode == 'i'))
"548
[e $ ! || == -> _mode `ui -> 73 `ui == -> _mode `ui -> 105 `ui 264  ]
[; ;Tonche_16F877.h: 549: {
"549
{
[; ;Tonche_16F877.h: 550: TRISEbits.TRISE2 = 1;
"550
[e = . . _TRISEbits 0 2 -> -> 1 `i `uc ]
"551
}
[; ;Tonche_16F877.h: 551: }
[e $U 265  ]
"552
[e :U 264 ]
[; ;Tonche_16F877.h: 552: else if((mode == 'O')||(mode == 'o'))
[e $ ! || == -> _mode `ui -> 79 `ui == -> _mode `ui -> 111 `ui 266  ]
[; ;Tonche_16F877.h: 553: {
"553
{
[; ;Tonche_16F877.h: 554: TRISEbits.TRISE2 = 0;
"554
[e = . . _TRISEbits 0 2 -> -> 0 `i `uc ]
"555
}
[e :U 266 ]
"556
[e :U 265 ]
[; ;Tonche_16F877.h: 555: }
[; ;Tonche_16F877.h: 556: break;
[e $U 253  ]
"557
}
[; ;Tonche_16F877.h: 557: }
[e $U 253  ]
"525
[e :U 254 ]
[e [\ _pin , $ -> 0 `i 255
 , $ -> 1 `i 259
 , $ -> 2 `i 263
 253 ]
"557
[e :U 253 ]
"558
}
[e :U 252 ]
[; ;Tonche_16F877.h: 558: }
[; ;Tonche_16F877.h: 559: }
"559
[e :UE 247 ]
}
"560
[v _digitalRead `(i ~T0 @X0 1 ef2`i`uc ]
"561
{
[; ;Tonche_16F877.h: 560: int digitalRead(int pin, char port)
[; ;Tonche_16F877.h: 561: {
[e :U _digitalRead ]
"560
[v _pin `i ~T0 @X0 1 r1 ]
[v _port `uc ~T0 @X0 1 r2 ]
"561
[f ]
[; ;Tonche_16F877.h: 562: if((port == 'A')||(port == 'a'))
"562
[e $ ! || == -> _port `ui -> 65 `ui == -> _port `ui -> 97 `ui 268  ]
[; ;Tonche_16F877.h: 563: {
"563
{
[; ;Tonche_16F877.h: 564: if(pin >=6)
"564
[e $ ! >= _pin -> 6 `i 269  ]
[; ;Tonche_16F877.h: 565: {
"565
{
[; ;Tonche_16F877.h: 566: if(PORTAbits.RA5 == 1)
"566
[e $ ! == -> . . _PORTAbits 0 5 `i -> 1 `i 270  ]
[; ;Tonche_16F877.h: 567: {
"567
{
[; ;Tonche_16F877.h: 568: return 1;
"568
[e ) -> 1 `i ]
[e $UE 267  ]
"569
}
[; ;Tonche_16F877.h: 569: }
[e $U 271  ]
"570
[e :U 270 ]
[; ;Tonche_16F877.h: 570: else
[; ;Tonche_16F877.h: 571: {
"571
{
[; ;Tonche_16F877.h: 572: return 0;
"572
[e ) -> 0 `i ]
[e $UE 267  ]
"573
}
[e :U 271 ]
"574
}
[; ;Tonche_16F877.h: 573: }
[; ;Tonche_16F877.h: 574: }
[e $U 272  ]
"575
[e :U 269 ]
[; ;Tonche_16F877.h: 575: else
[; ;Tonche_16F877.h: 576: {
"576
{
[; ;Tonche_16F877.h: 577: switch(pin)
"577
[e $U 274  ]
[; ;Tonche_16F877.h: 578: {
"578
{
[; ;Tonche_16F877.h: 579: case 0:
"579
[e :U 275 ]
[; ;Tonche_16F877.h: 580: if(PORTAbits.RA0 == 1)
"580
[e $ ! == -> . . _PORTAbits 0 0 `i -> 1 `i 276  ]
[; ;Tonche_16F877.h: 581: {
"581
{
[; ;Tonche_16F877.h: 582: return 1;
"582
[e ) -> 1 `i ]
[e $UE 267  ]
"583
}
[; ;Tonche_16F877.h: 583: }
[e $U 277  ]
"584
[e :U 276 ]
[; ;Tonche_16F877.h: 584: else
[; ;Tonche_16F877.h: 585: {
"585
{
[; ;Tonche_16F877.h: 586: return 0;
"586
[e ) -> 0 `i ]
[e $UE 267  ]
"587
}
[e :U 277 ]
[; ;Tonche_16F877.h: 587: }
[; ;Tonche_16F877.h: 588: break;
"588
[e $U 273  ]
[; ;Tonche_16F877.h: 589: case 1:
"589
[e :U 278 ]
[; ;Tonche_16F877.h: 590: if(PORTAbits.RA1 == 1)
"590
[e $ ! == -> . . _PORTAbits 0 1 `i -> 1 `i 279  ]
[; ;Tonche_16F877.h: 591: {
"591
{
[; ;Tonche_16F877.h: 592: return 1;
"592
[e ) -> 1 `i ]
[e $UE 267  ]
"593
}
[; ;Tonche_16F877.h: 593: }
[e $U 280  ]
"594
[e :U 279 ]
[; ;Tonche_16F877.h: 594: else
[; ;Tonche_16F877.h: 595: {
"595
{
[; ;Tonche_16F877.h: 596: return 0;
"596
[e ) -> 0 `i ]
[e $UE 267  ]
"597
}
[e :U 280 ]
[; ;Tonche_16F877.h: 597: }
[; ;Tonche_16F877.h: 598: break;
"598
[e $U 273  ]
[; ;Tonche_16F877.h: 599: case 2:
"599
[e :U 281 ]
[; ;Tonche_16F877.h: 600: if(PORTAbits.RA2 == 1)
"600
[e $ ! == -> . . _PORTAbits 0 2 `i -> 1 `i 282  ]
[; ;Tonche_16F877.h: 601: {
"601
{
[; ;Tonche_16F877.h: 602: return 1;
"602
[e ) -> 1 `i ]
[e $UE 267  ]
"603
}
[; ;Tonche_16F877.h: 603: }
[e $U 283  ]
"604
[e :U 282 ]
[; ;Tonche_16F877.h: 604: else
[; ;Tonche_16F877.h: 605: {
"605
{
[; ;Tonche_16F877.h: 606: return 0;
"606
[e ) -> 0 `i ]
[e $UE 267  ]
"607
}
[e :U 283 ]
[; ;Tonche_16F877.h: 607: }
[; ;Tonche_16F877.h: 608: break;
"608
[e $U 273  ]
[; ;Tonche_16F877.h: 609: case 3:
"609
[e :U 284 ]
[; ;Tonche_16F877.h: 610: if(PORTAbits.RA3 == 1)
"610
[e $ ! == -> . . _PORTAbits 0 3 `i -> 1 `i 285  ]
[; ;Tonche_16F877.h: 611: {
"611
{
[; ;Tonche_16F877.h: 612: return 1;
"612
[e ) -> 1 `i ]
[e $UE 267  ]
"613
}
[; ;Tonche_16F877.h: 613: }
[e $U 286  ]
"614
[e :U 285 ]
[; ;Tonche_16F877.h: 614: else
[; ;Tonche_16F877.h: 615: {
"615
{
[; ;Tonche_16F877.h: 616: return 0;
"616
[e ) -> 0 `i ]
[e $UE 267  ]
"617
}
[e :U 286 ]
[; ;Tonche_16F877.h: 617: }
[; ;Tonche_16F877.h: 618: break;
"618
[e $U 273  ]
[; ;Tonche_16F877.h: 619: case 4:
"619
[e :U 287 ]
[; ;Tonche_16F877.h: 620: if(PORTAbits.RA4 == 1)
"620
[e $ ! == -> . . _PORTAbits 0 4 `i -> 1 `i 288  ]
[; ;Tonche_16F877.h: 621: {
"621
{
[; ;Tonche_16F877.h: 622: return 1;
"622
[e ) -> 1 `i ]
[e $UE 267  ]
"623
}
[; ;Tonche_16F877.h: 623: }
[e $U 289  ]
"624
[e :U 288 ]
[; ;Tonche_16F877.h: 624: else
[; ;Tonche_16F877.h: 625: {
"625
{
[; ;Tonche_16F877.h: 626: return 0;
"626
[e ) -> 0 `i ]
[e $UE 267  ]
"627
}
[e :U 289 ]
[; ;Tonche_16F877.h: 627: }
[; ;Tonche_16F877.h: 628: break;
"628
[e $U 273  ]
[; ;Tonche_16F877.h: 629: case 5:
"629
[e :U 290 ]
[; ;Tonche_16F877.h: 630: if(PORTAbits.RA5 == 1)
"630
[e $ ! == -> . . _PORTAbits 0 5 `i -> 1 `i 291  ]
[; ;Tonche_16F877.h: 631: {
"631
{
[; ;Tonche_16F877.h: 632: return 1;
"632
[e ) -> 1 `i ]
[e $UE 267  ]
"633
}
[; ;Tonche_16F877.h: 633: }
[e $U 292  ]
"634
[e :U 291 ]
[; ;Tonche_16F877.h: 634: else
[; ;Tonche_16F877.h: 635: {
"635
{
[; ;Tonche_16F877.h: 636: return 0;
"636
[e ) -> 0 `i ]
[e $UE 267  ]
"637
}
[e :U 292 ]
[; ;Tonche_16F877.h: 637: }
[; ;Tonche_16F877.h: 638: break;
"638
[e $U 273  ]
"639
}
[; ;Tonche_16F877.h: 639: }
[e $U 273  ]
"577
[e :U 274 ]
[e [\ _pin , $ -> 0 `i 275
 , $ -> 1 `i 278
 , $ -> 2 `i 281
 , $ -> 3 `i 284
 , $ -> 4 `i 287
 , $ -> 5 `i 290
 273 ]
"639
[e :U 273 ]
"640
}
[e :U 272 ]
"641
}
[; ;Tonche_16F877.h: 640: }
[; ;Tonche_16F877.h: 641: }
[e $U 293  ]
"642
[e :U 268 ]
[; ;Tonche_16F877.h: 642: else if ((port == 'B')||(port == 'b'))
[e $ ! || == -> _port `ui -> 66 `ui == -> _port `ui -> 98 `ui 294  ]
[; ;Tonche_16F877.h: 643: {
"643
{
[; ;Tonche_16F877.h: 644: if(pin >= 8)
"644
[e $ ! >= _pin -> 8 `i 295  ]
[; ;Tonche_16F877.h: 645: {
"645
{
[; ;Tonche_16F877.h: 646: if(PORTBbits.RB7 == 1)
"646
[e $ ! == -> . . _PORTBbits 0 7 `i -> 1 `i 296  ]
[; ;Tonche_16F877.h: 647: {
"647
{
[; ;Tonche_16F877.h: 648: return 1;
"648
[e ) -> 1 `i ]
[e $UE 267  ]
"649
}
[; ;Tonche_16F877.h: 649: }
[e $U 297  ]
"650
[e :U 296 ]
[; ;Tonche_16F877.h: 650: else
[; ;Tonche_16F877.h: 651: {
"651
{
[; ;Tonche_16F877.h: 652: return 0;
"652
[e ) -> 0 `i ]
[e $UE 267  ]
"653
}
[e :U 297 ]
"654
}
[; ;Tonche_16F877.h: 653: }
[; ;Tonche_16F877.h: 654: }
[e $U 298  ]
"655
[e :U 295 ]
[; ;Tonche_16F877.h: 655: else
[; ;Tonche_16F877.h: 656: {
"656
{
[; ;Tonche_16F877.h: 657: switch(pin)
"657
[e $U 300  ]
[; ;Tonche_16F877.h: 658: {
"658
{
[; ;Tonche_16F877.h: 659: case 0:
"659
[e :U 301 ]
[; ;Tonche_16F877.h: 660: if(PORTBbits.RB0 == 1)
"660
[e $ ! == -> . . _PORTBbits 0 0 `i -> 1 `i 302  ]
[; ;Tonche_16F877.h: 661: {
"661
{
[; ;Tonche_16F877.h: 662: return 1;
"662
[e ) -> 1 `i ]
[e $UE 267  ]
"663
}
[; ;Tonche_16F877.h: 663: }
[e $U 303  ]
"664
[e :U 302 ]
[; ;Tonche_16F877.h: 664: else
[; ;Tonche_16F877.h: 665: {
"665
{
[; ;Tonche_16F877.h: 666: return 0;
"666
[e ) -> 0 `i ]
[e $UE 267  ]
"667
}
[e :U 303 ]
[; ;Tonche_16F877.h: 667: }
[; ;Tonche_16F877.h: 668: break;
"668
[e $U 299  ]
[; ;Tonche_16F877.h: 669: case 1:
"669
[e :U 304 ]
[; ;Tonche_16F877.h: 670: if(PORTBbits.RB1 == 1)
"670
[e $ ! == -> . . _PORTBbits 0 1 `i -> 1 `i 305  ]
[; ;Tonche_16F877.h: 671: {
"671
{
[; ;Tonche_16F877.h: 672: return 1;
"672
[e ) -> 1 `i ]
[e $UE 267  ]
"673
}
[; ;Tonche_16F877.h: 673: }
[e $U 306  ]
"674
[e :U 305 ]
[; ;Tonche_16F877.h: 674: else
[; ;Tonche_16F877.h: 675: {
"675
{
[; ;Tonche_16F877.h: 676: return 0;
"676
[e ) -> 0 `i ]
[e $UE 267  ]
"677
}
[e :U 306 ]
[; ;Tonche_16F877.h: 677: }
[; ;Tonche_16F877.h: 678: break;
"678
[e $U 299  ]
[; ;Tonche_16F877.h: 679: case 2:
"679
[e :U 307 ]
[; ;Tonche_16F877.h: 680: if(PORTBbits.RB2 == 1)
"680
[e $ ! == -> . . _PORTBbits 0 2 `i -> 1 `i 308  ]
[; ;Tonche_16F877.h: 681: {
"681
{
[; ;Tonche_16F877.h: 682: return 1;
"682
[e ) -> 1 `i ]
[e $UE 267  ]
"683
}
[; ;Tonche_16F877.h: 683: }
[e $U 309  ]
"684
[e :U 308 ]
[; ;Tonche_16F877.h: 684: else
[; ;Tonche_16F877.h: 685: {
"685
{
[; ;Tonche_16F877.h: 686: return 0;
"686
[e ) -> 0 `i ]
[e $UE 267  ]
"687
}
[e :U 309 ]
[; ;Tonche_16F877.h: 687: }
[; ;Tonche_16F877.h: 688: break;
"688
[e $U 299  ]
[; ;Tonche_16F877.h: 689: case 3:
"689
[e :U 310 ]
[; ;Tonche_16F877.h: 690: if(PORTBbits.RB3 == 1)
"690
[e $ ! == -> . . _PORTBbits 0 3 `i -> 1 `i 311  ]
[; ;Tonche_16F877.h: 691: {
"691
{
[; ;Tonche_16F877.h: 692: return 1;
"692
[e ) -> 1 `i ]
[e $UE 267  ]
"693
}
[; ;Tonche_16F877.h: 693: }
[e $U 312  ]
"694
[e :U 311 ]
[; ;Tonche_16F877.h: 694: else
[; ;Tonche_16F877.h: 695: {
"695
{
[; ;Tonche_16F877.h: 696: return 0;
"696
[e ) -> 0 `i ]
[e $UE 267  ]
"697
}
[e :U 312 ]
[; ;Tonche_16F877.h: 697: }
[; ;Tonche_16F877.h: 698: break;
"698
[e $U 299  ]
[; ;Tonche_16F877.h: 699: case 4:
"699
[e :U 313 ]
[; ;Tonche_16F877.h: 700: if(PORTBbits.RB4 == 1)
"700
[e $ ! == -> . . _PORTBbits 0 4 `i -> 1 `i 314  ]
[; ;Tonche_16F877.h: 701: {
"701
{
[; ;Tonche_16F877.h: 702: return 1;
"702
[e ) -> 1 `i ]
[e $UE 267  ]
"703
}
[; ;Tonche_16F877.h: 703: }
[e $U 315  ]
"704
[e :U 314 ]
[; ;Tonche_16F877.h: 704: else
[; ;Tonche_16F877.h: 705: {
"705
{
[; ;Tonche_16F877.h: 706: return 0;
"706
[e ) -> 0 `i ]
[e $UE 267  ]
"707
}
[e :U 315 ]
[; ;Tonche_16F877.h: 707: }
[; ;Tonche_16F877.h: 708: break;
"708
[e $U 299  ]
[; ;Tonche_16F877.h: 709: case 5:
"709
[e :U 316 ]
[; ;Tonche_16F877.h: 710: if(PORTBbits.RB5 == 1)
"710
[e $ ! == -> . . _PORTBbits 0 5 `i -> 1 `i 317  ]
[; ;Tonche_16F877.h: 711: {
"711
{
[; ;Tonche_16F877.h: 712: return 1;
"712
[e ) -> 1 `i ]
[e $UE 267  ]
"713
}
[; ;Tonche_16F877.h: 713: }
[e $U 318  ]
"714
[e :U 317 ]
[; ;Tonche_16F877.h: 714: else
[; ;Tonche_16F877.h: 715: {
"715
{
[; ;Tonche_16F877.h: 716: return 0;
"716
[e ) -> 0 `i ]
[e $UE 267  ]
"717
}
[e :U 318 ]
[; ;Tonche_16F877.h: 717: }
[; ;Tonche_16F877.h: 718: break;
"718
[e $U 299  ]
[; ;Tonche_16F877.h: 719: case 6:
"719
[e :U 319 ]
[; ;Tonche_16F877.h: 720: if(PORTBbits.RB6 == 1)
"720
[e $ ! == -> . . _PORTBbits 0 6 `i -> 1 `i 320  ]
[; ;Tonche_16F877.h: 721: {
"721
{
[; ;Tonche_16F877.h: 722: return 1;
"722
[e ) -> 1 `i ]
[e $UE 267  ]
"723
}
[; ;Tonche_16F877.h: 723: }
[e $U 321  ]
"724
[e :U 320 ]
[; ;Tonche_16F877.h: 724: else
[; ;Tonche_16F877.h: 725: {
"725
{
[; ;Tonche_16F877.h: 726: return 0;
"726
[e ) -> 0 `i ]
[e $UE 267  ]
"727
}
[e :U 321 ]
[; ;Tonche_16F877.h: 727: }
[; ;Tonche_16F877.h: 728: break;
"728
[e $U 299  ]
[; ;Tonche_16F877.h: 729: case 7:
"729
[e :U 322 ]
[; ;Tonche_16F877.h: 730: if(PORTBbits.RB7 == 1)
"730
[e $ ! == -> . . _PORTBbits 0 7 `i -> 1 `i 323  ]
[; ;Tonche_16F877.h: 731: {
"731
{
[; ;Tonche_16F877.h: 732: return 1;
"732
[e ) -> 1 `i ]
[e $UE 267  ]
"733
}
[; ;Tonche_16F877.h: 733: }
[e $U 324  ]
"734
[e :U 323 ]
[; ;Tonche_16F877.h: 734: else
[; ;Tonche_16F877.h: 735: {
"735
{
[; ;Tonche_16F877.h: 736: return 0;
"736
[e ) -> 0 `i ]
[e $UE 267  ]
"737
}
[e :U 324 ]
[; ;Tonche_16F877.h: 737: }
[; ;Tonche_16F877.h: 738: break;
"738
[e $U 299  ]
"739
}
[; ;Tonche_16F877.h: 739: }
[e $U 299  ]
"657
[e :U 300 ]
[e [\ _pin , $ -> 0 `i 301
 , $ -> 1 `i 304
 , $ -> 2 `i 307
 , $ -> 3 `i 310
 , $ -> 4 `i 313
 , $ -> 5 `i 316
 , $ -> 6 `i 319
 , $ -> 7 `i 322
 299 ]
"739
[e :U 299 ]
"740
}
[e :U 298 ]
"741
}
[; ;Tonche_16F877.h: 740: }
[; ;Tonche_16F877.h: 741: }
[e $U 325  ]
"742
[e :U 294 ]
[; ;Tonche_16F877.h: 742: else if ((port == 'C')||(port == 'c'))
[e $ ! || == -> _port `ui -> 67 `ui == -> _port `ui -> 99 `ui 326  ]
[; ;Tonche_16F877.h: 743: {
"743
{
[; ;Tonche_16F877.h: 744: if(pin >= 8)
"744
[e $ ! >= _pin -> 8 `i 327  ]
[; ;Tonche_16F877.h: 745: {
"745
{
[; ;Tonche_16F877.h: 746: if(PORTCbits.RC7 == 1)
"746
[e $ ! == -> . . _PORTCbits 0 7 `i -> 1 `i 328  ]
[; ;Tonche_16F877.h: 747: {
"747
{
[; ;Tonche_16F877.h: 748: return 1;
"748
[e ) -> 1 `i ]
[e $UE 267  ]
"749
}
[; ;Tonche_16F877.h: 749: }
[e $U 329  ]
"750
[e :U 328 ]
[; ;Tonche_16F877.h: 750: else
[; ;Tonche_16F877.h: 751: {
"751
{
[; ;Tonche_16F877.h: 752: return 0;
"752
[e ) -> 0 `i ]
[e $UE 267  ]
"753
}
[e :U 329 ]
"754
}
[; ;Tonche_16F877.h: 753: }
[; ;Tonche_16F877.h: 754: }
[e $U 330  ]
"755
[e :U 327 ]
[; ;Tonche_16F877.h: 755: else
[; ;Tonche_16F877.h: 756: {
"756
{
[; ;Tonche_16F877.h: 757: switch(pin)
"757
[e $U 332  ]
[; ;Tonche_16F877.h: 758: {
"758
{
[; ;Tonche_16F877.h: 759: case 0:
"759
[e :U 333 ]
[; ;Tonche_16F877.h: 760: if(PORTCbits.RC0 == 1)
"760
[e $ ! == -> . . _PORTCbits 0 0 `i -> 1 `i 334  ]
[; ;Tonche_16F877.h: 761: {
"761
{
[; ;Tonche_16F877.h: 762: return 1;
"762
[e ) -> 1 `i ]
[e $UE 267  ]
"763
}
[; ;Tonche_16F877.h: 763: }
[e $U 335  ]
"764
[e :U 334 ]
[; ;Tonche_16F877.h: 764: else
[; ;Tonche_16F877.h: 765: {
"765
{
[; ;Tonche_16F877.h: 766: return 0;
"766
[e ) -> 0 `i ]
[e $UE 267  ]
"767
}
[e :U 335 ]
[; ;Tonche_16F877.h: 767: }
[; ;Tonche_16F877.h: 768: break;
"768
[e $U 331  ]
[; ;Tonche_16F877.h: 769: case 1:
"769
[e :U 336 ]
[; ;Tonche_16F877.h: 770: if(PORTCbits.RC1 == 1)
"770
[e $ ! == -> . . _PORTCbits 0 1 `i -> 1 `i 337  ]
[; ;Tonche_16F877.h: 771: {
"771
{
[; ;Tonche_16F877.h: 772: return 1;
"772
[e ) -> 1 `i ]
[e $UE 267  ]
"773
}
[; ;Tonche_16F877.h: 773: }
[e $U 338  ]
"774
[e :U 337 ]
[; ;Tonche_16F877.h: 774: else
[; ;Tonche_16F877.h: 775: {
"775
{
[; ;Tonche_16F877.h: 776: return 0;
"776
[e ) -> 0 `i ]
[e $UE 267  ]
"777
}
[e :U 338 ]
[; ;Tonche_16F877.h: 777: }
[; ;Tonche_16F877.h: 778: break;
"778
[e $U 331  ]
[; ;Tonche_16F877.h: 779: case 2:
"779
[e :U 339 ]
[; ;Tonche_16F877.h: 780: if(PORTCbits.RC2 == 1)
"780
[e $ ! == -> . . _PORTCbits 0 2 `i -> 1 `i 340  ]
[; ;Tonche_16F877.h: 781: {
"781
{
[; ;Tonche_16F877.h: 782: return 1;
"782
[e ) -> 1 `i ]
[e $UE 267  ]
"783
}
[; ;Tonche_16F877.h: 783: }
[e $U 341  ]
"784
[e :U 340 ]
[; ;Tonche_16F877.h: 784: else
[; ;Tonche_16F877.h: 785: {
"785
{
[; ;Tonche_16F877.h: 786: return 0;
"786
[e ) -> 0 `i ]
[e $UE 267  ]
"787
}
[e :U 341 ]
[; ;Tonche_16F877.h: 787: }
[; ;Tonche_16F877.h: 788: break;
"788
[e $U 331  ]
[; ;Tonche_16F877.h: 789: case 3:
"789
[e :U 342 ]
[; ;Tonche_16F877.h: 790: if(PORTCbits.RC3 == 1)
"790
[e $ ! == -> . . _PORTCbits 0 3 `i -> 1 `i 343  ]
[; ;Tonche_16F877.h: 791: {
"791
{
[; ;Tonche_16F877.h: 792: return 1;
"792
[e ) -> 1 `i ]
[e $UE 267  ]
"793
}
[; ;Tonche_16F877.h: 793: }
[e $U 344  ]
"794
[e :U 343 ]
[; ;Tonche_16F877.h: 794: else
[; ;Tonche_16F877.h: 795: {
"795
{
[; ;Tonche_16F877.h: 796: return 0;
"796
[e ) -> 0 `i ]
[e $UE 267  ]
"797
}
[e :U 344 ]
[; ;Tonche_16F877.h: 797: }
[; ;Tonche_16F877.h: 798: break;
"798
[e $U 331  ]
[; ;Tonche_16F877.h: 799: case 4:
"799
[e :U 345 ]
[; ;Tonche_16F877.h: 800: if(PORTCbits.RC4 == 1)
"800
[e $ ! == -> . . _PORTCbits 0 4 `i -> 1 `i 346  ]
[; ;Tonche_16F877.h: 801: {
"801
{
[; ;Tonche_16F877.h: 802: return 1;
"802
[e ) -> 1 `i ]
[e $UE 267  ]
"803
}
[; ;Tonche_16F877.h: 803: }
[e $U 347  ]
"804
[e :U 346 ]
[; ;Tonche_16F877.h: 804: else
[; ;Tonche_16F877.h: 805: {
"805
{
[; ;Tonche_16F877.h: 806: return 0;
"806
[e ) -> 0 `i ]
[e $UE 267  ]
"807
}
[e :U 347 ]
[; ;Tonche_16F877.h: 807: }
[; ;Tonche_16F877.h: 808: break;
"808
[e $U 331  ]
[; ;Tonche_16F877.h: 809: case 5:
"809
[e :U 348 ]
[; ;Tonche_16F877.h: 810: if(PORTCbits.RC5 == 1)
"810
[e $ ! == -> . . _PORTCbits 0 5 `i -> 1 `i 349  ]
[; ;Tonche_16F877.h: 811: {
"811
{
[; ;Tonche_16F877.h: 812: return 1;
"812
[e ) -> 1 `i ]
[e $UE 267  ]
"813
}
[; ;Tonche_16F877.h: 813: }
[e $U 350  ]
"814
[e :U 349 ]
[; ;Tonche_16F877.h: 814: else
[; ;Tonche_16F877.h: 815: {
"815
{
[; ;Tonche_16F877.h: 816: return 0;
"816
[e ) -> 0 `i ]
[e $UE 267  ]
"817
}
[e :U 350 ]
[; ;Tonche_16F877.h: 817: }
[; ;Tonche_16F877.h: 818: break;
"818
[e $U 331  ]
[; ;Tonche_16F877.h: 819: case 6:
"819
[e :U 351 ]
[; ;Tonche_16F877.h: 820: if(PORTCbits.RC6 == 1)
"820
[e $ ! == -> . . _PORTCbits 0 6 `i -> 1 `i 352  ]
[; ;Tonche_16F877.h: 821: {
"821
{
[; ;Tonche_16F877.h: 822: return 1;
"822
[e ) -> 1 `i ]
[e $UE 267  ]
"823
}
[; ;Tonche_16F877.h: 823: }
[e $U 353  ]
"824
[e :U 352 ]
[; ;Tonche_16F877.h: 824: else
[; ;Tonche_16F877.h: 825: {
"825
{
[; ;Tonche_16F877.h: 826: return 0;
"826
[e ) -> 0 `i ]
[e $UE 267  ]
"827
}
[e :U 353 ]
[; ;Tonche_16F877.h: 827: }
[; ;Tonche_16F877.h: 828: break;
"828
[e $U 331  ]
[; ;Tonche_16F877.h: 829: case 7:
"829
[e :U 354 ]
[; ;Tonche_16F877.h: 830: if(PORTCbits.RC7 == 1)
"830
[e $ ! == -> . . _PORTCbits 0 7 `i -> 1 `i 355  ]
[; ;Tonche_16F877.h: 831: {
"831
{
[; ;Tonche_16F877.h: 832: return 1;
"832
[e ) -> 1 `i ]
[e $UE 267  ]
"833
}
[; ;Tonche_16F877.h: 833: }
[e $U 356  ]
"834
[e :U 355 ]
[; ;Tonche_16F877.h: 834: else
[; ;Tonche_16F877.h: 835: {
"835
{
[; ;Tonche_16F877.h: 836: return 0;
"836
[e ) -> 0 `i ]
[e $UE 267  ]
"837
}
[e :U 356 ]
[; ;Tonche_16F877.h: 837: }
[; ;Tonche_16F877.h: 838: break;
"838
[e $U 331  ]
"839
}
[; ;Tonche_16F877.h: 839: }
[e $U 331  ]
"757
[e :U 332 ]
[e [\ _pin , $ -> 0 `i 333
 , $ -> 1 `i 336
 , $ -> 2 `i 339
 , $ -> 3 `i 342
 , $ -> 4 `i 345
 , $ -> 5 `i 348
 , $ -> 6 `i 351
 , $ -> 7 `i 354
 331 ]
"839
[e :U 331 ]
"840
}
[e :U 330 ]
"841
}
[; ;Tonche_16F877.h: 840: }
[; ;Tonche_16F877.h: 841: }
[e $U 357  ]
"842
[e :U 326 ]
[; ;Tonche_16F877.h: 842: else if ((port == 'D')||(port == 'd'))
[e $ ! || == -> _port `ui -> 68 `ui == -> _port `ui -> 100 `ui 358  ]
[; ;Tonche_16F877.h: 843: {
"843
{
[; ;Tonche_16F877.h: 844: if(pin >= 8)
"844
[e $ ! >= _pin -> 8 `i 359  ]
[; ;Tonche_16F877.h: 845: {
"845
{
[; ;Tonche_16F877.h: 846: if(PORTDbits.RD7 == 1)
"846
[e $ ! == -> . . _PORTDbits 0 7 `i -> 1 `i 360  ]
[; ;Tonche_16F877.h: 847: {
"847
{
[; ;Tonche_16F877.h: 848: return 1;
"848
[e ) -> 1 `i ]
[e $UE 267  ]
"849
}
[; ;Tonche_16F877.h: 849: }
[e $U 361  ]
"850
[e :U 360 ]
[; ;Tonche_16F877.h: 850: else
[; ;Tonche_16F877.h: 851: {
"851
{
[; ;Tonche_16F877.h: 852: return 0;
"852
[e ) -> 0 `i ]
[e $UE 267  ]
"853
}
[e :U 361 ]
"854
}
[; ;Tonche_16F877.h: 853: }
[; ;Tonche_16F877.h: 854: }
[e $U 362  ]
"855
[e :U 359 ]
[; ;Tonche_16F877.h: 855: else
[; ;Tonche_16F877.h: 856: {
"856
{
[; ;Tonche_16F877.h: 857: switch(pin)
"857
[e $U 364  ]
[; ;Tonche_16F877.h: 858: {
"858
{
[; ;Tonche_16F877.h: 859: case 0:
"859
[e :U 365 ]
[; ;Tonche_16F877.h: 860: if(PORTDbits.RD0 == 1)
"860
[e $ ! == -> . . _PORTDbits 0 0 `i -> 1 `i 366  ]
[; ;Tonche_16F877.h: 861: {
"861
{
[; ;Tonche_16F877.h: 862: return 1;
"862
[e ) -> 1 `i ]
[e $UE 267  ]
"863
}
[; ;Tonche_16F877.h: 863: }
[e $U 367  ]
"864
[e :U 366 ]
[; ;Tonche_16F877.h: 864: else
[; ;Tonche_16F877.h: 865: {
"865
{
[; ;Tonche_16F877.h: 866: return 0;
"866
[e ) -> 0 `i ]
[e $UE 267  ]
"867
}
[e :U 367 ]
[; ;Tonche_16F877.h: 867: }
[; ;Tonche_16F877.h: 868: break;
"868
[e $U 363  ]
[; ;Tonche_16F877.h: 869: case 1:
"869
[e :U 368 ]
[; ;Tonche_16F877.h: 870: if(PORTDbits.RD1 == 1)
"870
[e $ ! == -> . . _PORTDbits 0 1 `i -> 1 `i 369  ]
[; ;Tonche_16F877.h: 871: {
"871
{
[; ;Tonche_16F877.h: 872: return 1;
"872
[e ) -> 1 `i ]
[e $UE 267  ]
"873
}
[; ;Tonche_16F877.h: 873: }
[e $U 370  ]
"874
[e :U 369 ]
[; ;Tonche_16F877.h: 874: else
[; ;Tonche_16F877.h: 875: {
"875
{
[; ;Tonche_16F877.h: 876: return 0;
"876
[e ) -> 0 `i ]
[e $UE 267  ]
"877
}
[e :U 370 ]
[; ;Tonche_16F877.h: 877: }
[; ;Tonche_16F877.h: 878: break;
"878
[e $U 363  ]
[; ;Tonche_16F877.h: 879: case 2:
"879
[e :U 371 ]
[; ;Tonche_16F877.h: 880: if(PORTDbits.RD2 == 1)
"880
[e $ ! == -> . . _PORTDbits 0 2 `i -> 1 `i 372  ]
[; ;Tonche_16F877.h: 881: {
"881
{
[; ;Tonche_16F877.h: 882: return 1;
"882
[e ) -> 1 `i ]
[e $UE 267  ]
"883
}
[; ;Tonche_16F877.h: 883: }
[e $U 373  ]
"884
[e :U 372 ]
[; ;Tonche_16F877.h: 884: else
[; ;Tonche_16F877.h: 885: {
"885
{
[; ;Tonche_16F877.h: 886: return 0;
"886
[e ) -> 0 `i ]
[e $UE 267  ]
"887
}
[e :U 373 ]
[; ;Tonche_16F877.h: 887: }
[; ;Tonche_16F877.h: 888: break;
"888
[e $U 363  ]
[; ;Tonche_16F877.h: 889: case 3:
"889
[e :U 374 ]
[; ;Tonche_16F877.h: 890: if(PORTDbits.RD3 == 1)
"890
[e $ ! == -> . . _PORTDbits 0 3 `i -> 1 `i 375  ]
[; ;Tonche_16F877.h: 891: {
"891
{
[; ;Tonche_16F877.h: 892: return 1;
"892
[e ) -> 1 `i ]
[e $UE 267  ]
"893
}
[; ;Tonche_16F877.h: 893: }
[e $U 376  ]
"894
[e :U 375 ]
[; ;Tonche_16F877.h: 894: else
[; ;Tonche_16F877.h: 895: {
"895
{
[; ;Tonche_16F877.h: 896: return 0;
"896
[e ) -> 0 `i ]
[e $UE 267  ]
"897
}
[e :U 376 ]
[; ;Tonche_16F877.h: 897: }
[; ;Tonche_16F877.h: 898: break;
"898
[e $U 363  ]
[; ;Tonche_16F877.h: 899: case 4:
"899
[e :U 377 ]
[; ;Tonche_16F877.h: 900: if(PORTDbits.RD4 == 1)
"900
[e $ ! == -> . . _PORTDbits 0 4 `i -> 1 `i 378  ]
[; ;Tonche_16F877.h: 901: {
"901
{
[; ;Tonche_16F877.h: 902: return 1;
"902
[e ) -> 1 `i ]
[e $UE 267  ]
"903
}
[; ;Tonche_16F877.h: 903: }
[e $U 379  ]
"904
[e :U 378 ]
[; ;Tonche_16F877.h: 904: else
[; ;Tonche_16F877.h: 905: {
"905
{
[; ;Tonche_16F877.h: 906: return 0;
"906
[e ) -> 0 `i ]
[e $UE 267  ]
"907
}
[e :U 379 ]
[; ;Tonche_16F877.h: 907: }
[; ;Tonche_16F877.h: 908: break;
"908
[e $U 363  ]
[; ;Tonche_16F877.h: 909: case 5:
"909
[e :U 380 ]
[; ;Tonche_16F877.h: 910: if(PORTDbits.RD5 == 1)
"910
[e $ ! == -> . . _PORTDbits 0 5 `i -> 1 `i 381  ]
[; ;Tonche_16F877.h: 911: {
"911
{
[; ;Tonche_16F877.h: 912: return 1;
"912
[e ) -> 1 `i ]
[e $UE 267  ]
"913
}
[; ;Tonche_16F877.h: 913: }
[e $U 382  ]
"914
[e :U 381 ]
[; ;Tonche_16F877.h: 914: else
[; ;Tonche_16F877.h: 915: {
"915
{
[; ;Tonche_16F877.h: 916: return 0;
"916
[e ) -> 0 `i ]
[e $UE 267  ]
"917
}
[e :U 382 ]
[; ;Tonche_16F877.h: 917: }
[; ;Tonche_16F877.h: 918: break;
"918
[e $U 363  ]
[; ;Tonche_16F877.h: 919: case 6:
"919
[e :U 383 ]
[; ;Tonche_16F877.h: 920: if(PORTDbits.RD6 == 1)
"920
[e $ ! == -> . . _PORTDbits 0 6 `i -> 1 `i 384  ]
[; ;Tonche_16F877.h: 921: {
"921
{
[; ;Tonche_16F877.h: 922: return 1;
"922
[e ) -> 1 `i ]
[e $UE 267  ]
"923
}
[; ;Tonche_16F877.h: 923: }
[e $U 385  ]
"924
[e :U 384 ]
[; ;Tonche_16F877.h: 924: else
[; ;Tonche_16F877.h: 925: {
"925
{
[; ;Tonche_16F877.h: 926: return 0;
"926
[e ) -> 0 `i ]
[e $UE 267  ]
"927
}
[e :U 385 ]
[; ;Tonche_16F877.h: 927: }
[; ;Tonche_16F877.h: 928: break;
"928
[e $U 363  ]
[; ;Tonche_16F877.h: 929: case 7:
"929
[e :U 386 ]
[; ;Tonche_16F877.h: 930: if(PORTDbits.RD7 == 1)
"930
[e $ ! == -> . . _PORTDbits 0 7 `i -> 1 `i 387  ]
[; ;Tonche_16F877.h: 931: {
"931
{
[; ;Tonche_16F877.h: 932: return 1;
"932
[e ) -> 1 `i ]
[e $UE 267  ]
"933
}
[; ;Tonche_16F877.h: 933: }
[e $U 388  ]
"934
[e :U 387 ]
[; ;Tonche_16F877.h: 934: else
[; ;Tonche_16F877.h: 935: {
"935
{
[; ;Tonche_16F877.h: 936: return 0;
"936
[e ) -> 0 `i ]
[e $UE 267  ]
"937
}
[e :U 388 ]
[; ;Tonche_16F877.h: 937: }
[; ;Tonche_16F877.h: 938: break;
"938
[e $U 363  ]
"939
}
[; ;Tonche_16F877.h: 939: }
[e $U 363  ]
"857
[e :U 364 ]
[e [\ _pin , $ -> 0 `i 365
 , $ -> 1 `i 368
 , $ -> 2 `i 371
 , $ -> 3 `i 374
 , $ -> 4 `i 377
 , $ -> 5 `i 380
 , $ -> 6 `i 383
 , $ -> 7 `i 386
 363 ]
"939
[e :U 363 ]
"940
}
[e :U 362 ]
"941
}
[; ;Tonche_16F877.h: 940: }
[; ;Tonche_16F877.h: 941: }
[e $U 389  ]
"942
[e :U 358 ]
[; ;Tonche_16F877.h: 942: else if ((port == 'E')||(port == 'e'))
[e $ ! || == -> _port `ui -> 69 `ui == -> _port `ui -> 101 `ui 390  ]
[; ;Tonche_16F877.h: 943: {
"943
{
[; ;Tonche_16F877.h: 944: if(pin >= 3)
"944
[e $ ! >= _pin -> 3 `i 391  ]
[; ;Tonche_16F877.h: 945: {
"945
{
[; ;Tonche_16F877.h: 946: if(PORTEbits.RE2 == 1)
"946
[e $ ! == -> . . _PORTEbits 0 2 `i -> 1 `i 392  ]
[; ;Tonche_16F877.h: 947: {
"947
{
[; ;Tonche_16F877.h: 948: return 1;
"948
[e ) -> 1 `i ]
[e $UE 267  ]
"949
}
[; ;Tonche_16F877.h: 949: }
[e $U 393  ]
"950
[e :U 392 ]
[; ;Tonche_16F877.h: 950: else
[; ;Tonche_16F877.h: 951: {
"951
{
[; ;Tonche_16F877.h: 952: return 0;
"952
[e ) -> 0 `i ]
[e $UE 267  ]
"953
}
[e :U 393 ]
"954
}
[; ;Tonche_16F877.h: 953: }
[; ;Tonche_16F877.h: 954: }
[e $U 394  ]
"955
[e :U 391 ]
[; ;Tonche_16F877.h: 955: else
[; ;Tonche_16F877.h: 956: {
"956
{
[; ;Tonche_16F877.h: 957: switch(pin)
"957
[e $U 396  ]
[; ;Tonche_16F877.h: 958: {
"958
{
[; ;Tonche_16F877.h: 959: case 0:
"959
[e :U 397 ]
[; ;Tonche_16F877.h: 960: if(PORTEbits.RE0 == 1)
"960
[e $ ! == -> . . _PORTEbits 0 0 `i -> 1 `i 398  ]
[; ;Tonche_16F877.h: 961: {
"961
{
[; ;Tonche_16F877.h: 962: return 1;
"962
[e ) -> 1 `i ]
[e $UE 267  ]
"963
}
[; ;Tonche_16F877.h: 963: }
[e $U 399  ]
"964
[e :U 398 ]
[; ;Tonche_16F877.h: 964: else
[; ;Tonche_16F877.h: 965: {
"965
{
[; ;Tonche_16F877.h: 966: return 0;
"966
[e ) -> 0 `i ]
[e $UE 267  ]
"967
}
[e :U 399 ]
[; ;Tonche_16F877.h: 967: }
[; ;Tonche_16F877.h: 968: break;
"968
[e $U 395  ]
[; ;Tonche_16F877.h: 969: case 1:
"969
[e :U 400 ]
[; ;Tonche_16F877.h: 970: if(PORTEbits.RE1 == 1)
"970
[e $ ! == -> . . _PORTEbits 0 1 `i -> 1 `i 401  ]
[; ;Tonche_16F877.h: 971: {
"971
{
[; ;Tonche_16F877.h: 972: return 1;
"972
[e ) -> 1 `i ]
[e $UE 267  ]
"973
}
[; ;Tonche_16F877.h: 973: }
[e $U 402  ]
"974
[e :U 401 ]
[; ;Tonche_16F877.h: 974: else
[; ;Tonche_16F877.h: 975: {
"975
{
[; ;Tonche_16F877.h: 976: return 0;
"976
[e ) -> 0 `i ]
[e $UE 267  ]
"977
}
[e :U 402 ]
[; ;Tonche_16F877.h: 977: }
[; ;Tonche_16F877.h: 978: break;
"978
[e $U 395  ]
[; ;Tonche_16F877.h: 979: case 2:
"979
[e :U 403 ]
[; ;Tonche_16F877.h: 980: if(PORTEbits.RE2 == 1)
"980
[e $ ! == -> . . _PORTEbits 0 2 `i -> 1 `i 404  ]
[; ;Tonche_16F877.h: 981: {
"981
{
[; ;Tonche_16F877.h: 982: return 1;
"982
[e ) -> 1 `i ]
[e $UE 267  ]
"983
}
[; ;Tonche_16F877.h: 983: }
[e $U 405  ]
"984
[e :U 404 ]
[; ;Tonche_16F877.h: 984: else
[; ;Tonche_16F877.h: 985: {
"985
{
[; ;Tonche_16F877.h: 986: return 0;
"986
[e ) -> 0 `i ]
[e $UE 267  ]
"987
}
[e :U 405 ]
[; ;Tonche_16F877.h: 987: }
[; ;Tonche_16F877.h: 988: break;
"988
[e $U 395  ]
"989
}
[; ;Tonche_16F877.h: 989: }
[e $U 395  ]
"957
[e :U 396 ]
[e [\ _pin , $ -> 0 `i 397
 , $ -> 1 `i 400
 , $ -> 2 `i 403
 395 ]
"989
[e :U 395 ]
"990
}
[e :U 394 ]
"991
}
[e :U 390 ]
"992
[e :U 389 ]
[e :U 357 ]
[e :U 325 ]
[e :U 293 ]
[; ;Tonche_16F877.h: 990: }
[; ;Tonche_16F877.h: 991: }
[; ;Tonche_16F877.h: 992: }
[e :UE 267 ]
}
"993
[v _digitalWrite `(v ~T0 @X0 1 ef3`i`uc`uc ]
"994
{
[; ;Tonche_16F877.h: 993: void digitalWrite(int pin, char port, char value)
[; ;Tonche_16F877.h: 994: {
[e :U _digitalWrite ]
"993
[v _pin `i ~T0 @X0 1 r1 ]
[v _port `uc ~T0 @X0 1 r2 ]
[v _value `uc ~T0 @X0 1 r3 ]
"994
[f ]
[; ;Tonche_16F877.h: 995: switch(port)
"995
[e $U 408  ]
[; ;Tonche_16F877.h: 996: {
"996
{
[; ;Tonche_16F877.h: 997: case 'A':
"997
[e :U 409 ]
[; ;Tonche_16F877.h: 998: switch(pin)
"998
[e $U 411  ]
[; ;Tonche_16F877.h: 999: {
"999
{
[; ;Tonche_16F877.h: 1000: case 0:
"1000
[e :U 412 ]
[; ;Tonche_16F877.h: 1001: if(value == 'h')
"1001
[e $ ! == -> _value `ui -> 104 `ui 413  ]
[; ;Tonche_16F877.h: 1002: {
"1002
{
[; ;Tonche_16F877.h: 1003: PORTAbits.RA0 = 1;
"1003
[e = . . _PORTAbits 0 0 -> -> 1 `i `uc ]
"1004
}
[; ;Tonche_16F877.h: 1004: }
[e $U 414  ]
"1005
[e :U 413 ]
[; ;Tonche_16F877.h: 1005: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 415  ]
[; ;Tonche_16F877.h: 1006: {
"1006
{
[; ;Tonche_16F877.h: 1007: PORTAbits.RA0 = 0;
"1007
[e = . . _PORTAbits 0 0 -> -> 0 `i `uc ]
"1008
}
[e :U 415 ]
"1009
[e :U 414 ]
[; ;Tonche_16F877.h: 1008: }
[; ;Tonche_16F877.h: 1009: break;
[e $U 410  ]
[; ;Tonche_16F877.h: 1010: case 1:
"1010
[e :U 416 ]
[; ;Tonche_16F877.h: 1011: if(value == 'h')
"1011
[e $ ! == -> _value `ui -> 104 `ui 417  ]
[; ;Tonche_16F877.h: 1012: {
"1012
{
[; ;Tonche_16F877.h: 1013: PORTAbits.RA1 = 1;
"1013
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
"1014
}
[; ;Tonche_16F877.h: 1014: }
[e $U 418  ]
"1015
[e :U 417 ]
[; ;Tonche_16F877.h: 1015: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 419  ]
[; ;Tonche_16F877.h: 1016: {
"1016
{
[; ;Tonche_16F877.h: 1017: PORTAbits.RA1 = 0;
"1017
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
"1018
}
[e :U 419 ]
"1019
[e :U 418 ]
[; ;Tonche_16F877.h: 1018: }
[; ;Tonche_16F877.h: 1019: break;
[e $U 410  ]
[; ;Tonche_16F877.h: 1020: case 2:
"1020
[e :U 420 ]
[; ;Tonche_16F877.h: 1021: if(value == 'h')
"1021
[e $ ! == -> _value `ui -> 104 `ui 421  ]
[; ;Tonche_16F877.h: 1022: {
"1022
{
[; ;Tonche_16F877.h: 1023: PORTAbits.RA2 = 1;
"1023
[e = . . _PORTAbits 0 2 -> -> 1 `i `uc ]
"1024
}
[; ;Tonche_16F877.h: 1024: }
[e $U 422  ]
"1025
[e :U 421 ]
[; ;Tonche_16F877.h: 1025: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 423  ]
[; ;Tonche_16F877.h: 1026: {
"1026
{
[; ;Tonche_16F877.h: 1027: PORTAbits.RA2 = 0;
"1027
[e = . . _PORTAbits 0 2 -> -> 0 `i `uc ]
"1028
}
[e :U 423 ]
"1029
[e :U 422 ]
[; ;Tonche_16F877.h: 1028: }
[; ;Tonche_16F877.h: 1029: break;
[e $U 410  ]
[; ;Tonche_16F877.h: 1030: case 3:
"1030
[e :U 424 ]
[; ;Tonche_16F877.h: 1031: if(value == 'h')
"1031
[e $ ! == -> _value `ui -> 104 `ui 425  ]
[; ;Tonche_16F877.h: 1032: {
"1032
{
[; ;Tonche_16F877.h: 1033: PORTAbits.RA3 = 1;
"1033
[e = . . _PORTAbits 0 3 -> -> 1 `i `uc ]
"1034
}
[; ;Tonche_16F877.h: 1034: }
[e $U 426  ]
"1035
[e :U 425 ]
[; ;Tonche_16F877.h: 1035: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 427  ]
[; ;Tonche_16F877.h: 1036: {
"1036
{
[; ;Tonche_16F877.h: 1037: PORTAbits.RA3 = 0;
"1037
[e = . . _PORTAbits 0 3 -> -> 0 `i `uc ]
"1038
}
[e :U 427 ]
"1039
[e :U 426 ]
[; ;Tonche_16F877.h: 1038: }
[; ;Tonche_16F877.h: 1039: break;
[e $U 410  ]
[; ;Tonche_16F877.h: 1040: case 4:
"1040
[e :U 428 ]
[; ;Tonche_16F877.h: 1041: if(value == 'h')
"1041
[e $ ! == -> _value `ui -> 104 `ui 429  ]
[; ;Tonche_16F877.h: 1042: {
"1042
{
[; ;Tonche_16F877.h: 1043: PORTAbits.RA4 = 1;
"1043
[e = . . _PORTAbits 0 4 -> -> 1 `i `uc ]
"1044
}
[; ;Tonche_16F877.h: 1044: }
[e $U 430  ]
"1045
[e :U 429 ]
[; ;Tonche_16F877.h: 1045: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 431  ]
[; ;Tonche_16F877.h: 1046: {
"1046
{
[; ;Tonche_16F877.h: 1047: PORTAbits.RA4 = 0;
"1047
[e = . . _PORTAbits 0 4 -> -> 0 `i `uc ]
"1048
}
[e :U 431 ]
"1049
[e :U 430 ]
[; ;Tonche_16F877.h: 1048: }
[; ;Tonche_16F877.h: 1049: break;
[e $U 410  ]
[; ;Tonche_16F877.h: 1050: case 5:
"1050
[e :U 432 ]
[; ;Tonche_16F877.h: 1051: if(value == 'h')
"1051
[e $ ! == -> _value `ui -> 104 `ui 433  ]
[; ;Tonche_16F877.h: 1052: {
"1052
{
[; ;Tonche_16F877.h: 1053: PORTAbits.RA5 = 1;
"1053
[e = . . _PORTAbits 0 5 -> -> 1 `i `uc ]
"1054
}
[; ;Tonche_16F877.h: 1054: }
[e $U 434  ]
"1055
[e :U 433 ]
[; ;Tonche_16F877.h: 1055: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 435  ]
[; ;Tonche_16F877.h: 1056: {
"1056
{
[; ;Tonche_16F877.h: 1057: PORTAbits.RA5 = 0;
"1057
[e = . . _PORTAbits 0 5 -> -> 0 `i `uc ]
"1058
}
[e :U 435 ]
"1059
[e :U 434 ]
[; ;Tonche_16F877.h: 1058: }
[; ;Tonche_16F877.h: 1059: break;
[e $U 410  ]
"1060
}
[; ;Tonche_16F877.h: 1060: }
[e $U 410  ]
"998
[e :U 411 ]
[e [\ _pin , $ -> 0 `i 412
 , $ -> 1 `i 416
 , $ -> 2 `i 420
 , $ -> 3 `i 424
 , $ -> 4 `i 428
 , $ -> 5 `i 432
 410 ]
"1060
[e :U 410 ]
[; ;Tonche_16F877.h: 1061: break;
"1061
[e $U 407  ]
[; ;Tonche_16F877.h: 1062: case 'B':
"1062
[e :U 436 ]
[; ;Tonche_16F877.h: 1063: switch(pin)
"1063
[e $U 438  ]
[; ;Tonche_16F877.h: 1064: {
"1064
{
[; ;Tonche_16F877.h: 1065: case 0:
"1065
[e :U 439 ]
[; ;Tonche_16F877.h: 1066: if(value == 'h')
"1066
[e $ ! == -> _value `ui -> 104 `ui 440  ]
[; ;Tonche_16F877.h: 1067: {
"1067
{
[; ;Tonche_16F877.h: 1068: PORTBbits.RB0 = 1;
"1068
[e = . . _PORTBbits 0 0 -> -> 1 `i `uc ]
"1069
}
[; ;Tonche_16F877.h: 1069: }
[e $U 441  ]
"1070
[e :U 440 ]
[; ;Tonche_16F877.h: 1070: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 442  ]
[; ;Tonche_16F877.h: 1071: {
"1071
{
[; ;Tonche_16F877.h: 1072: PORTBbits.RB0 = 0;
"1072
[e = . . _PORTBbits 0 0 -> -> 0 `i `uc ]
"1073
}
[e :U 442 ]
"1074
[e :U 441 ]
[; ;Tonche_16F877.h: 1073: }
[; ;Tonche_16F877.h: 1074: break;
[e $U 437  ]
[; ;Tonche_16F877.h: 1075: case 1:
"1075
[e :U 443 ]
[; ;Tonche_16F877.h: 1076: if(value == 'h')
"1076
[e $ ! == -> _value `ui -> 104 `ui 444  ]
[; ;Tonche_16F877.h: 1077: {
"1077
{
[; ;Tonche_16F877.h: 1078: PORTBbits.RB1 = 1;
"1078
[e = . . _PORTBbits 0 1 -> -> 1 `i `uc ]
"1079
}
[; ;Tonche_16F877.h: 1079: }
[e $U 445  ]
"1080
[e :U 444 ]
[; ;Tonche_16F877.h: 1080: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 446  ]
[; ;Tonche_16F877.h: 1081: {
"1081
{
[; ;Tonche_16F877.h: 1082: PORTBbits.RB1 = 0;
"1082
[e = . . _PORTBbits 0 1 -> -> 0 `i `uc ]
"1083
}
[e :U 446 ]
"1084
[e :U 445 ]
[; ;Tonche_16F877.h: 1083: }
[; ;Tonche_16F877.h: 1084: break;
[e $U 437  ]
[; ;Tonche_16F877.h: 1085: case 2:
"1085
[e :U 447 ]
[; ;Tonche_16F877.h: 1086: if(value == 'h')
"1086
[e $ ! == -> _value `ui -> 104 `ui 448  ]
[; ;Tonche_16F877.h: 1087: {
"1087
{
[; ;Tonche_16F877.h: 1088: PORTBbits.RB2 = 1;
"1088
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
"1089
}
[; ;Tonche_16F877.h: 1089: }
[e $U 449  ]
"1090
[e :U 448 ]
[; ;Tonche_16F877.h: 1090: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 450  ]
[; ;Tonche_16F877.h: 1091: {
"1091
{
[; ;Tonche_16F877.h: 1092: PORTBbits.RB2 = 0;
"1092
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
"1093
}
[e :U 450 ]
"1094
[e :U 449 ]
[; ;Tonche_16F877.h: 1093: }
[; ;Tonche_16F877.h: 1094: break;
[e $U 437  ]
[; ;Tonche_16F877.h: 1095: case 3:
"1095
[e :U 451 ]
[; ;Tonche_16F877.h: 1096: if(value == 'h')
"1096
[e $ ! == -> _value `ui -> 104 `ui 452  ]
[; ;Tonche_16F877.h: 1097: {
"1097
{
[; ;Tonche_16F877.h: 1098: PORTBbits.RB3 = 1;
"1098
[e = . . _PORTBbits 0 3 -> -> 1 `i `uc ]
"1099
}
[; ;Tonche_16F877.h: 1099: }
[e $U 453  ]
"1100
[e :U 452 ]
[; ;Tonche_16F877.h: 1100: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 454  ]
[; ;Tonche_16F877.h: 1101: {
"1101
{
[; ;Tonche_16F877.h: 1102: PORTBbits.RB3 = 0;
"1102
[e = . . _PORTBbits 0 3 -> -> 0 `i `uc ]
"1103
}
[e :U 454 ]
"1104
[e :U 453 ]
[; ;Tonche_16F877.h: 1103: }
[; ;Tonche_16F877.h: 1104: break;
[e $U 437  ]
[; ;Tonche_16F877.h: 1105: case 4:
"1105
[e :U 455 ]
[; ;Tonche_16F877.h: 1106: if(value == 'h')
"1106
[e $ ! == -> _value `ui -> 104 `ui 456  ]
[; ;Tonche_16F877.h: 1107: {
"1107
{
[; ;Tonche_16F877.h: 1108: PORTBbits.RB4 = 1;
"1108
[e = . . _PORTBbits 0 4 -> -> 1 `i `uc ]
"1109
}
[; ;Tonche_16F877.h: 1109: }
[e $U 457  ]
"1110
[e :U 456 ]
[; ;Tonche_16F877.h: 1110: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 458  ]
[; ;Tonche_16F877.h: 1111: {
"1111
{
[; ;Tonche_16F877.h: 1112: PORTBbits.RB4 = 0;
"1112
[e = . . _PORTBbits 0 4 -> -> 0 `i `uc ]
"1113
}
[e :U 458 ]
"1114
[e :U 457 ]
[; ;Tonche_16F877.h: 1113: }
[; ;Tonche_16F877.h: 1114: break;
[e $U 437  ]
[; ;Tonche_16F877.h: 1115: case 5:
"1115
[e :U 459 ]
[; ;Tonche_16F877.h: 1116: if(value == 'h')
"1116
[e $ ! == -> _value `ui -> 104 `ui 460  ]
[; ;Tonche_16F877.h: 1117: {
"1117
{
[; ;Tonche_16F877.h: 1118: PORTBbits.RB5 = 1;
"1118
[e = . . _PORTBbits 0 5 -> -> 1 `i `uc ]
"1119
}
[; ;Tonche_16F877.h: 1119: }
[e $U 461  ]
"1120
[e :U 460 ]
[; ;Tonche_16F877.h: 1120: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 462  ]
[; ;Tonche_16F877.h: 1121: {
"1121
{
[; ;Tonche_16F877.h: 1122: PORTBbits.RB5 = 0;
"1122
[e = . . _PORTBbits 0 5 -> -> 0 `i `uc ]
"1123
}
[e :U 462 ]
"1124
[e :U 461 ]
[; ;Tonche_16F877.h: 1123: }
[; ;Tonche_16F877.h: 1124: break;
[e $U 437  ]
[; ;Tonche_16F877.h: 1125: case 6:
"1125
[e :U 463 ]
[; ;Tonche_16F877.h: 1126: if(value == 'h')
"1126
[e $ ! == -> _value `ui -> 104 `ui 464  ]
[; ;Tonche_16F877.h: 1127: {
"1127
{
[; ;Tonche_16F877.h: 1128: PORTBbits.RB6 = 1;
"1128
[e = . . _PORTBbits 0 6 -> -> 1 `i `uc ]
"1129
}
[; ;Tonche_16F877.h: 1129: }
[e $U 465  ]
"1130
[e :U 464 ]
[; ;Tonche_16F877.h: 1130: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 466  ]
[; ;Tonche_16F877.h: 1131: {
"1131
{
[; ;Tonche_16F877.h: 1132: PORTBbits.RB6 = 0;
"1132
[e = . . _PORTBbits 0 6 -> -> 0 `i `uc ]
"1133
}
[e :U 466 ]
"1134
[e :U 465 ]
[; ;Tonche_16F877.h: 1133: }
[; ;Tonche_16F877.h: 1134: break;
[e $U 437  ]
[; ;Tonche_16F877.h: 1135: case 7:
"1135
[e :U 467 ]
[; ;Tonche_16F877.h: 1136: if(value == 'h')
"1136
[e $ ! == -> _value `ui -> 104 `ui 468  ]
[; ;Tonche_16F877.h: 1137: {
"1137
{
[; ;Tonche_16F877.h: 1138: PORTBbits.RB7 = 1;
"1138
[e = . . _PORTBbits 0 7 -> -> 1 `i `uc ]
"1139
}
[; ;Tonche_16F877.h: 1139: }
[e $U 469  ]
"1140
[e :U 468 ]
[; ;Tonche_16F877.h: 1140: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 470  ]
[; ;Tonche_16F877.h: 1141: {
"1141
{
[; ;Tonche_16F877.h: 1142: PORTBbits.RB7 = 0;
"1142
[e = . . _PORTBbits 0 7 -> -> 0 `i `uc ]
"1143
}
[e :U 470 ]
"1144
[e :U 469 ]
[; ;Tonche_16F877.h: 1143: }
[; ;Tonche_16F877.h: 1144: break;
[e $U 437  ]
"1145
}
[; ;Tonche_16F877.h: 1145: }
[e $U 437  ]
"1063
[e :U 438 ]
[e [\ _pin , $ -> 0 `i 439
 , $ -> 1 `i 443
 , $ -> 2 `i 447
 , $ -> 3 `i 451
 , $ -> 4 `i 455
 , $ -> 5 `i 459
 , $ -> 6 `i 463
 , $ -> 7 `i 467
 437 ]
"1145
[e :U 437 ]
[; ;Tonche_16F877.h: 1146: break;
"1146
[e $U 407  ]
[; ;Tonche_16F877.h: 1147: case 'C':
"1147
[e :U 471 ]
[; ;Tonche_16F877.h: 1148: switch(pin)
"1148
[e $U 473  ]
[; ;Tonche_16F877.h: 1149: {
"1149
{
[; ;Tonche_16F877.h: 1150: case 0:
"1150
[e :U 474 ]
[; ;Tonche_16F877.h: 1151: if(value == 'h')
"1151
[e $ ! == -> _value `ui -> 104 `ui 475  ]
[; ;Tonche_16F877.h: 1152: {
"1152
{
[; ;Tonche_16F877.h: 1153: PORTCbits.RC0 = 1;
"1153
[e = . . _PORTCbits 0 0 -> -> 1 `i `uc ]
"1154
}
[; ;Tonche_16F877.h: 1154: }
[e $U 476  ]
"1155
[e :U 475 ]
[; ;Tonche_16F877.h: 1155: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 477  ]
[; ;Tonche_16F877.h: 1156: {
"1156
{
[; ;Tonche_16F877.h: 1157: PORTCbits.RC0 = 0;
"1157
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
"1158
}
[e :U 477 ]
"1159
[e :U 476 ]
[; ;Tonche_16F877.h: 1158: }
[; ;Tonche_16F877.h: 1159: break;
[e $U 472  ]
[; ;Tonche_16F877.h: 1160: case 1:
"1160
[e :U 478 ]
[; ;Tonche_16F877.h: 1161: if(value == 'h')
"1161
[e $ ! == -> _value `ui -> 104 `ui 479  ]
[; ;Tonche_16F877.h: 1162: {
"1162
{
[; ;Tonche_16F877.h: 1163: PORTCbits.RC1 = 1;
"1163
[e = . . _PORTCbits 0 1 -> -> 1 `i `uc ]
"1164
}
[; ;Tonche_16F877.h: 1164: }
[e $U 480  ]
"1165
[e :U 479 ]
[; ;Tonche_16F877.h: 1165: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 481  ]
[; ;Tonche_16F877.h: 1166: {
"1166
{
[; ;Tonche_16F877.h: 1167: PORTCbits.RC1 = 0;
"1167
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
"1168
}
[e :U 481 ]
"1169
[e :U 480 ]
[; ;Tonche_16F877.h: 1168: }
[; ;Tonche_16F877.h: 1169: break;
[e $U 472  ]
[; ;Tonche_16F877.h: 1170: case 2:
"1170
[e :U 482 ]
[; ;Tonche_16F877.h: 1171: if(value == 'h')
"1171
[e $ ! == -> _value `ui -> 104 `ui 483  ]
[; ;Tonche_16F877.h: 1172: {
"1172
{
[; ;Tonche_16F877.h: 1173: PORTCbits.RC2 = 1;
"1173
[e = . . _PORTCbits 0 2 -> -> 1 `i `uc ]
"1174
}
[; ;Tonche_16F877.h: 1174: }
[e $U 484  ]
"1175
[e :U 483 ]
[; ;Tonche_16F877.h: 1175: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 485  ]
[; ;Tonche_16F877.h: 1176: {
"1176
{
[; ;Tonche_16F877.h: 1177: PORTCbits.RC2 = 0;
"1177
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
"1178
}
[e :U 485 ]
"1179
[e :U 484 ]
[; ;Tonche_16F877.h: 1178: }
[; ;Tonche_16F877.h: 1179: break;
[e $U 472  ]
[; ;Tonche_16F877.h: 1180: case 3:
"1180
[e :U 486 ]
[; ;Tonche_16F877.h: 1181: if(value == 'h')
"1181
[e $ ! == -> _value `ui -> 104 `ui 487  ]
[; ;Tonche_16F877.h: 1182: {
"1182
{
[; ;Tonche_16F877.h: 1183: PORTCbits.RC3 = 1;
"1183
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"1184
}
[; ;Tonche_16F877.h: 1184: }
[e $U 488  ]
"1185
[e :U 487 ]
[; ;Tonche_16F877.h: 1185: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 489  ]
[; ;Tonche_16F877.h: 1186: {
"1186
{
[; ;Tonche_16F877.h: 1187: PORTCbits.RC3 = 0;
"1187
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"1188
}
[e :U 489 ]
"1189
[e :U 488 ]
[; ;Tonche_16F877.h: 1188: }
[; ;Tonche_16F877.h: 1189: break;
[e $U 472  ]
[; ;Tonche_16F877.h: 1190: case 4:
"1190
[e :U 490 ]
[; ;Tonche_16F877.h: 1191: if(value == 'h')
"1191
[e $ ! == -> _value `ui -> 104 `ui 491  ]
[; ;Tonche_16F877.h: 1192: {
"1192
{
[; ;Tonche_16F877.h: 1193: PORTCbits.RC4 = 1;
"1193
[e = . . _PORTCbits 0 4 -> -> 1 `i `uc ]
"1194
}
[; ;Tonche_16F877.h: 1194: }
[e $U 492  ]
"1195
[e :U 491 ]
[; ;Tonche_16F877.h: 1195: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 493  ]
[; ;Tonche_16F877.h: 1196: {
"1196
{
[; ;Tonche_16F877.h: 1197: PORTCbits.RC4 = 0;
"1197
[e = . . _PORTCbits 0 4 -> -> 0 `i `uc ]
"1198
}
[e :U 493 ]
"1199
[e :U 492 ]
[; ;Tonche_16F877.h: 1198: }
[; ;Tonche_16F877.h: 1199: break;
[e $U 472  ]
[; ;Tonche_16F877.h: 1200: case 5:
"1200
[e :U 494 ]
[; ;Tonche_16F877.h: 1201: if(value == 'h')
"1201
[e $ ! == -> _value `ui -> 104 `ui 495  ]
[; ;Tonche_16F877.h: 1202: {
"1202
{
[; ;Tonche_16F877.h: 1203: PORTCbits.RC5 = 1;
"1203
[e = . . _PORTCbits 0 5 -> -> 1 `i `uc ]
"1204
}
[; ;Tonche_16F877.h: 1204: }
[e $U 496  ]
"1205
[e :U 495 ]
[; ;Tonche_16F877.h: 1205: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 497  ]
[; ;Tonche_16F877.h: 1206: {
"1206
{
[; ;Tonche_16F877.h: 1207: PORTCbits.RC5 = 0;
"1207
[e = . . _PORTCbits 0 5 -> -> 0 `i `uc ]
"1208
}
[e :U 497 ]
"1209
[e :U 496 ]
[; ;Tonche_16F877.h: 1208: }
[; ;Tonche_16F877.h: 1209: break;
[e $U 472  ]
[; ;Tonche_16F877.h: 1210: case 6:
"1210
[e :U 498 ]
[; ;Tonche_16F877.h: 1211: if(value == 'h')
"1211
[e $ ! == -> _value `ui -> 104 `ui 499  ]
[; ;Tonche_16F877.h: 1212: {
"1212
{
[; ;Tonche_16F877.h: 1213: PORTCbits.RC6 = 1;
"1213
[e = . . _PORTCbits 0 6 -> -> 1 `i `uc ]
"1214
}
[; ;Tonche_16F877.h: 1214: }
[e $U 500  ]
"1215
[e :U 499 ]
[; ;Tonche_16F877.h: 1215: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 501  ]
[; ;Tonche_16F877.h: 1216: {
"1216
{
[; ;Tonche_16F877.h: 1217: PORTCbits.RC6 = 0;
"1217
[e = . . _PORTCbits 0 6 -> -> 0 `i `uc ]
"1218
}
[e :U 501 ]
"1219
[e :U 500 ]
[; ;Tonche_16F877.h: 1218: }
[; ;Tonche_16F877.h: 1219: break;
[e $U 472  ]
[; ;Tonche_16F877.h: 1220: case 7:
"1220
[e :U 502 ]
[; ;Tonche_16F877.h: 1221: if(value == 'h')
"1221
[e $ ! == -> _value `ui -> 104 `ui 503  ]
[; ;Tonche_16F877.h: 1222: {
"1222
{
[; ;Tonche_16F877.h: 1223: PORTCbits.RC7 = 1;
"1223
[e = . . _PORTCbits 0 7 -> -> 1 `i `uc ]
"1224
}
[; ;Tonche_16F877.h: 1224: }
[e $U 504  ]
"1225
[e :U 503 ]
[; ;Tonche_16F877.h: 1225: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 505  ]
[; ;Tonche_16F877.h: 1226: {
"1226
{
[; ;Tonche_16F877.h: 1227: PORTCbits.RC7 = 0;
"1227
[e = . . _PORTCbits 0 7 -> -> 0 `i `uc ]
"1228
}
[e :U 505 ]
"1229
[e :U 504 ]
[; ;Tonche_16F877.h: 1228: }
[; ;Tonche_16F877.h: 1229: break;
[e $U 472  ]
"1230
}
[; ;Tonche_16F877.h: 1230: }
[e $U 472  ]
"1148
[e :U 473 ]
[e [\ _pin , $ -> 0 `i 474
 , $ -> 1 `i 478
 , $ -> 2 `i 482
 , $ -> 3 `i 486
 , $ -> 4 `i 490
 , $ -> 5 `i 494
 , $ -> 6 `i 498
 , $ -> 7 `i 502
 472 ]
"1230
[e :U 472 ]
[; ;Tonche_16F877.h: 1231: break;
"1231
[e $U 407  ]
[; ;Tonche_16F877.h: 1232: case 'D':
"1232
[e :U 506 ]
[; ;Tonche_16F877.h: 1233: switch(pin)
"1233
[e $U 508  ]
[; ;Tonche_16F877.h: 1234: {
"1234
{
[; ;Tonche_16F877.h: 1235: case 0:
"1235
[e :U 509 ]
[; ;Tonche_16F877.h: 1236: if(value == 'h')
"1236
[e $ ! == -> _value `ui -> 104 `ui 510  ]
[; ;Tonche_16F877.h: 1237: {
"1237
{
[; ;Tonche_16F877.h: 1238: PORTDbits.RD0 = 1;
"1238
[e = . . _PORTDbits 0 0 -> -> 1 `i `uc ]
"1239
}
[; ;Tonche_16F877.h: 1239: }
[e $U 511  ]
"1240
[e :U 510 ]
[; ;Tonche_16F877.h: 1240: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 512  ]
[; ;Tonche_16F877.h: 1241: {
"1241
{
[; ;Tonche_16F877.h: 1242: PORTDbits.RD0 = 0;
"1242
[e = . . _PORTDbits 0 0 -> -> 0 `i `uc ]
"1243
}
[e :U 512 ]
"1244
[e :U 511 ]
[; ;Tonche_16F877.h: 1243: }
[; ;Tonche_16F877.h: 1244: break;
[e $U 507  ]
[; ;Tonche_16F877.h: 1245: case 1:
"1245
[e :U 513 ]
[; ;Tonche_16F877.h: 1246: if(value == 'h')
"1246
[e $ ! == -> _value `ui -> 104 `ui 514  ]
[; ;Tonche_16F877.h: 1247: {
"1247
{
[; ;Tonche_16F877.h: 1248: PORTDbits.RD1 = 1;
"1248
[e = . . _PORTDbits 0 1 -> -> 1 `i `uc ]
"1249
}
[; ;Tonche_16F877.h: 1249: }
[e $U 515  ]
"1250
[e :U 514 ]
[; ;Tonche_16F877.h: 1250: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 516  ]
[; ;Tonche_16F877.h: 1251: {
"1251
{
[; ;Tonche_16F877.h: 1252: PORTDbits.RD1 = 0;
"1252
[e = . . _PORTDbits 0 1 -> -> 0 `i `uc ]
"1253
}
[e :U 516 ]
"1254
[e :U 515 ]
[; ;Tonche_16F877.h: 1253: }
[; ;Tonche_16F877.h: 1254: break;
[e $U 507  ]
[; ;Tonche_16F877.h: 1255: case 2:
"1255
[e :U 517 ]
[; ;Tonche_16F877.h: 1256: if(value == 'h')
"1256
[e $ ! == -> _value `ui -> 104 `ui 518  ]
[; ;Tonche_16F877.h: 1257: {
"1257
{
[; ;Tonche_16F877.h: 1258: PORTDbits.RD2 = 1;
"1258
[e = . . _PORTDbits 0 2 -> -> 1 `i `uc ]
"1259
}
[; ;Tonche_16F877.h: 1259: }
[e $U 519  ]
"1260
[e :U 518 ]
[; ;Tonche_16F877.h: 1260: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 520  ]
[; ;Tonche_16F877.h: 1261: {
"1261
{
[; ;Tonche_16F877.h: 1262: PORTDbits.RD2 = 0;
"1262
[e = . . _PORTDbits 0 2 -> -> 0 `i `uc ]
"1263
}
[e :U 520 ]
"1264
[e :U 519 ]
[; ;Tonche_16F877.h: 1263: }
[; ;Tonche_16F877.h: 1264: break;
[e $U 507  ]
[; ;Tonche_16F877.h: 1265: case 3:
"1265
[e :U 521 ]
[; ;Tonche_16F877.h: 1266: if(value == 'h')
"1266
[e $ ! == -> _value `ui -> 104 `ui 522  ]
[; ;Tonche_16F877.h: 1267: {
"1267
{
[; ;Tonche_16F877.h: 1268: PORTDbits.RD3 = 1;
"1268
[e = . . _PORTDbits 0 3 -> -> 1 `i `uc ]
"1269
}
[; ;Tonche_16F877.h: 1269: }
[e $U 523  ]
"1270
[e :U 522 ]
[; ;Tonche_16F877.h: 1270: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 524  ]
[; ;Tonche_16F877.h: 1271: {
"1271
{
[; ;Tonche_16F877.h: 1272: PORTDbits.RD3 = 0;
"1272
[e = . . _PORTDbits 0 3 -> -> 0 `i `uc ]
"1273
}
[e :U 524 ]
"1274
[e :U 523 ]
[; ;Tonche_16F877.h: 1273: }
[; ;Tonche_16F877.h: 1274: break;
[e $U 507  ]
[; ;Tonche_16F877.h: 1275: case 4:
"1275
[e :U 525 ]
[; ;Tonche_16F877.h: 1276: if(value == 'h')
"1276
[e $ ! == -> _value `ui -> 104 `ui 526  ]
[; ;Tonche_16F877.h: 1277: {
"1277
{
[; ;Tonche_16F877.h: 1278: PORTDbits.RD4 = 1;
"1278
[e = . . _PORTDbits 0 4 -> -> 1 `i `uc ]
"1279
}
[; ;Tonche_16F877.h: 1279: }
[e $U 527  ]
"1280
[e :U 526 ]
[; ;Tonche_16F877.h: 1280: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 528  ]
[; ;Tonche_16F877.h: 1281: {
"1281
{
[; ;Tonche_16F877.h: 1282: PORTDbits.RD4 = 0;
"1282
[e = . . _PORTDbits 0 4 -> -> 0 `i `uc ]
"1283
}
[e :U 528 ]
"1284
[e :U 527 ]
[; ;Tonche_16F877.h: 1283: }
[; ;Tonche_16F877.h: 1284: break;
[e $U 507  ]
[; ;Tonche_16F877.h: 1285: case 5:
"1285
[e :U 529 ]
[; ;Tonche_16F877.h: 1286: if(value == 'h')
"1286
[e $ ! == -> _value `ui -> 104 `ui 530  ]
[; ;Tonche_16F877.h: 1287: {
"1287
{
[; ;Tonche_16F877.h: 1288: PORTDbits.RD5 = 1;
"1288
[e = . . _PORTDbits 0 5 -> -> 1 `i `uc ]
"1289
}
[; ;Tonche_16F877.h: 1289: }
[e $U 531  ]
"1290
[e :U 530 ]
[; ;Tonche_16F877.h: 1290: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 532  ]
[; ;Tonche_16F877.h: 1291: {
"1291
{
[; ;Tonche_16F877.h: 1292: PORTDbits.RD5 = 0;
"1292
[e = . . _PORTDbits 0 5 -> -> 0 `i `uc ]
"1293
}
[e :U 532 ]
"1294
[e :U 531 ]
[; ;Tonche_16F877.h: 1293: }
[; ;Tonche_16F877.h: 1294: break;
[e $U 507  ]
[; ;Tonche_16F877.h: 1295: case 6:
"1295
[e :U 533 ]
[; ;Tonche_16F877.h: 1296: if(value == 'h')
"1296
[e $ ! == -> _value `ui -> 104 `ui 534  ]
[; ;Tonche_16F877.h: 1297: {
"1297
{
[; ;Tonche_16F877.h: 1298: PORTDbits.RD6 = 1;
"1298
[e = . . _PORTDbits 0 6 -> -> 1 `i `uc ]
"1299
}
[; ;Tonche_16F877.h: 1299: }
[e $U 535  ]
"1300
[e :U 534 ]
[; ;Tonche_16F877.h: 1300: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 536  ]
[; ;Tonche_16F877.h: 1301: {
"1301
{
[; ;Tonche_16F877.h: 1302: PORTDbits.RD6 = 0;
"1302
[e = . . _PORTDbits 0 6 -> -> 0 `i `uc ]
"1303
}
[e :U 536 ]
"1304
[e :U 535 ]
[; ;Tonche_16F877.h: 1303: }
[; ;Tonche_16F877.h: 1304: break;
[e $U 507  ]
[; ;Tonche_16F877.h: 1305: case 7:
"1305
[e :U 537 ]
[; ;Tonche_16F877.h: 1306: if(value == 'h')
"1306
[e $ ! == -> _value `ui -> 104 `ui 538  ]
[; ;Tonche_16F877.h: 1307: {
"1307
{
[; ;Tonche_16F877.h: 1308: PORTDbits.RD7 = 1;
"1308
[e = . . _PORTDbits 0 7 -> -> 1 `i `uc ]
"1309
}
[; ;Tonche_16F877.h: 1309: }
[e $U 539  ]
"1310
[e :U 538 ]
[; ;Tonche_16F877.h: 1310: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 540  ]
[; ;Tonche_16F877.h: 1311: {
"1311
{
[; ;Tonche_16F877.h: 1312: PORTDbits.RD7 = 0;
"1312
[e = . . _PORTDbits 0 7 -> -> 0 `i `uc ]
"1313
}
[e :U 540 ]
"1314
[e :U 539 ]
[; ;Tonche_16F877.h: 1313: }
[; ;Tonche_16F877.h: 1314: break;
[e $U 507  ]
"1315
}
[; ;Tonche_16F877.h: 1315: }
[e $U 507  ]
"1233
[e :U 508 ]
[e [\ _pin , $ -> 0 `i 509
 , $ -> 1 `i 513
 , $ -> 2 `i 517
 , $ -> 3 `i 521
 , $ -> 4 `i 525
 , $ -> 5 `i 529
 , $ -> 6 `i 533
 , $ -> 7 `i 537
 507 ]
"1315
[e :U 507 ]
[; ;Tonche_16F877.h: 1316: break;
"1316
[e $U 407  ]
[; ;Tonche_16F877.h: 1317: case 'E':
"1317
[e :U 541 ]
[; ;Tonche_16F877.h: 1318: switch(pin)
"1318
[e $U 543  ]
[; ;Tonche_16F877.h: 1319: {
"1319
{
[; ;Tonche_16F877.h: 1320: case 0:
"1320
[e :U 544 ]
[; ;Tonche_16F877.h: 1321: if(value == 'h')
"1321
[e $ ! == -> _value `ui -> 104 `ui 545  ]
[; ;Tonche_16F877.h: 1322: {
"1322
{
[; ;Tonche_16F877.h: 1323: PORTEbits.RE0 = 1;
"1323
[e = . . _PORTEbits 0 0 -> -> 1 `i `uc ]
"1324
}
[; ;Tonche_16F877.h: 1324: }
[e $U 546  ]
"1325
[e :U 545 ]
[; ;Tonche_16F877.h: 1325: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 547  ]
[; ;Tonche_16F877.h: 1326: {
"1326
{
[; ;Tonche_16F877.h: 1327: PORTEbits.RE0 = 0;
"1327
[e = . . _PORTEbits 0 0 -> -> 0 `i `uc ]
"1328
}
[e :U 547 ]
"1329
[e :U 546 ]
[; ;Tonche_16F877.h: 1328: }
[; ;Tonche_16F877.h: 1329: break;
[e $U 542  ]
[; ;Tonche_16F877.h: 1330: case 1:
"1330
[e :U 548 ]
[; ;Tonche_16F877.h: 1331: if(value == 'h')
"1331
[e $ ! == -> _value `ui -> 104 `ui 549  ]
[; ;Tonche_16F877.h: 1332: {
"1332
{
[; ;Tonche_16F877.h: 1333: PORTEbits.RE1 = 1;
"1333
[e = . . _PORTEbits 0 1 -> -> 1 `i `uc ]
"1334
}
[; ;Tonche_16F877.h: 1334: }
[e $U 550  ]
"1335
[e :U 549 ]
[; ;Tonche_16F877.h: 1335: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 551  ]
[; ;Tonche_16F877.h: 1336: {
"1336
{
[; ;Tonche_16F877.h: 1337: PORTEbits.RE1 = 0;
"1337
[e = . . _PORTEbits 0 1 -> -> 0 `i `uc ]
"1338
}
[e :U 551 ]
"1339
[e :U 550 ]
[; ;Tonche_16F877.h: 1338: }
[; ;Tonche_16F877.h: 1339: break;
[e $U 542  ]
[; ;Tonche_16F877.h: 1340: case 2:
"1340
[e :U 552 ]
[; ;Tonche_16F877.h: 1341: if(value == 'h')
"1341
[e $ ! == -> _value `ui -> 104 `ui 553  ]
[; ;Tonche_16F877.h: 1342: {
"1342
{
[; ;Tonche_16F877.h: 1343: PORTEbits.RE2 = 1;
"1343
[e = . . _PORTEbits 0 2 -> -> 1 `i `uc ]
"1344
}
[; ;Tonche_16F877.h: 1344: }
[e $U 554  ]
"1345
[e :U 553 ]
[; ;Tonche_16F877.h: 1345: else if(value == 'l')
[e $ ! == -> _value `ui -> 108 `ui 555  ]
[; ;Tonche_16F877.h: 1346: {
"1346
{
[; ;Tonche_16F877.h: 1347: PORTEbits.RE2 = 0;
"1347
[e = . . _PORTEbits 0 2 -> -> 0 `i `uc ]
"1348
}
[e :U 555 ]
"1349
[e :U 554 ]
[; ;Tonche_16F877.h: 1348: }
[; ;Tonche_16F877.h: 1349: break;
[e $U 542  ]
"1350
}
[; ;Tonche_16F877.h: 1350: }
[e $U 542  ]
"1318
[e :U 543 ]
[e [\ _pin , $ -> 0 `i 544
 , $ -> 1 `i 548
 , $ -> 2 `i 552
 542 ]
"1350
[e :U 542 ]
[; ;Tonche_16F877.h: 1351: break;
"1351
[e $U 407  ]
"1352
}
[; ;Tonche_16F877.h: 1352: }
[e $U 407  ]
"995
[e :U 408 ]
[e [\ _port , $ -> -> 65 `ui `uc 409
 , $ -> -> 66 `ui `uc 436
 , $ -> -> 67 `ui `uc 471
 , $ -> -> 68 `ui `uc 506
 , $ -> -> 69 `ui `uc 541
 407 ]
"1352
[e :U 407 ]
[; ;Tonche_16F877.h: 1353: }
"1353
[e :UE 406 ]
}
"1357
[v _timer0begin `(v ~T0 @X0 1 ef ]
"1358
{
[; ;Tonche_16F877.h: 1357: void timer0begin(void)
[; ;Tonche_16F877.h: 1358: {
[e :U _timer0begin ]
[f ]
[; ;Tonche_16F877.h: 1359: preventiveWDTtoTMR0();
"1359
[e ( _preventiveWDTtoTMR0 ..  ]
[; ;Tonche_16F877.h: 1360: OPTION_REGbits.T0CS = 0;
"1360
[e = . . _OPTION_REGbits 0 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1361: OPTION_REGbits.PSA = 0;
"1361
[e = . . _OPTION_REGbits 0 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1362: }
"1362
[e :UE 556 ]
}
"1363
[v _counter0begin `(v ~T0 @X0 1 ef1`uc ]
"1364
{
[; ;Tonche_16F877.h: 1363: void counter0begin(char edge)
[; ;Tonche_16F877.h: 1364: {
[e :U _counter0begin ]
"1363
[v _edge `uc ~T0 @X0 1 r1 ]
"1364
[f ]
[; ;Tonche_16F877.h: 1365: preventiveWDTtoTMR0();
"1365
[e ( _preventiveWDTtoTMR0 ..  ]
[; ;Tonche_16F877.h: 1366: OPTION_REGbits.T0CS = 1;
"1366
[e = . . _OPTION_REGbits 0 3 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1367: OPTION_REGbits.PSA = 0;
"1367
[e = . . _OPTION_REGbits 0 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1368: switch(edge)
"1368
[e $U 559  ]
[; ;Tonche_16F877.h: 1369: {
"1369
{
[; ;Tonche_16F877.h: 1370: case 'r':
"1370
[e :U 560 ]
[; ;Tonche_16F877.h: 1371: OPTION_REGbits.T0SE = 0;
"1371
[e = . . _OPTION_REGbits 0 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1372: break;
"1372
[e $U 558  ]
[; ;Tonche_16F877.h: 1373: case 'f':
"1373
[e :U 561 ]
[; ;Tonche_16F877.h: 1374: OPTION_REGbits.T0SE = 1;
"1374
[e = . . _OPTION_REGbits 0 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1375: break;
"1375
[e $U 558  ]
"1376
}
[; ;Tonche_16F877.h: 1376: }
[e $U 558  ]
"1368
[e :U 559 ]
[e [\ _edge , $ -> -> 114 `ui `uc 560
 , $ -> -> 102 `ui `uc 561
 558 ]
"1376
[e :U 558 ]
[; ;Tonche_16F877.h: 1377: }
"1377
[e :UE 557 ]
}
"1378
[v _timerCounter0Prescaler `(v ~T0 @X0 1 ef1`Ci ]
"1379
{
[; ;Tonche_16F877.h: 1378: void timerCounter0Prescaler(const int rate)
[; ;Tonche_16F877.h: 1379: {
[e :U _timerCounter0Prescaler ]
"1378
[v _rate `Ci ~T0 @X0 1 r1 ]
"1379
[f ]
[; ;Tonche_16F877.h: 1380: switch(rate)
"1380
[e $U 564  ]
[; ;Tonche_16F877.h: 1381: {
"1381
{
[; ;Tonche_16F877.h: 1382: case 2:
"1382
[e :U 565 ]
[; ;Tonche_16F877.h: 1383: OPTION_REGbits.PS2 = 0;
"1383
[e = . . _OPTION_REGbits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1384: OPTION_REGbits.PS1 = 0;
"1384
[e = . . _OPTION_REGbits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1385: OPTION_REGbits.PS0 = 0;
"1385
[e = . . _OPTION_REGbits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1386: break;
"1386
[e $U 563  ]
[; ;Tonche_16F877.h: 1387: case 4:
"1387
[e :U 566 ]
[; ;Tonche_16F877.h: 1388: OPTION_REGbits.PS2 = 0;
"1388
[e = . . _OPTION_REGbits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1389: OPTION_REGbits.PS1 = 0;
"1389
[e = . . _OPTION_REGbits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1390: OPTION_REGbits.PS0 = 1;
"1390
[e = . . _OPTION_REGbits 1 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1391: break;
"1391
[e $U 563  ]
[; ;Tonche_16F877.h: 1392: case 8:
"1392
[e :U 567 ]
[; ;Tonche_16F877.h: 1393: OPTION_REGbits.PS2 = 0;
"1393
[e = . . _OPTION_REGbits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1394: OPTION_REGbits.PS1 = 1;
"1394
[e = . . _OPTION_REGbits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1395: OPTION_REGbits.PS0 = 0;
"1395
[e = . . _OPTION_REGbits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1396: break;
"1396
[e $U 563  ]
[; ;Tonche_16F877.h: 1397: case 16:
"1397
[e :U 568 ]
[; ;Tonche_16F877.h: 1398: OPTION_REGbits.PS2 = 0;
"1398
[e = . . _OPTION_REGbits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1399: OPTION_REGbits.PS1 = 1;
"1399
[e = . . _OPTION_REGbits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1400: OPTION_REGbits.PS0 = 1;
"1400
[e = . . _OPTION_REGbits 1 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1401: break;
"1401
[e $U 563  ]
[; ;Tonche_16F877.h: 1402: case 32:
"1402
[e :U 569 ]
[; ;Tonche_16F877.h: 1403: OPTION_REGbits.PS2 = 1;
"1403
[e = . . _OPTION_REGbits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1404: OPTION_REGbits.PS1 = 0;
"1404
[e = . . _OPTION_REGbits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1405: OPTION_REGbits.PS0 = 0;
"1405
[e = . . _OPTION_REGbits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1406: break;
"1406
[e $U 563  ]
[; ;Tonche_16F877.h: 1407: case 64:
"1407
[e :U 570 ]
[; ;Tonche_16F877.h: 1408: OPTION_REGbits.PS2 = 1;
"1408
[e = . . _OPTION_REGbits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1409: OPTION_REGbits.PS1 = 0;
"1409
[e = . . _OPTION_REGbits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1410: OPTION_REGbits.PS0 = 1;
"1410
[e = . . _OPTION_REGbits 1 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1411: break;
"1411
[e $U 563  ]
[; ;Tonche_16F877.h: 1412: case 128:
"1412
[e :U 571 ]
[; ;Tonche_16F877.h: 1413: OPTION_REGbits.PS2 = 1;
"1413
[e = . . _OPTION_REGbits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1414: OPTION_REGbits.PS1 = 1;
"1414
[e = . . _OPTION_REGbits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1415: OPTION_REGbits.PS0 = 0;
"1415
[e = . . _OPTION_REGbits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1416: break;
"1416
[e $U 563  ]
[; ;Tonche_16F877.h: 1417: case 256:
"1417
[e :U 572 ]
[; ;Tonche_16F877.h: 1418: OPTION_REGbits.PS2 = 1;
"1418
[e = . . _OPTION_REGbits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1419: OPTION_REGbits.PS1 = 1;
"1419
[e = . . _OPTION_REGbits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1420: OPTION_REGbits.PS0 = 1;
"1420
[e = . . _OPTION_REGbits 1 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1421: break;
"1421
[e $U 563  ]
"1422
}
[; ;Tonche_16F877.h: 1422: }
[e $U 563  ]
"1380
[e :U 564 ]
[e [\ _rate , $ -> 2 `i 565
 , $ -> 4 `i 566
 , $ -> 8 `i 567
 , $ -> 16 `i 568
 , $ -> 32 `i 569
 , $ -> 64 `i 570
 , $ -> 128 `i 571
 , $ -> 256 `i 572
 563 ]
"1422
[e :U 563 ]
[; ;Tonche_16F877.h: 1423: }
"1423
[e :UE 562 ]
}
"1424
[v _preventiveWDTtoTMR0 `(v ~T0 @X0 1 ef ]
"1425
{
[; ;Tonche_16F877.h: 1424: void preventiveWDTtoTMR0(void)
[; ;Tonche_16F877.h: 1425: {
[e :U _preventiveWDTtoTMR0 ]
[f ]
[; ;Tonche_16F877.h: 1427: asm("BSF    STATUS, RP0");
"1427
[; <" BSF    STATUS, RP0 ;# ">
[; ;Tonche_16F877.h: 1428: asm("MOVLW  b'xx0x0xxx'");
"1428
[; <" MOVLW  b'xx0x0xxx' ;# ">
[; ;Tonche_16F877.h: 1429: asm("MOVWF  OPTION_REG");
"1429
[; <" MOVWF  OPTION_REG ;# ">
[; ;Tonche_16F877.h: 1430: asm("BCF    STATUS, RP0");
"1430
[; <" BCF    STATUS, RP0 ;# ">
[; ;Tonche_16F877.h: 1431: asm("CLRF   TMR0");
"1431
[; <" CLRF   TMR0 ;# ">
[; ;Tonche_16F877.h: 1432: asm("BSF    STATUS, RP1");
"1432
[; <" BSF    STATUS, RP1 ;# ">
[; ;Tonche_16F877.h: 1433: asm("MOVLW  b'xxxx1xxx'");
"1433
[; <" MOVLW  b'xxxx1xxx' ;# ">
[; ;Tonche_16F877.h: 1434: asm("MOVWF  OPTION_REG");
"1434
[; <" MOVWF  OPTION_REG ;# ">
[; ;Tonche_16F877.h: 1435: asm("BCF    STATUS, RP0");
"1435
[; <" BCF    STATUS, RP0 ;# ">
[; ;Tonche_16F877.h: 1437: asm("CLRWDT ");
"1437
[; <" CLRWDT  ;# ">
[; ;Tonche_16F877.h: 1438: asm("BSF    STATUS, RP0");
"1438
[; <" BSF    STATUS, RP0 ;# ">
[; ;Tonche_16F877.h: 1439: asm("MOVLW  b'xxxx0xxx'");
"1439
[; <" MOVLW  b'xxxx0xxx' ;# ">
[; ;Tonche_16F877.h: 1440: asm("MOVWF  OPTION_REG");
"1440
[; <" MOVWF  OPTION_REG ;# ">
[; ;Tonche_16F877.h: 1441: asm("BCF    STATUS, RP0");
"1441
[; <" BCF    STATUS, RP0 ;# ">
[; ;Tonche_16F877.h: 1442: }
"1442
[e :UE 573 ]
}
"1446
[v _timer1begin `(v ~T0 @X0 1 ef ]
"1447
{
[; ;Tonche_16F877.h: 1446: void timer1begin(void)
[; ;Tonche_16F877.h: 1447: {
[e :U _timer1begin ]
[f ]
[; ;Tonche_16F877.h: 1448: T1CONbits.TMR1CS = 0;
"1448
[e = . . _T1CONbits 0 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1449: }
"1449
[e :UE 574 ]
}
"1450
[v _counter1begin `(v ~T0 @X0 1 ef ]
"1451
{
[; ;Tonche_16F877.h: 1450: void counter1begin(void)
[; ;Tonche_16F877.h: 1451: {
[e :U _counter1begin ]
[f ]
[; ;Tonche_16F877.h: 1452: T1CONbits.TMR1CS = 1;
"1452
[e = . . _T1CONbits 0 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1453: }
"1453
[e :UE 575 ]
}
"1454
[v _timerCounter1start `(v ~T0 @X0 1 ef ]
"1455
{
[; ;Tonche_16F877.h: 1454: void timerCounter1start(void)
[; ;Tonche_16F877.h: 1455: {
[e :U _timerCounter1start ]
[f ]
[; ;Tonche_16F877.h: 1456: T1CONbits.TMR1ON = 1;
"1456
[e = . . _T1CONbits 0 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1457: }
"1457
[e :UE 576 ]
}
"1458
[v _timer1read `(i ~T0 @X0 1 ef ]
"1459
{
[; ;Tonche_16F877.h: 1458: int timer1read(void)
[; ;Tonche_16F877.h: 1459: {
[e :U _timer1read ]
[f ]
"1460
[v _T1H `i ~T0 @X0 1 a ]
[; ;Tonche_16F877.h: 1460: int T1H = 0;
[e = _T1H -> 0 `i ]
"1461
[v _T1L `i ~T0 @X0 1 a ]
[; ;Tonche_16F877.h: 1461: int T1L = 0;
[e = _T1L -> 0 `i ]
[; ;Tonche_16F877.h: 1462: T1H = TMR1H;
"1462
[e = _T1H -> _TMR1H `i ]
[; ;Tonche_16F877.h: 1463: T1L = TMR1L;
"1463
[e = _T1L -> _TMR1L `i ]
[; ;Tonche_16F877.h: 1464: return T1H + T1L;
"1464
[e ) + _T1H _T1L ]
[e $UE 577  ]
[; ;Tonche_16F877.h: 1465: }
"1465
[e :UE 577 ]
}
"1466
[v _tmr1Prescaler `(v ~T0 @X0 1 ef1`i ]
"1467
{
[; ;Tonche_16F877.h: 1466: void tmr1Prescaler(int rate)
[; ;Tonche_16F877.h: 1467: {
[e :U _tmr1Prescaler ]
"1466
[v _rate `i ~T0 @X0 1 r1 ]
"1467
[f ]
[; ;Tonche_16F877.h: 1468: switch(rate)
"1468
[e $U 580  ]
[; ;Tonche_16F877.h: 1469: {
"1469
{
[; ;Tonche_16F877.h: 1470: case 8:
"1470
[e :U 581 ]
[; ;Tonche_16F877.h: 1471: T1CONbits.T1CKPS1 = 1;
"1471
[e = . . _T1CONbits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1472: T1CONbits.T1CKPS0 = 1;
"1472
[e = . . _T1CONbits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1473: break;
"1473
[e $U 579  ]
[; ;Tonche_16F877.h: 1474: case 4:
"1474
[e :U 582 ]
[; ;Tonche_16F877.h: 1475: T1CONbits.T1CKPS1 = 1;
"1475
[e = . . _T1CONbits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1476: T1CONbits.T1CKPS0 = 0;
"1476
[e = . . _T1CONbits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1477: break;
"1477
[e $U 579  ]
[; ;Tonche_16F877.h: 1478: case 2:
"1478
[e :U 583 ]
[; ;Tonche_16F877.h: 1479: T1CONbits.T1CKPS1 = 0;
"1479
[e = . . _T1CONbits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1480: T1CONbits.T1CKPS0 = 1;
"1480
[e = . . _T1CONbits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1481: break;
"1481
[e $U 579  ]
[; ;Tonche_16F877.h: 1482: case 1:
"1482
[e :U 584 ]
[; ;Tonche_16F877.h: 1483: T1CONbits.T1CKPS1 = 0;
"1483
[e = . . _T1CONbits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1484: T1CONbits.T1CKPS0 = 0;
"1484
[e = . . _T1CONbits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1485: break;
"1485
[e $U 579  ]
"1486
}
[; ;Tonche_16F877.h: 1486: }
[e $U 579  ]
"1468
[e :U 580 ]
[e [\ _rate , $ -> 8 `i 581
 , $ -> 4 `i 582
 , $ -> 2 `i 583
 , $ -> 1 `i 584
 579 ]
"1486
[e :U 579 ]
[; ;Tonche_16F877.h: 1487: }
"1487
[e :UE 578 ]
}
"1492
[v _spiRead `(i ~T0 @X0 1 ef ]
"1493
{
[; ;Tonche_16F877.h: 1492: int spiRead(void)
[; ;Tonche_16F877.h: 1493: {
[e :U _spiRead ]
[f ]
[; ;Tonche_16F877.h: 1494: return SSPBUF;
"1494
[e ) -> _SSPBUF `i ]
[e $UE 585  ]
[; ;Tonche_16F877.h: 1495: }
"1495
[e :UE 585 ]
}
"1496
[v _spiSlavebegin `(v ~T0 @X0 1 ef ]
"1497
{
[; ;Tonche_16F877.h: 1496: void spiSlavebegin(void)
[; ;Tonche_16F877.h: 1497: {
[e :U _spiSlavebegin ]
[f ]
[; ;Tonche_16F877.h: 1498: ADPortConfiguration(14);
"1498
[e ( _ADPortConfiguration (1 -> 14 `i ]
[; ;Tonche_16F877.h: 1499: SSPSTATbits.SMP = 0;
"1499
[e = . . _SSPSTATbits 0 7 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1500: SSPCONbits.SSPEN = 1;
"1500
[e = . . _SSPCONbits 0 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1501: TRISCbits.TRISC3 = 1;
"1501
[e = . . _TRISCbits 0 3 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1502: TRISCbits.TRISC4 = 1;
"1502
[e = . . _TRISCbits 0 4 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1503: TRISCbits.TRISC5 = 0;
"1503
[e = . . _TRISCbits 0 5 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1504: TRISAbits.TRISA5 = 1;
"1504
[e = . . _TRISAbits 0 5 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1505: SSPCONbits.SSPM3 = 0;
"1505
[e = . . _SSPCONbits 1 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1506: SSPCONbits.SSPM2 = 1;
"1506
[e = . . _SSPCONbits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1507: SSPCONbits.SSPM1 = 0;
"1507
[e = . . _SSPCONbits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1508: SSPCONbits.SSPM0 = 0;
"1508
[e = . . _SSPCONbits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1510: }
"1510
[e :UE 586 ]
}
"1511
[v _ADPortConfiguration `(v ~T0 @X0 1 ef1`Ci ]
"1512
{
[; ;Tonche_16F877.h: 1511: void ADPortConfiguration(const int config)
[; ;Tonche_16F877.h: 1512: {
[e :U _ADPortConfiguration ]
"1511
[v _config `Ci ~T0 @X0 1 r1 ]
"1512
[f ]
[; ;Tonche_16F877.h: 1513: switch(config)
"1513
[e $U 589  ]
[; ;Tonche_16F877.h: 1514: {
"1514
{
[; ;Tonche_16F877.h: 1515: case 0:
"1515
[e :U 590 ]
[; ;Tonche_16F877.h: 1516: ADCON1bits.PCFG3 = 0;
"1516
[e = . . _ADCON1bits 1 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1517: ADCON1bits.PCFG2 = 0;
"1517
[e = . . _ADCON1bits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1518: ADCON1bits.PCFG1 = 0;
"1518
[e = . . _ADCON1bits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1519: ADCON1bits.PCFG0 = 0;
"1519
[e = . . _ADCON1bits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1520: break;
"1520
[e $U 588  ]
[; ;Tonche_16F877.h: 1521: case 1:
"1521
[e :U 591 ]
[; ;Tonche_16F877.h: 1522: ADCON1bits.PCFG3 = 0;
"1522
[e = . . _ADCON1bits 1 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1523: ADCON1bits.PCFG2 = 0;
"1523
[e = . . _ADCON1bits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1524: ADCON1bits.PCFG1 = 0;
"1524
[e = . . _ADCON1bits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1525: ADCON1bits.PCFG0 = 1;
"1525
[e = . . _ADCON1bits 1 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1526: break;
"1526
[e $U 588  ]
[; ;Tonche_16F877.h: 1527: case 2:
"1527
[e :U 592 ]
[; ;Tonche_16F877.h: 1528: ADCON1bits.PCFG3 = 0;
"1528
[e = . . _ADCON1bits 1 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1529: ADCON1bits.PCFG2 = 0;
"1529
[e = . . _ADCON1bits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1530: ADCON1bits.PCFG1 = 1;
"1530
[e = . . _ADCON1bits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1531: ADCON1bits.PCFG0 = 0;
"1531
[e = . . _ADCON1bits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1532: break;
"1532
[e $U 588  ]
[; ;Tonche_16F877.h: 1533: case 3:
"1533
[e :U 593 ]
[; ;Tonche_16F877.h: 1534: ADCON1bits.PCFG3 = 0;
"1534
[e = . . _ADCON1bits 1 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1535: ADCON1bits.PCFG2 = 0;
"1535
[e = . . _ADCON1bits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1536: ADCON1bits.PCFG1 = 1;
"1536
[e = . . _ADCON1bits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1537: ADCON1bits.PCFG0 = 1;
"1537
[e = . . _ADCON1bits 1 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1538: break;
"1538
[e $U 588  ]
[; ;Tonche_16F877.h: 1539: case 4:
"1539
[e :U 594 ]
[; ;Tonche_16F877.h: 1540: ADCON1bits.PCFG3 = 0;
"1540
[e = . . _ADCON1bits 1 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1541: ADCON1bits.PCFG2 = 1;
"1541
[e = . . _ADCON1bits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1542: ADCON1bits.PCFG1 = 0;
"1542
[e = . . _ADCON1bits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1543: ADCON1bits.PCFG0 = 0;
"1543
[e = . . _ADCON1bits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1544: break;
"1544
[e $U 588  ]
[; ;Tonche_16F877.h: 1545: case 5:
"1545
[e :U 595 ]
[; ;Tonche_16F877.h: 1546: ADCON1bits.PCFG3 = 0;
"1546
[e = . . _ADCON1bits 1 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1547: ADCON1bits.PCFG2 = 1;
"1547
[e = . . _ADCON1bits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1548: ADCON1bits.PCFG1 = 0;
"1548
[e = . . _ADCON1bits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1549: ADCON1bits.PCFG0 = 1;
"1549
[e = . . _ADCON1bits 1 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1550: break;
"1550
[e $U 588  ]
[; ;Tonche_16F877.h: 1551: case 6:
"1551
[e :U 596 ]
[; ;Tonche_16F877.h: 1552: ADCON1bits.PCFG3 = 0;
"1552
[e = . . _ADCON1bits 1 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1553: ADCON1bits.PCFG2 = 1;
"1553
[e = . . _ADCON1bits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1554: ADCON1bits.PCFG1 = 1;
"1554
[e = . . _ADCON1bits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1555: ADCON1bits.PCFG0 = 0;
"1555
[e = . . _ADCON1bits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1556: break;
"1556
[e $U 588  ]
[; ;Tonche_16F877.h: 1557: case 7:
"1557
[e :U 597 ]
[; ;Tonche_16F877.h: 1558: ADCON1bits.PCFG3 = 1;
"1558
[e = . . _ADCON1bits 1 3 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1559: ADCON1bits.PCFG2 = 0;
"1559
[e = . . _ADCON1bits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1560: ADCON1bits.PCFG1 = 0;
"1560
[e = . . _ADCON1bits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1561: ADCON1bits.PCFG0 = 0;
"1561
[e = . . _ADCON1bits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1562: break;
"1562
[e $U 588  ]
[; ;Tonche_16F877.h: 1563: case 8:
"1563
[e :U 598 ]
[; ;Tonche_16F877.h: 1564: ADCON1bits.PCFG3 = 1;
"1564
[e = . . _ADCON1bits 1 3 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1565: ADCON1bits.PCFG2 = 0;
"1565
[e = . . _ADCON1bits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1566: ADCON1bits.PCFG1 = 0;
"1566
[e = . . _ADCON1bits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1567: ADCON1bits.PCFG0 = 1;
"1567
[e = . . _ADCON1bits 1 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1568: break;
"1568
[e $U 588  ]
[; ;Tonche_16F877.h: 1569: case 9:
"1569
[e :U 599 ]
[; ;Tonche_16F877.h: 1570: ADCON1bits.PCFG3 = 1;
"1570
[e = . . _ADCON1bits 1 3 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1571: ADCON1bits.PCFG2 = 0;
"1571
[e = . . _ADCON1bits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1572: ADCON1bits.PCFG1 = 1;
"1572
[e = . . _ADCON1bits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1573: ADCON1bits.PCFG0 = 0;
"1573
[e = . . _ADCON1bits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1574: break;
"1574
[e $U 588  ]
[; ;Tonche_16F877.h: 1575: case 10:
"1575
[e :U 600 ]
[; ;Tonche_16F877.h: 1576: ADCON1bits.PCFG3 = 1;
"1576
[e = . . _ADCON1bits 1 3 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1577: ADCON1bits.PCFG2 = 0;
"1577
[e = . . _ADCON1bits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1578: ADCON1bits.PCFG1 = 1;
"1578
[e = . . _ADCON1bits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1579: ADCON1bits.PCFG0 = 1;
"1579
[e = . . _ADCON1bits 1 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1580: break;
"1580
[e $U 588  ]
[; ;Tonche_16F877.h: 1581: case 11:
"1581
[e :U 601 ]
[; ;Tonche_16F877.h: 1582: ADCON1bits.PCFG3 = 1;
"1582
[e = . . _ADCON1bits 1 3 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1583: ADCON1bits.PCFG2 = 1;
"1583
[e = . . _ADCON1bits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1584: ADCON1bits.PCFG1 = 0;
"1584
[e = . . _ADCON1bits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1585: ADCON1bits.PCFG0 = 0;
"1585
[e = . . _ADCON1bits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1586: break;
"1586
[e $U 588  ]
[; ;Tonche_16F877.h: 1587: case 12:
"1587
[e :U 602 ]
[; ;Tonche_16F877.h: 1588: ADCON1bits.PCFG3 = 1;
"1588
[e = . . _ADCON1bits 1 3 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1589: ADCON1bits.PCFG2 = 1;
"1589
[e = . . _ADCON1bits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1590: ADCON1bits.PCFG1 = 0;
"1590
[e = . . _ADCON1bits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1591: ADCON1bits.PCFG0 = 1;
"1591
[e = . . _ADCON1bits 1 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1592: break;
"1592
[e $U 588  ]
[; ;Tonche_16F877.h: 1593: case 13:
"1593
[e :U 603 ]
[; ;Tonche_16F877.h: 1594: ADCON1bits.PCFG3 = 1;
"1594
[e = . . _ADCON1bits 1 3 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1595: ADCON1bits.PCFG2 = 1;
"1595
[e = . . _ADCON1bits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1596: ADCON1bits.PCFG1 = 1;
"1596
[e = . . _ADCON1bits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1597: ADCON1bits.PCFG0 = 0;
"1597
[e = . . _ADCON1bits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1598: break;
"1598
[e $U 588  ]
[; ;Tonche_16F877.h: 1599: case 14:
"1599
[e :U 604 ]
[; ;Tonche_16F877.h: 1600: ADCON1bits.PCFG3 = 1;
"1600
[e = . . _ADCON1bits 1 3 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1601: ADCON1bits.PCFG2 = 1;
"1601
[e = . . _ADCON1bits 1 2 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1602: ADCON1bits.PCFG1 = 1;
"1602
[e = . . _ADCON1bits 1 1 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1603: ADCON1bits.PCFG0 = 1;
"1603
[e = . . _ADCON1bits 1 0 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1604: break;
"1604
[e $U 588  ]
[; ;Tonche_16F877.h: 1605: default:
"1605
[e :U 605 ]
[; ;Tonche_16F877.h: 1606: ADCON1bits.PCFG3 = 0;
"1606
[e = . . _ADCON1bits 1 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1607: ADCON1bits.PCFG2 = 0;
"1607
[e = . . _ADCON1bits 1 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1608: ADCON1bits.PCFG1 = 0;
"1608
[e = . . _ADCON1bits 1 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1609: ADCON1bits.PCFG0 = 0;
"1609
[e = . . _ADCON1bits 1 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1610: break;
"1610
[e $U 588  ]
"1611
}
[; ;Tonche_16F877.h: 1611: }
[e $U 588  ]
"1513
[e :U 589 ]
[e [\ _config , $ -> 0 `i 590
 , $ -> 1 `i 591
 , $ -> 2 `i 592
 , $ -> 3 `i 593
 , $ -> 4 `i 594
 , $ -> 5 `i 595
 , $ -> 6 `i 596
 , $ -> 7 `i 597
 , $ -> 8 `i 598
 , $ -> 9 `i 599
 , $ -> 10 `i 600
 , $ -> 11 `i 601
 , $ -> 12 `i 602
 , $ -> 13 `i 603
 , $ -> 14 `i 604
 605 ]
"1611
[e :U 588 ]
[; ;Tonche_16F877.h: 1612: }
"1612
[e :UE 587 ]
}
"1613
[v _spiCLKpolarity `(v ~T0 @X0 1 ef1`uc ]
"1614
{
[; ;Tonche_16F877.h: 1613: void spiCLKpolarity(char polarity)
[; ;Tonche_16F877.h: 1614: {
[e :U _spiCLKpolarity ]
"1613
[v _polarity `uc ~T0 @X0 1 r1 ]
"1614
[f ]
[; ;Tonche_16F877.h: 1615: if(polarity == 'h')
"1615
[e $ ! == -> _polarity `ui -> 104 `ui 607  ]
[; ;Tonche_16F877.h: 1616: {
"1616
{
[; ;Tonche_16F877.h: 1617: SSPCONbits.CKP = 1;
"1617
[e = . . _SSPCONbits 0 1 -> -> 1 `i `uc ]
"1618
}
[; ;Tonche_16F877.h: 1618: }
[e $U 608  ]
"1619
[e :U 607 ]
[; ;Tonche_16F877.h: 1619: else if(polarity == 'l')
[e $ ! == -> _polarity `ui -> 108 `ui 609  ]
[; ;Tonche_16F877.h: 1620: {
"1620
{
[; ;Tonche_16F877.h: 1621: SSPCONbits.CKP = 0;
"1621
[e = . . _SSPCONbits 0 1 -> -> 0 `i `uc ]
"1622
}
[e :U 609 ]
"1623
[e :U 608 ]
[; ;Tonche_16F877.h: 1622: }
[; ;Tonche_16F877.h: 1623: }
[e :UE 606 ]
}
"1624
[v _spiBufferfull `(i ~T0 @X0 1 ef ]
"1625
{
[; ;Tonche_16F877.h: 1624: int spiBufferfull(void)
[; ;Tonche_16F877.h: 1625: {
[e :U _spiBufferfull ]
[f ]
[; ;Tonche_16F877.h: 1626: return SSPSTATbits.BF;
"1626
[e ) -> . . _SSPSTATbits 0 0 `i ]
[e $UE 610  ]
[; ;Tonche_16F877.h: 1627: }
"1627
[e :UE 610 ]
}
"1628
[v _spiOverflow `(i ~T0 @X0 1 ef ]
"1629
{
[; ;Tonche_16F877.h: 1628: int spiOverflow(void)
[; ;Tonche_16F877.h: 1629: {
[e :U _spiOverflow ]
[f ]
[; ;Tonche_16F877.h: 1630: return SSPCONbits.SSPOV;
"1630
[e ) -> . . _SSPCONbits 0 3 `i ]
[e $UE 611  ]
[; ;Tonche_16F877.h: 1631: }
"1631
[e :UE 611 ]
}
"1632
[v _spiMasterbegin `(v ~T0 @X0 1 ef ]
"1633
{
[; ;Tonche_16F877.h: 1632: void spiMasterbegin(void)
[; ;Tonche_16F877.h: 1633: {
[e :U _spiMasterbegin ]
[f ]
[; ;Tonche_16F877.h: 1635: }
"1635
[e :UE 612 ]
}
"1639
[v _GlobalInterruptEnable `(v ~T0 @X0 1 ef1`i ]
"1640
{
[; ;Tonche_16F877.h: 1639: void GlobalInterruptEnable(int mode)
[; ;Tonche_16F877.h: 1640: {
[e :U _GlobalInterruptEnable ]
"1639
[v _mode `i ~T0 @X0 1 r1 ]
"1640
[f ]
[; ;Tonche_16F877.h: 1641: if(mode == 1)
"1641
[e $ ! == _mode -> 1 `i 614  ]
[; ;Tonche_16F877.h: 1642: {
"1642
{
[; ;Tonche_16F877.h: 1643: INTCONbits.GIE = 1;
"1643
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"1644
}
[; ;Tonche_16F877.h: 1644: }
[e $U 615  ]
"1645
[e :U 614 ]
[; ;Tonche_16F877.h: 1645: else
[; ;Tonche_16F877.h: 1646: {
"1646
{
[; ;Tonche_16F877.h: 1647: INTCONbits.GIE = 0;
"1647
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"1648
}
[e :U 615 ]
[; ;Tonche_16F877.h: 1648: }
[; ;Tonche_16F877.h: 1649: }
"1649
[e :UE 613 ]
}
"1650
[v _PeripheralIntEnable `(v ~T0 @X0 1 ef1`i ]
"1651
{
[; ;Tonche_16F877.h: 1650: void PeripheralIntEnable(int mode)
[; ;Tonche_16F877.h: 1651: {
[e :U _PeripheralIntEnable ]
"1650
[v _mode `i ~T0 @X0 1 r1 ]
"1651
[f ]
[; ;Tonche_16F877.h: 1652: if(mode == 1)
"1652
[e $ ! == _mode -> 1 `i 617  ]
[; ;Tonche_16F877.h: 1653: {
"1653
{
[; ;Tonche_16F877.h: 1654: INTCONbits.PEIE = 1;
"1654
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
"1655
}
[; ;Tonche_16F877.h: 1655: }
[e $U 618  ]
"1656
[e :U 617 ]
[; ;Tonche_16F877.h: 1656: else
[; ;Tonche_16F877.h: 1657: {
"1657
{
[; ;Tonche_16F877.h: 1658: INTCONbits.PEIE = 0;
"1658
[e = . . _INTCONbits 0 6 -> -> 0 `i `uc ]
"1659
}
[e :U 618 ]
[; ;Tonche_16F877.h: 1659: }
[; ;Tonche_16F877.h: 1660: }
"1660
[e :UE 616 ]
}
"1661
[v _timer0IntEnable `(v ~T0 @X0 1 ef1`i ]
"1662
{
[; ;Tonche_16F877.h: 1661: void timer0IntEnable(int mode)
[; ;Tonche_16F877.h: 1662: {
[e :U _timer0IntEnable ]
"1661
[v _mode `i ~T0 @X0 1 r1 ]
"1662
[f ]
[; ;Tonche_16F877.h: 1663: if(mode == 1)
"1663
[e $ ! == _mode -> 1 `i 620  ]
[; ;Tonche_16F877.h: 1664: {
"1664
{
[; ;Tonche_16F877.h: 1665: INTCONbits.T0IE = 1;
"1665
[e = . . _INTCONbits 0 5 -> -> 1 `i `uc ]
"1666
}
[; ;Tonche_16F877.h: 1666: }
[e $U 621  ]
"1667
[e :U 620 ]
[; ;Tonche_16F877.h: 1667: else
[; ;Tonche_16F877.h: 1668: {
"1668
{
[; ;Tonche_16F877.h: 1669: INTCONbits.T0IE = 0;
"1669
[e = . . _INTCONbits 0 5 -> -> 0 `i `uc ]
"1670
}
[e :U 621 ]
[; ;Tonche_16F877.h: 1670: }
[; ;Tonche_16F877.h: 1671: }
"1671
[e :UE 619 ]
}
"1672
[v _ExternalIntEnable `(v ~T0 @X0 1 ef1`i ]
"1673
{
[; ;Tonche_16F877.h: 1672: void ExternalIntEnable(int mode)
[; ;Tonche_16F877.h: 1673: {
[e :U _ExternalIntEnable ]
"1672
[v _mode `i ~T0 @X0 1 r1 ]
"1673
[f ]
[; ;Tonche_16F877.h: 1674: if(mode == 1)
"1674
[e $ ! == _mode -> 1 `i 623  ]
[; ;Tonche_16F877.h: 1675: {
"1675
{
[; ;Tonche_16F877.h: 1676: INTCONbits.INTE = 1;
"1676
[e = . . _INTCONbits 0 4 -> -> 1 `i `uc ]
"1677
}
[; ;Tonche_16F877.h: 1677: }
[e $U 624  ]
"1678
[e :U 623 ]
[; ;Tonche_16F877.h: 1678: else
[; ;Tonche_16F877.h: 1679: {
"1679
{
[; ;Tonche_16F877.h: 1680: INTCONbits.INTE = 0;
"1680
[e = . . _INTCONbits 0 4 -> -> 0 `i `uc ]
"1681
}
[e :U 624 ]
[; ;Tonche_16F877.h: 1681: }
[; ;Tonche_16F877.h: 1682: }
"1682
[e :UE 622 ]
}
"1683
[v _PortBChangeIntEnable `(v ~T0 @X0 1 ef1`i ]
"1684
{
[; ;Tonche_16F877.h: 1683: void PortBChangeIntEnable(int mode)
[; ;Tonche_16F877.h: 1684: {
[e :U _PortBChangeIntEnable ]
"1683
[v _mode `i ~T0 @X0 1 r1 ]
"1684
[f ]
[; ;Tonche_16F877.h: 1685: if(mode == 1)
"1685
[e $ ! == _mode -> 1 `i 626  ]
[; ;Tonche_16F877.h: 1686: {
"1686
{
[; ;Tonche_16F877.h: 1687: INTCONbits.RBIE = 1;
"1687
[e = . . _INTCONbits 0 3 -> -> 1 `i `uc ]
"1688
}
[; ;Tonche_16F877.h: 1688: }
[e $U 627  ]
"1689
[e :U 626 ]
[; ;Tonche_16F877.h: 1689: else
[; ;Tonche_16F877.h: 1690: {
"1690
{
[; ;Tonche_16F877.h: 1691: INTCONbits.RBIE = 0;
"1691
[e = . . _INTCONbits 0 3 -> -> 0 `i `uc ]
"1692
}
[e :U 627 ]
[; ;Tonche_16F877.h: 1692: }
[; ;Tonche_16F877.h: 1693: }
"1693
[e :UE 625 ]
}
"1694
[v _TMR0Overflow `(i ~T0 @X0 1 ef ]
"1695
{
[; ;Tonche_16F877.h: 1694: int TMR0Overflow(void)
[; ;Tonche_16F877.h: 1695: {
[e :U _TMR0Overflow ]
[f ]
[; ;Tonche_16F877.h: 1696: if(INTCONbits.T0IF == 1)
"1696
[e $ ! == -> . . _INTCONbits 0 2 `i -> 1 `i 629  ]
[; ;Tonche_16F877.h: 1697: {
"1697
{
[; ;Tonche_16F877.h: 1698: return 1;
"1698
[e ) -> 1 `i ]
[e $UE 628  ]
"1699
}
[; ;Tonche_16F877.h: 1699: }
[e $U 630  ]
"1700
[e :U 629 ]
[; ;Tonche_16F877.h: 1700: else
[; ;Tonche_16F877.h: 1701: {
"1701
{
[; ;Tonche_16F877.h: 1702: return 0;
"1702
[e ) -> 0 `i ]
[e $UE 628  ]
"1703
}
[e :U 630 ]
[; ;Tonche_16F877.h: 1703: }
[; ;Tonche_16F877.h: 1704: }
"1704
[e :UE 628 ]
}
"1705
[v _TMR0IntReset `(v ~T0 @X0 1 ef ]
"1706
{
[; ;Tonche_16F877.h: 1705: void TMR0IntReset(void)
[; ;Tonche_16F877.h: 1706: {
[e :U _TMR0IntReset ]
[f ]
[; ;Tonche_16F877.h: 1707: INTCONbits.T0IF = 0;
"1707
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1708: }
"1708
[e :UE 631 ]
}
"1709
[v _ExternalInt `(i ~T0 @X0 1 ef ]
"1710
{
[; ;Tonche_16F877.h: 1709: int ExternalInt(void)
[; ;Tonche_16F877.h: 1710: {
[e :U _ExternalInt ]
[f ]
[; ;Tonche_16F877.h: 1711: if(INTCONbits.INTF == 1)
"1711
[e $ ! == -> . . _INTCONbits 0 1 `i -> 1 `i 633  ]
[; ;Tonche_16F877.h: 1712: {
"1712
{
[; ;Tonche_16F877.h: 1713: return 1;
"1713
[e ) -> 1 `i ]
[e $UE 632  ]
"1714
}
[; ;Tonche_16F877.h: 1714: }
[e $U 634  ]
"1715
[e :U 633 ]
[; ;Tonche_16F877.h: 1715: else
[; ;Tonche_16F877.h: 1716: {
"1716
{
[; ;Tonche_16F877.h: 1717: return 0;
"1717
[e ) -> 0 `i ]
[e $UE 632  ]
"1718
}
[e :U 634 ]
[; ;Tonche_16F877.h: 1718: }
[; ;Tonche_16F877.h: 1719: }
"1719
[e :UE 632 ]
}
"1720
[v _ExternalIntReset `(v ~T0 @X0 1 ef ]
"1721
{
[; ;Tonche_16F877.h: 1720: void ExternalIntReset(void)
[; ;Tonche_16F877.h: 1721: {
[e :U _ExternalIntReset ]
[f ]
[; ;Tonche_16F877.h: 1722: INTCONbits.INTF = 0;
"1722
[e = . . _INTCONbits 0 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1723: }
"1723
[e :UE 635 ]
}
"1724
[v _PortBChangeInt `(i ~T0 @X0 1 ef ]
"1725
{
[; ;Tonche_16F877.h: 1724: int PortBChangeInt(void)
[; ;Tonche_16F877.h: 1725: {
[e :U _PortBChangeInt ]
[f ]
[; ;Tonche_16F877.h: 1726: if(INTCONbits.RBIF == 1)
"1726
[e $ ! == -> . . _INTCONbits 0 0 `i -> 1 `i 637  ]
[; ;Tonche_16F877.h: 1727: {
"1727
{
[; ;Tonche_16F877.h: 1728: return 1;
"1728
[e ) -> 1 `i ]
[e $UE 636  ]
"1729
}
[; ;Tonche_16F877.h: 1729: }
[e $U 638  ]
"1730
[e :U 637 ]
[; ;Tonche_16F877.h: 1730: else
[; ;Tonche_16F877.h: 1731: {
"1731
{
[; ;Tonche_16F877.h: 1732: return 0;
"1732
[e ) -> 0 `i ]
[e $UE 636  ]
"1733
}
[e :U 638 ]
[; ;Tonche_16F877.h: 1733: }
[; ;Tonche_16F877.h: 1734: }
"1734
[e :UE 636 ]
}
"1735
[v _PeriheralEnable `(v ~T0 @X0 1 ef2`uc`i ]
"1736
{
[; ;Tonche_16F877.h: 1735: void PeriheralEnable(char peripheral, int mode)
[; ;Tonche_16F877.h: 1736: {
[e :U _PeriheralEnable ]
"1735
[v _peripheral `uc ~T0 @X0 1 r1 ]
[v _mode `i ~T0 @X0 1 r2 ]
"1736
[f ]
[; ;Tonche_16F877.h: 1737: switch(peripheral)
"1737
[e $U 641  ]
[; ;Tonche_16F877.h: 1738: {
"1738
{
[; ;Tonche_16F877.h: 1739: case 'p':
"1739
[e :U 642 ]
[; ;Tonche_16F877.h: 1740: if(mode == 1)
"1740
[e $ ! == _mode -> 1 `i 643  ]
[; ;Tonche_16F877.h: 1741: {
"1741
{
[; ;Tonche_16F877.h: 1742: PIE1bits.PSPIE = 0;
"1742
[e = . . _PIE1bits 0 7 -> -> 0 `i `uc ]
"1743
}
[; ;Tonche_16F877.h: 1743: }
[e $U 644  ]
"1744
[e :U 643 ]
[; ;Tonche_16F877.h: 1744: else if(mode == 0)
[e $ ! == _mode -> 0 `i 645  ]
[; ;Tonche_16F877.h: 1745: {
"1745
{
[; ;Tonche_16F877.h: 1746: PIE1bits.PSPIE = 0;
"1746
[e = . . _PIE1bits 0 7 -> -> 0 `i `uc ]
"1747
}
[; ;Tonche_16F877.h: 1747: }
[e $U 646  ]
"1748
[e :U 645 ]
[; ;Tonche_16F877.h: 1748: else
[; ;Tonche_16F877.h: 1749: {
"1749
{
[; ;Tonche_16F877.h: 1750: PIE1bits.PSPIE = 0;
"1750
[e = . . _PIE1bits 0 7 -> -> 0 `i `uc ]
"1751
}
[e :U 646 ]
[e :U 644 ]
[; ;Tonche_16F877.h: 1751: }
[; ;Tonche_16F877.h: 1752: break;
"1752
[e $U 640  ]
[; ;Tonche_16F877.h: 1753: case 'a':
"1753
[e :U 647 ]
[; ;Tonche_16F877.h: 1754: if(mode == 1)
"1754
[e $ ! == _mode -> 1 `i 648  ]
[; ;Tonche_16F877.h: 1755: {
"1755
{
[; ;Tonche_16F877.h: 1756: PIE1bits.ADIE = 1;
"1756
[e = . . _PIE1bits 0 6 -> -> 1 `i `uc ]
"1757
}
[; ;Tonche_16F877.h: 1757: }
[e $U 649  ]
"1758
[e :U 648 ]
[; ;Tonche_16F877.h: 1758: else if(mode == 0)
[e $ ! == _mode -> 0 `i 650  ]
[; ;Tonche_16F877.h: 1759: {
"1759
{
[; ;Tonche_16F877.h: 1760: PIE1bits.ADIE = 0;
"1760
[e = . . _PIE1bits 0 6 -> -> 0 `i `uc ]
"1761
}
[; ;Tonche_16F877.h: 1761: }
[e $U 651  ]
"1762
[e :U 650 ]
[; ;Tonche_16F877.h: 1762: else
[; ;Tonche_16F877.h: 1763: {
"1763
{
[; ;Tonche_16F877.h: 1764: PIE1bits.ADIE = 0;
"1764
[e = . . _PIE1bits 0 6 -> -> 0 `i `uc ]
"1765
}
[e :U 651 ]
[e :U 649 ]
[; ;Tonche_16F877.h: 1765: }
[; ;Tonche_16F877.h: 1766: break;
"1766
[e $U 640  ]
[; ;Tonche_16F877.h: 1767: case 'r':
"1767
[e :U 652 ]
[; ;Tonche_16F877.h: 1768: if(mode == 1)
"1768
[e $ ! == _mode -> 1 `i 653  ]
[; ;Tonche_16F877.h: 1769: {
"1769
{
[; ;Tonche_16F877.h: 1770: PIE1bits.RCIE = 1;
"1770
[e = . . _PIE1bits 0 5 -> -> 1 `i `uc ]
"1771
}
[; ;Tonche_16F877.h: 1771: }
[e $U 654  ]
"1772
[e :U 653 ]
[; ;Tonche_16F877.h: 1772: else if(mode == 0)
[e $ ! == _mode -> 0 `i 655  ]
[; ;Tonche_16F877.h: 1773: {
"1773
{
[; ;Tonche_16F877.h: 1774: PIE1bits.RCIE = 0;
"1774
[e = . . _PIE1bits 0 5 -> -> 0 `i `uc ]
"1775
}
[; ;Tonche_16F877.h: 1775: }
[e $U 656  ]
"1776
[e :U 655 ]
[; ;Tonche_16F877.h: 1776: else
[; ;Tonche_16F877.h: 1777: {
"1777
{
[; ;Tonche_16F877.h: 1778: PIE1bits.RCIE = 0;
"1778
[e = . . _PIE1bits 0 5 -> -> 0 `i `uc ]
"1779
}
[e :U 656 ]
[e :U 654 ]
[; ;Tonche_16F877.h: 1779: }
[; ;Tonche_16F877.h: 1780: break;
"1780
[e $U 640  ]
[; ;Tonche_16F877.h: 1781: case 't':
"1781
[e :U 657 ]
[; ;Tonche_16F877.h: 1782: if(mode == 1)
"1782
[e $ ! == _mode -> 1 `i 658  ]
[; ;Tonche_16F877.h: 1783: {
"1783
{
[; ;Tonche_16F877.h: 1784: PIE1bits.TXIE = 1;
"1784
[e = . . _PIE1bits 0 4 -> -> 1 `i `uc ]
"1785
}
[; ;Tonche_16F877.h: 1785: }
[e $U 659  ]
"1786
[e :U 658 ]
[; ;Tonche_16F877.h: 1786: else if(mode == 0)
[e $ ! == _mode -> 0 `i 660  ]
[; ;Tonche_16F877.h: 1787: {
"1787
{
[; ;Tonche_16F877.h: 1788: PIE1bits.TXIE = 0;
"1788
[e = . . _PIE1bits 0 4 -> -> 0 `i `uc ]
"1789
}
[; ;Tonche_16F877.h: 1789: }
[e $U 661  ]
"1790
[e :U 660 ]
[; ;Tonche_16F877.h: 1790: else
[; ;Tonche_16F877.h: 1791: {
"1791
{
[; ;Tonche_16F877.h: 1792: PIE1bits.TXIE = 0;
"1792
[e = . . _PIE1bits 0 4 -> -> 0 `i `uc ]
"1793
}
[e :U 661 ]
[e :U 659 ]
[; ;Tonche_16F877.h: 1793: }
[; ;Tonche_16F877.h: 1794: break;
"1794
[e $U 640  ]
[; ;Tonche_16F877.h: 1795: case 's':
"1795
[e :U 662 ]
[; ;Tonche_16F877.h: 1796: if(mode == 1)
"1796
[e $ ! == _mode -> 1 `i 663  ]
[; ;Tonche_16F877.h: 1797: {
"1797
{
[; ;Tonche_16F877.h: 1798: PIE1bits.SSPIE = 1;
"1798
[e = . . _PIE1bits 0 3 -> -> 1 `i `uc ]
"1799
}
[; ;Tonche_16F877.h: 1799: }
[e $U 664  ]
"1800
[e :U 663 ]
[; ;Tonche_16F877.h: 1800: else if(mode == 0)
[e $ ! == _mode -> 0 `i 665  ]
[; ;Tonche_16F877.h: 1801: {
"1801
{
[; ;Tonche_16F877.h: 1802: PIE1bits.SSPIE = 0;
"1802
[e = . . _PIE1bits 0 3 -> -> 0 `i `uc ]
"1803
}
[; ;Tonche_16F877.h: 1803: }
[e $U 666  ]
"1804
[e :U 665 ]
[; ;Tonche_16F877.h: 1804: else
[; ;Tonche_16F877.h: 1805: {
"1805
{
[; ;Tonche_16F877.h: 1806: PIE1bits.SSPIE = 0;
"1806
[e = . . _PIE1bits 0 3 -> -> 0 `i `uc ]
"1807
}
[e :U 666 ]
[e :U 664 ]
[; ;Tonche_16F877.h: 1807: }
[; ;Tonche_16F877.h: 1808: break;
"1808
[e $U 640  ]
[; ;Tonche_16F877.h: 1809: case 'c':
"1809
[e :U 667 ]
[; ;Tonche_16F877.h: 1810: if(mode == 1)
"1810
[e $ ! == _mode -> 1 `i 668  ]
[; ;Tonche_16F877.h: 1811: {
"1811
{
[; ;Tonche_16F877.h: 1812: PIE1bits.CCP1IE = 1;
"1812
[e = . . _PIE1bits 0 2 -> -> 1 `i `uc ]
"1813
}
[; ;Tonche_16F877.h: 1813: }
[e $U 669  ]
"1814
[e :U 668 ]
[; ;Tonche_16F877.h: 1814: else if(mode == 0)
[e $ ! == _mode -> 0 `i 670  ]
[; ;Tonche_16F877.h: 1815: {
"1815
{
[; ;Tonche_16F877.h: 1816: PIE1bits.CCP1IE = 0;
"1816
[e = . . _PIE1bits 0 2 -> -> 0 `i `uc ]
"1817
}
[; ;Tonche_16F877.h: 1817: }
[e $U 671  ]
"1818
[e :U 670 ]
[; ;Tonche_16F877.h: 1818: else
[; ;Tonche_16F877.h: 1819: {
"1819
{
[; ;Tonche_16F877.h: 1820: PIE1bits.CCP1IE = 0;
"1820
[e = . . _PIE1bits 0 2 -> -> 0 `i `uc ]
"1821
}
[e :U 671 ]
[e :U 669 ]
[; ;Tonche_16F877.h: 1821: }
[; ;Tonche_16F877.h: 1822: break;
"1822
[e $U 640  ]
[; ;Tonche_16F877.h: 1823: case 'd':
"1823
[e :U 672 ]
[; ;Tonche_16F877.h: 1824: if(mode == 1)
"1824
[e $ ! == _mode -> 1 `i 673  ]
[; ;Tonche_16F877.h: 1825: {
"1825
{
[; ;Tonche_16F877.h: 1826: PIE1bits.TMR2IE = 1;
"1826
[e = . . _PIE1bits 0 1 -> -> 1 `i `uc ]
"1827
}
[; ;Tonche_16F877.h: 1827: }
[e $U 674  ]
"1828
[e :U 673 ]
[; ;Tonche_16F877.h: 1828: else if(mode == 0)
[e $ ! == _mode -> 0 `i 675  ]
[; ;Tonche_16F877.h: 1829: {
"1829
{
[; ;Tonche_16F877.h: 1830: PIE1bits.TMR2IE = 0;
"1830
[e = . . _PIE1bits 0 1 -> -> 0 `i `uc ]
"1831
}
[; ;Tonche_16F877.h: 1831: }
[e $U 676  ]
"1832
[e :U 675 ]
[; ;Tonche_16F877.h: 1832: else
[; ;Tonche_16F877.h: 1833: {
"1833
{
[; ;Tonche_16F877.h: 1834: PIE1bits.TMR2IE = 0;
"1834
[e = . . _PIE1bits 0 1 -> -> 0 `i `uc ]
"1835
}
[e :U 676 ]
[e :U 674 ]
[; ;Tonche_16F877.h: 1835: }
[; ;Tonche_16F877.h: 1836: break;
"1836
[e $U 640  ]
[; ;Tonche_16F877.h: 1837: case 'f':
"1837
[e :U 677 ]
[; ;Tonche_16F877.h: 1838: if(mode == 1)
"1838
[e $ ! == _mode -> 1 `i 678  ]
[; ;Tonche_16F877.h: 1839: {
"1839
{
[; ;Tonche_16F877.h: 1840: PIE1bits.TMR1IE = 1;
"1840
[e = . . _PIE1bits 0 0 -> -> 1 `i `uc ]
"1841
}
[; ;Tonche_16F877.h: 1841: }
[e $U 679  ]
"1842
[e :U 678 ]
[; ;Tonche_16F877.h: 1842: else if(mode == 0)
[e $ ! == _mode -> 0 `i 680  ]
[; ;Tonche_16F877.h: 1843: {
"1843
{
[; ;Tonche_16F877.h: 1844: PIE1bits.TMR1IE = 0;
"1844
[e = . . _PIE1bits 0 0 -> -> 0 `i `uc ]
"1845
}
[; ;Tonche_16F877.h: 1845: }
[e $U 681  ]
"1846
[e :U 680 ]
[; ;Tonche_16F877.h: 1846: else
[; ;Tonche_16F877.h: 1847: {
"1847
{
[; ;Tonche_16F877.h: 1848: PIE1bits.TMR1IE = 0;
"1848
[e = . . _PIE1bits 0 0 -> -> 0 `i `uc ]
"1849
}
[e :U 681 ]
[e :U 679 ]
[; ;Tonche_16F877.h: 1849: }
[; ;Tonche_16F877.h: 1850: break;
"1850
[e $U 640  ]
"1851
}
[; ;Tonche_16F877.h: 1851: }
[e $U 640  ]
"1737
[e :U 641 ]
[e [\ _peripheral , $ -> -> 112 `ui `uc 642
 , $ -> -> 97 `ui `uc 647
 , $ -> -> 114 `ui `uc 652
 , $ -> -> 116 `ui `uc 657
 , $ -> -> 115 `ui `uc 662
 , $ -> -> 99 `ui `uc 667
 , $ -> -> 100 `ui `uc 672
 , $ -> -> 102 `ui `uc 677
 640 ]
"1851
[e :U 640 ]
[; ;Tonche_16F877.h: 1852: }
"1852
[e :UE 639 ]
}
"1853
[v _ADInterrupt `(i ~T0 @X0 1 ef ]
"1854
{
[; ;Tonche_16F877.h: 1853: int ADInterrupt(void)
[; ;Tonche_16F877.h: 1854: {
[e :U _ADInterrupt ]
[f ]
[; ;Tonche_16F877.h: 1855: if(PIR1bits.ADIF == 1)
"1855
[e $ ! == -> . . _PIR1bits 0 6 `i -> 1 `i 683  ]
[; ;Tonche_16F877.h: 1856: {
"1856
{
[; ;Tonche_16F877.h: 1857: return 1;
"1857
[e ) -> 1 `i ]
[e $UE 682  ]
"1858
}
[; ;Tonche_16F877.h: 1858: }
[e $U 684  ]
"1859
[e :U 683 ]
[; ;Tonche_16F877.h: 1859: else
[; ;Tonche_16F877.h: 1860: {
"1860
{
[; ;Tonche_16F877.h: 1861: return 0;
"1861
[e ) -> 0 `i ]
[e $UE 682  ]
"1862
}
[e :U 684 ]
[; ;Tonche_16F877.h: 1862: }
[; ;Tonche_16F877.h: 1863: }
"1863
[e :UE 682 ]
}
"1864
[v _ADInterruptReset `(v ~T0 @X0 1 ef ]
"1865
{
[; ;Tonche_16F877.h: 1864: void ADInterruptReset(void)
[; ;Tonche_16F877.h: 1865: {
[e :U _ADInterruptReset ]
[f ]
[; ;Tonche_16F877.h: 1866: PIR1bits.ADIF = 0;
"1866
[e = . . _PIR1bits 0 6 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1867: }
"1867
[e :UE 685 ]
}
"1868
[v _usartRXint `(i ~T0 @X0 1 ef ]
"1869
{
[; ;Tonche_16F877.h: 1868: int usartRXint(void)
[; ;Tonche_16F877.h: 1869: {
[e :U _usartRXint ]
[f ]
[; ;Tonche_16F877.h: 1870: return PIR1bits.RCIF;
"1870
[e ) -> . . _PIR1bits 0 5 `i ]
[e $UE 686  ]
[; ;Tonche_16F877.h: 1871: }
"1871
[e :UE 686 ]
}
"1872
[v _usartTXint `(i ~T0 @X0 1 ef ]
"1873
{
[; ;Tonche_16F877.h: 1872: int usartTXint(void)
[; ;Tonche_16F877.h: 1873: {
[e :U _usartTXint ]
[f ]
[; ;Tonche_16F877.h: 1874: return PIR1bits.TXIF;
"1874
[e ) -> . . _PIR1bits 0 4 `i ]
[e $UE 687  ]
[; ;Tonche_16F877.h: 1875: }
"1875
[e :UE 687 ]
}
"1876
[v _SSPIFinterrupt `(i ~T0 @X0 1 ef ]
"1877
{
[; ;Tonche_16F877.h: 1876: int SSPIFinterrupt(void)
[; ;Tonche_16F877.h: 1877: {
[e :U _SSPIFinterrupt ]
[f ]
[; ;Tonche_16F877.h: 1878: return PIR1bits.SSPIF;
"1878
[e ) -> . . _PIR1bits 0 3 `i ]
[e $UE 688  ]
[; ;Tonche_16F877.h: 1879: }
"1879
[e :UE 688 ]
}
"1880
[v _TxRxOcurredReset `(v ~T0 @X0 1 ef ]
"1881
{
[; ;Tonche_16F877.h: 1880: void TxRxOcurredReset(void)
[; ;Tonche_16F877.h: 1881: {
[e :U _TxRxOcurredReset ]
[f ]
[; ;Tonche_16F877.h: 1882: PIR1bits.SSPIF = 0;
"1882
[e = . . _PIR1bits 0 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1883: }
"1883
[e :UE 689 ]
}
"1884
[v _CCP1IFInterrupt `(i ~T0 @X0 1 ef ]
"1885
{
[; ;Tonche_16F877.h: 1884: int CCP1IFInterrupt(void)
[; ;Tonche_16F877.h: 1885: {
[e :U _CCP1IFInterrupt ]
[f ]
[; ;Tonche_16F877.h: 1886: return PIR1bits.CCP1IF;
"1886
[e ) -> . . _PIR1bits 0 2 `i ]
[e $UE 690  ]
[; ;Tonche_16F877.h: 1887: }
"1887
[e :UE 690 ]
}
"1888
[v _CCP1IFReset `(v ~T0 @X0 1 ef ]
"1889
{
[; ;Tonche_16F877.h: 1888: void CCP1IFReset(void)
[; ;Tonche_16F877.h: 1889: {
[e :U _CCP1IFReset ]
[f ]
[; ;Tonche_16F877.h: 1890: PIR1bits.CCP1IF = 0;
"1890
[e = . . _PIR1bits 0 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1891: }
"1891
[e :UE 691 ]
}
"1892
[v _TMR2IFInterrupt `(i ~T0 @X0 1 ef ]
"1893
{
[; ;Tonche_16F877.h: 1892: int TMR2IFInterrupt(void)
[; ;Tonche_16F877.h: 1893: {
[e :U _TMR2IFInterrupt ]
[f ]
[; ;Tonche_16F877.h: 1894: return PIR1bits.TMR2IF;
"1894
[e ) -> . . _PIR1bits 0 1 `i ]
[e $UE 692  ]
[; ;Tonche_16F877.h: 1895: }
"1895
[e :UE 692 ]
}
"1896
[v _TMR2FReset `(v ~T0 @X0 1 ef ]
"1897
{
[; ;Tonche_16F877.h: 1896: void TMR2FReset(void)
[; ;Tonche_16F877.h: 1897: {
[e :U _TMR2FReset ]
[f ]
[; ;Tonche_16F877.h: 1898: PIR1bits.TMR2IF = 0;
"1898
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1899: }
"1899
[e :UE 693 ]
}
"1900
[v _TMR1Interrupt `(i ~T0 @X0 1 ef ]
"1901
{
[; ;Tonche_16F877.h: 1900: int TMR1Interrupt(void)
[; ;Tonche_16F877.h: 1901: {
[e :U _TMR1Interrupt ]
[f ]
[; ;Tonche_16F877.h: 1902: return PIR1bits.TMR1IF;
"1902
[e ) -> . . _PIR1bits 0 0 `i ]
[e $UE 694  ]
[; ;Tonche_16F877.h: 1903: }
"1903
[e :UE 694 ]
}
"1904
[v _TMR1IFReset `(v ~T0 @X0 1 ef ]
"1905
{
[; ;Tonche_16F877.h: 1904: void TMR1IFReset(void)
[; ;Tonche_16F877.h: 1905: {
[e :U _TMR1IFReset ]
[f ]
[; ;Tonche_16F877.h: 1906: PIR1bits.TMR1IF = 0;
"1906
[e = . . _PIR1bits 0 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1907: }
"1907
[e :UE 695 ]
}
"1908
[v _EEPROMwriteIntEn `(v ~T0 @X0 1 ef1`i ]
"1909
{
[; ;Tonche_16F877.h: 1908: void EEPROMwriteIntEn(int mode)
[; ;Tonche_16F877.h: 1909: {
[e :U _EEPROMwriteIntEn ]
"1908
[v _mode `i ~T0 @X0 1 r1 ]
"1909
[f ]
[; ;Tonche_16F877.h: 1910: if(mode == 1)
"1910
[e $ ! == _mode -> 1 `i 697  ]
[; ;Tonche_16F877.h: 1911: {
"1911
{
[; ;Tonche_16F877.h: 1912: PIE2bits.EEIE = 1;
"1912
[e = . . _PIE2bits 0 3 -> -> 1 `i `uc ]
"1913
}
[; ;Tonche_16F877.h: 1913: }
[e $U 698  ]
"1914
[e :U 697 ]
[; ;Tonche_16F877.h: 1914: else
[; ;Tonche_16F877.h: 1915: {
"1915
{
[; ;Tonche_16F877.h: 1916: PIE2bits.EEIE = 0;
"1916
[e = . . _PIE2bits 0 3 -> -> 0 `i `uc ]
"1917
}
[e :U 698 ]
[; ;Tonche_16F877.h: 1917: }
[; ;Tonche_16F877.h: 1918: }
"1918
[e :UE 696 ]
}
"1919
[v _BusCollisionEnable `(v ~T0 @X0 1 ef1`i ]
"1920
{
[; ;Tonche_16F877.h: 1919: void BusCollisionEnable(int mode)
[; ;Tonche_16F877.h: 1920: {
[e :U _BusCollisionEnable ]
"1919
[v _mode `i ~T0 @X0 1 r1 ]
"1920
[f ]
[; ;Tonche_16F877.h: 1921: if(mode == 1)
"1921
[e $ ! == _mode -> 1 `i 700  ]
[; ;Tonche_16F877.h: 1922: {
"1922
{
[; ;Tonche_16F877.h: 1923: PIE2bits.BCLIE = 1;
"1923
[e = . . _PIE2bits 0 2 -> -> 1 `i `uc ]
"1924
}
[; ;Tonche_16F877.h: 1924: }
[e $U 701  ]
"1925
[e :U 700 ]
[; ;Tonche_16F877.h: 1925: else
[; ;Tonche_16F877.h: 1926: {
"1926
{
[; ;Tonche_16F877.h: 1927: PIE2bits.BCLIE = 0;
"1927
[e = . . _PIE2bits 0 2 -> -> 0 `i `uc ]
"1928
}
[e :U 701 ]
[; ;Tonche_16F877.h: 1928: }
[; ;Tonche_16F877.h: 1929: }
"1929
[e :UE 699 ]
}
"1930
[v _CCP2InterruptEnable `(v ~T0 @X0 1 ef1`i ]
"1931
{
[; ;Tonche_16F877.h: 1930: void CCP2InterruptEnable(int mode)
[; ;Tonche_16F877.h: 1931: {
[e :U _CCP2InterruptEnable ]
"1930
[v _mode `i ~T0 @X0 1 r1 ]
"1931
[f ]
[; ;Tonche_16F877.h: 1932: if(mode == 1)
"1932
[e $ ! == _mode -> 1 `i 703  ]
[; ;Tonche_16F877.h: 1933: {
"1933
{
[; ;Tonche_16F877.h: 1934: PIE2bits.CCP2IE = 1;
"1934
[e = . . _PIE2bits 0 0 -> -> 1 `i `uc ]
"1935
}
[; ;Tonche_16F877.h: 1935: }
[e $U 704  ]
"1936
[e :U 703 ]
[; ;Tonche_16F877.h: 1936: else
[; ;Tonche_16F877.h: 1937: {
"1937
{
[; ;Tonche_16F877.h: 1938: PIE2bits.CCP2IE = 0;
"1938
[e = . . _PIE2bits 0 0 -> -> 0 `i `uc ]
"1939
}
[e :U 704 ]
[; ;Tonche_16F877.h: 1939: }
[; ;Tonche_16F877.h: 1940: }
"1940
[e :UE 702 ]
}
"1941
[v _EEPROMWriteFlag `(i ~T0 @X0 1 ef ]
"1942
{
[; ;Tonche_16F877.h: 1941: int EEPROMWriteFlag(void)
[; ;Tonche_16F877.h: 1942: {
[e :U _EEPROMWriteFlag ]
[f ]
[; ;Tonche_16F877.h: 1943: return PIR2bits.EEIF;
"1943
[e ) -> . . _PIR2bits 0 3 `i ]
[e $UE 705  ]
[; ;Tonche_16F877.h: 1944: }
"1944
[e :UE 705 ]
}
"1945
[v _BusCollisionFlag `(i ~T0 @X0 1 ef ]
"1946
{
[; ;Tonche_16F877.h: 1945: int BusCollisionFlag(void)
[; ;Tonche_16F877.h: 1946: {
[e :U _BusCollisionFlag ]
[f ]
[; ;Tonche_16F877.h: 1947: return PIR2bits.BCLIF;
"1947
[e ) -> . . _PIR2bits 0 2 `i ]
[e $UE 706  ]
[; ;Tonche_16F877.h: 1948: }
"1948
[e :UE 706 ]
}
"1949
[v _CCP2Flag `(i ~T0 @X0 1 ef ]
"1950
{
[; ;Tonche_16F877.h: 1949: int CCP2Flag(void)
[; ;Tonche_16F877.h: 1950: {
[e :U _CCP2Flag ]
[f ]
[; ;Tonche_16F877.h: 1951: return PIR2bits.CCP2IF;
"1951
[e ) -> . . _PIR2bits 0 0 `i ]
[e $UE 707  ]
[; ;Tonche_16F877.h: 1952: }
"1952
[e :UE 707 ]
}
"1953
[v _EEPROMFlagReset `(v ~T0 @X0 1 ef ]
"1954
{
[; ;Tonche_16F877.h: 1953: void EEPROMFlagReset(void)
[; ;Tonche_16F877.h: 1954: {
[e :U _EEPROMFlagReset ]
[f ]
[; ;Tonche_16F877.h: 1955: PIR2bits.EEIF = 0;
"1955
[e = . . _PIR2bits 0 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1956: }
"1956
[e :UE 708 ]
}
"1957
[v _BusColisionReset `(v ~T0 @X0 1 ef ]
"1958
{
[; ;Tonche_16F877.h: 1957: void BusColisionReset(void)
[; ;Tonche_16F877.h: 1958: {
[e :U _BusColisionReset ]
[f ]
[; ;Tonche_16F877.h: 1959: PIR2bits.BCLIF = 0;
"1959
[e = . . _PIR2bits 0 2 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1960: }
"1960
[e :UE 709 ]
}
"1961
[v _CCP2FlagReset `(v ~T0 @X0 1 ef ]
"1962
{
[; ;Tonche_16F877.h: 1961: void CCP2FlagReset(void)
[; ;Tonche_16F877.h: 1962: {
[e :U _CCP2FlagReset ]
[f ]
[; ;Tonche_16F877.h: 1963: PIR2bits.CCP2IF = 0;
"1963
[e = . . _PIR2bits 0 0 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1964: }
"1964
[e :UE 710 ]
}
"1965
[v _SSPInterruptEnable `(v ~T0 @X0 1 ef ]
"1966
{
[; ;Tonche_16F877.h: 1965: void SSPInterruptEnable(void)
[; ;Tonche_16F877.h: 1966: {
[e :U _SSPInterruptEnable ]
[f ]
[; ;Tonche_16F877.h: 1967: PIE1bits.SSPIE = 1;
"1967
[e = . . _PIE1bits 0 3 -> -> 1 `i `uc ]
[; ;Tonche_16F877.h: 1968: }
"1968
[e :UE 711 ]
}
"1969
[v _SSPInterruptDisable `(v ~T0 @X0 1 ef ]
"1970
{
[; ;Tonche_16F877.h: 1969: void SSPInterruptDisable(void)
[; ;Tonche_16F877.h: 1970: {
[e :U _SSPInterruptDisable ]
[f ]
[; ;Tonche_16F877.h: 1971: PIE1bits.SSPIE = 0;
"1971
[e = . . _PIE1bits 0 3 -> -> 0 `i `uc ]
[; ;Tonche_16F877.h: 1972: }
"1972
[e :UE 712 ]
}
"6 main.c
[v _data `Vi ~T0 @X0 1 e ]
[; ;main.c: 6: volatile int data;
"7
[v _setup `(v ~T0 @X0 1 ef ]
"8
{
[; ;main.c: 7: void setup()
[; ;main.c: 8: {
[e :U _setup ]
[f ]
[; ;main.c: 9: TRISDbits.TRISD2 = 0;
"9
[e = . . _TRISDbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 10: TRISEbits.PSPMODE = 0;
"10
[e = . . _TRISEbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 11: GlobalInterruptEnable(1);
"11
[e ( _GlobalInterruptEnable (1 -> 1 `i ]
[; ;main.c: 12: PeripheralIntEnable(1);
"12
[e ( _PeripheralIntEnable (1 -> 1 `i ]
[; ;main.c: 13: PortBChangeIntEnable(0);
"13
[e ( _PortBChangeIntEnable (1 -> 0 `i ]
[; ;main.c: 14: SSPInterruptEnable();
"14
[e ( _SSPInterruptEnable ..  ]
[; ;main.c: 15: spiSlavebegin();
"15
[e ( _spiSlavebegin ..  ]
[; ;main.c: 16: portdMode(2,'O');
"16
[e ( _portdMode (2 , -> 2 `i -> -> 79 `ui `uc ]
[; ;main.c: 17: digitalWrite(2,'D','l');
"17
[e ( _digitalWrite (3 , , -> 2 `i -> -> 68 `ui `uc -> -> 108 `ui `uc ]
[; ;main.c: 18: spiCLKpolarity('l');
"18
[e ( _spiCLKpolarity (1 -> -> 108 `ui `uc ]
[; ;main.c: 19: for( int i=0;i<=7;i++)
"19
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ <= _i -> 7 `i 714  ]
[e $U 715  ]
"20
[e :U 714 ]
[; ;main.c: 20: {
{
[; ;main.c: 21: portbMode(i,'O');
"21
[e ( _portbMode (2 , _i -> -> 79 `ui `uc ]
"22
}
"19
[e ++ _i -> 1 `i ]
[e $ <= _i -> 7 `i 714  ]
[e :U 715 ]
"22
}
[; ;main.c: 22: }
[; ;main.c: 24: }
"24
[e :UE 713 ]
}
"25
[v _loop `(v ~T0 @X0 1 ef ]
"26
{
[; ;main.c: 25: void loop()
[; ;main.c: 26: {
[e :U _loop ]
[f ]
[; ;main.c: 27: if(spiBufferfull() == 1)
"27
[e $ ! == ( _spiBufferfull ..  -> 1 `i 718  ]
[; ;main.c: 28: {
"28
{
[; ;main.c: 29: PORTB = spiRead();
"29
[e = _PORTB -> ( _spiRead ..  `uc ]
[; ;main.c: 30: PORTDbits.RD2 = 1;
"30
[e = . . _PORTDbits 0 2 -> -> 1 `i `uc ]
"31
}
[; ;main.c: 31: }
[e $U 719  ]
"32
[e :U 718 ]
[; ;main.c: 32: else
[; ;main.c: 33: {
"33
{
[; ;main.c: 35: PORTDbits.RD2 = 0;
"35
[e = . . _PORTDbits 0 2 -> -> 0 `i `uc ]
"36
}
[e :U 719 ]
[; ;main.c: 36: }
[; ;main.c: 37: }
"37
[e :UE 717 ]
}
