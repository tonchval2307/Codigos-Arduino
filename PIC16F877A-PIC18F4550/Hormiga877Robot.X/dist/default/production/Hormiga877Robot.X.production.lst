

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Dec 05 17:44:57 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   328                           INDF equ 00h ;# 
   329  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   330                           TMR0 equ 01h ;# 
   331  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   332                           PCL equ 02h ;# 
   333  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   334                           STATUS equ 03h ;# 
   335  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   336                           FSR equ 04h ;# 
   337  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   338                           PORTA equ 05h ;# 
   339  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   340                           PORTB equ 06h ;# 
   341  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   342                           PORTC equ 07h ;# 
   343  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   344                           PORTD equ 08h ;# 
   345  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   346                           PORTE equ 09h ;# 
   347  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   348                           PCLATH equ 0Ah ;# 
   349  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   350                           INTCON equ 0Bh ;# 
   351  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   352                           PIR1 equ 0Ch ;# 
   353  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   354                           PIR2 equ 0Dh ;# 
   355  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   364                           TMR2 equ 011h ;# 
   365  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   366                           T2CON equ 012h ;# 
   367  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   368                           SSPBUF equ 013h ;# 
   369  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   370                           SSPCON equ 014h ;# 
   371  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   372                           CCPR1 equ 015h ;# 
   373  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   374                           CCPR1L equ 015h ;# 
   375  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   376                           CCPR1H equ 016h ;# 
   377  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   378                           CCP1CON equ 017h ;# 
   379  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   380                           RCSTA equ 018h ;# 
   381  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   382                           TXREG equ 019h ;# 
   383  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   384                           RCREG equ 01Ah ;# 
   385  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   386                           CCPR2 equ 01Bh ;# 
   387  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   388                           CCPR2L equ 01Bh ;# 
   389  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   390                           CCPR2H equ 01Ch ;# 
   391  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   392                           CCP2CON equ 01Dh ;# 
   393  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   394                           ADRESH equ 01Eh ;# 
   395  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   396                           ADCON0 equ 01Fh ;# 
   397  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   398                           OPTION_REG equ 081h ;# 
   399  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   400                           TRISA equ 085h ;# 
   401  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   402                           TRISB equ 086h ;# 
   403  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   404                           TRISC equ 087h ;# 
   405  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   406                           TRISD equ 088h ;# 
   407  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   408                           TRISE equ 089h ;# 
   409  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   410                           PIE1 equ 08Ch ;# 
   411  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   412                           PIE2 equ 08Dh ;# 
   413  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   414                           PCON equ 08Eh ;# 
   415  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   416                           SSPCON2 equ 091h ;# 
   417  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   418                           PR2 equ 092h ;# 
   419  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   420                           SSPADD equ 093h ;# 
   421  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   422                           SSPSTAT equ 094h ;# 
   423  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   424                           TXSTA equ 098h ;# 
   425  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   426                           SPBRG equ 099h ;# 
   427  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   428                           CMCON equ 09Ch ;# 
   429  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   430                           CVRCON equ 09Dh ;# 
   431  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   432                           ADRESL equ 09Eh ;# 
   433  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   434                           ADCON1 equ 09Fh ;# 
   435  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   436                           EEDATA equ 010Ch ;# 
   437  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   438                           EEADR equ 010Dh ;# 
   439  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   440                           EEDATH equ 010Eh ;# 
   441  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   442                           EEADRH equ 010Fh ;# 
   443  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   444                           EECON1 equ 018Ch ;# 
   445  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   446                           EECON2 equ 018Dh ;# 
   447  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   448                           INDF equ 00h ;# 
   449  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   450                           TMR0 equ 01h ;# 
   451  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   452                           PCL equ 02h ;# 
   453  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   454                           STATUS equ 03h ;# 
   455  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   456                           FSR equ 04h ;# 
   457  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   458                           PORTA equ 05h ;# 
   459  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   460                           PORTB equ 06h ;# 
   461  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   462                           PORTC equ 07h ;# 
   463  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   464                           PORTD equ 08h ;# 
   465  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   466                           PORTE equ 09h ;# 
   467  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   468                           PCLATH equ 0Ah ;# 
   469  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   470                           INTCON equ 0Bh ;# 
   471  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   472                           PIR1 equ 0Ch ;# 
   473  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   474                           PIR2 equ 0Dh ;# 
   475  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   476                           TMR1 equ 0Eh ;# 
   477  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   478                           TMR1L equ 0Eh ;# 
   479  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   480                           TMR1H equ 0Fh ;# 
   481  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   482                           T1CON equ 010h ;# 
   483  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   484                           TMR2 equ 011h ;# 
   485  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   486                           T2CON equ 012h ;# 
   487  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   488                           SSPBUF equ 013h ;# 
   489  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   490                           SSPCON equ 014h ;# 
   491  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   492                           CCPR1 equ 015h ;# 
   493  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   494                           CCPR1L equ 015h ;# 
   495  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   496                           CCPR1H equ 016h ;# 
   497  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   498                           CCP1CON equ 017h ;# 
   499  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   500                           RCSTA equ 018h ;# 
   501  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   502                           TXREG equ 019h ;# 
   503  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   504                           RCREG equ 01Ah ;# 
   505  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   506                           CCPR2 equ 01Bh ;# 
   507  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   508                           CCPR2L equ 01Bh ;# 
   509  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   510                           CCPR2H equ 01Ch ;# 
   511  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   512                           CCP2CON equ 01Dh ;# 
   513  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   514                           ADRESH equ 01Eh ;# 
   515  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   516                           ADCON0 equ 01Fh ;# 
   517  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   518                           OPTION_REG equ 081h ;# 
   519  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   520                           TRISA equ 085h ;# 
   521  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   522                           TRISB equ 086h ;# 
   523  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   524                           TRISC equ 087h ;# 
   525  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   526                           TRISD equ 088h ;# 
   527  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   528                           TRISE equ 089h ;# 
   529  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   532                           PIE2 equ 08Dh ;# 
   533  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   534                           PCON equ 08Eh ;# 
   535  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   536                           SSPCON2 equ 091h ;# 
   537  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   538                           PR2 equ 092h ;# 
   539  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   540                           SSPADD equ 093h ;# 
   541  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   542                           SSPSTAT equ 094h ;# 
   543  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   544                           TXSTA equ 098h ;# 
   545  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   546                           SPBRG equ 099h ;# 
   547  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   548                           CMCON equ 09Ch ;# 
   549  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   550                           CVRCON equ 09Dh ;# 
   551  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   552                           ADRESL equ 09Eh ;# 
   553  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   554                           ADCON1 equ 09Fh ;# 
   555  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   556                           EEDATA equ 010Ch ;# 
   557  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   558                           EEADR equ 010Dh ;# 
   559  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   560                           EEDATH equ 010Eh ;# 
   561  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   562                           EEADRH equ 010Fh ;# 
   563  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   564                           EECON1 equ 018Ch ;# 
   565  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   566                           EECON2 equ 018Dh ;# 
   567  018D                     	FNCALL	_main,_Initialization
   568                           	FNCALL	_main,_loop
   569                           	FNCALL	_main,_setup
   570                           	FNCALL	_setup,_L298NInit
   571                           	FNCALL	_setup,_SerialBegin
   572                           	FNCALL	_setup,_digitalWrite
   573                           	FNCALL	_setup,_pinMode
   574                           	FNCALL	_SerialBegin,___aldiv
   575                           	FNCALL	_L298NInit,_pinMode
   576                           	FNCALL	_loop,_Adelante
   577                           	FNCALL	_loop,_Atras
   578                           	FNCALL	_loop,_Derecha
   579                           	FNCALL	_loop,_Detener
   580                           	FNCALL	_loop,_Izquierda
   581                           	FNCALL	_loop,_SerialAvailable
   582                           	FNCALL	_loop,_SerialPrintLn
   583                           	FNCALL	_loop,_SerialRead
   584                           	FNCALL	_loop,_digitalWrite
   585                           	FNCALL	_SerialPrintLn,_SerialWrite
   586                           	FNCALL	_Izquierda,_analogWrite
   587                           	FNCALL	_Izquierda,_digitalWrite
   588                           	FNCALL	_Detener,_analogWrite
   589                           	FNCALL	_Detener,_digitalWrite
   590                           	FNCALL	_Derecha,_analogWrite
   591                           	FNCALL	_Derecha,_digitalWrite
   592                           	FNCALL	_Atras,_analogWrite
   593                           	FNCALL	_Atras,_digitalWrite
   594                           	FNCALL	_Adelante,_analogWrite
   595                           	FNCALL	_Adelante,_digitalWrite
   596                           	FNCALL	_Initialization,_CCP1Configuration
   597                           	FNCALL	_Initialization,_CCP2Configuration
   598                           	FNROOT	_main
   599                           	global	_data
   600                           	global	_Led
   601                           	global	_InCuatro
   602                           	global	_InTres
   603                           	global	_InDos
   604                           	global	_InUno
   605                           	global	_VelocidadB
   606                           	global	_VelocidadA
   607                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   608                           global __pidataBANK0
   609                           __pidataBANK0:
   610  00F8                     	file	"application.c"
   611                           	line	12
   612                           
   613                           ;initializer for _data
   614                           	retlw	030h
   615  00F8  3430               	line	11
   616                           
   617                           ;initializer for _Led
   618                           	retlw	0Dh
   619  00F9  340D               	line	10
   620                           
   621                           ;initializer for _InCuatro
   622                           	retlw	0Bh
   623  00FA  340B               	line	9
   624                           
   625                           ;initializer for _InTres
   626                           	retlw	0Ah
   627  00FB  340A               	line	8
   628                           
   629                           ;initializer for _InDos
   630                           	retlw	09h
   631  00FC  3409               	line	7
   632                           
   633                           ;initializer for _InUno
   634                           	retlw	08h
   635  00FD  3408               	line	5
   636                           
   637                           ;initializer for _VelocidadB
   638                           	retlw	06h
   639  00FE  3406               	line	4
   640                           
   641                           ;initializer for _VelocidadA
   642                           	retlw	05h
   643  00FF  3405               	global	_in1
   644                           	global	_vb
   645                           	global	_va
   646                           	global	_in4
   647                           	global	_in3
   648                           	global	_in2
   649                           	global	_SSPBUF
   650                           _SSPBUF	set	0x13
   651  0013                     	global	_SSPCON
   652                           _SSPCON	set	0x14
   653  0014                     	global	_RCREG
   654                           _RCREG	set	0x1A
   655  001A                     	global	_TXREG
   656                           _TXREG	set	0x19
   657  0019                     	global	_PORTEbits
   658                           _PORTEbits	set	0x9
   659  0009                     	global	_CCPR1L
   660                           _CCPR1L	set	0x15
   661  0015                     	global	_CCPR2L
   662                           _CCPR2L	set	0x1B
   663  001B                     	global	_ADRESH
   664                           _ADRESH	set	0x1E
   665  001E                     	global	_ADCON0bits
   666                           _ADCON0bits	set	0x1F
   667  001F                     	global	_PORTAbits
   668                           _PORTAbits	set	0x5
   669  0005                     	global	_PORTDbits
   670                           _PORTDbits	set	0x8
   671  0008                     	global	_PORTBbits
   672                           _PORTBbits	set	0x6
   673  0006                     	global	_PORTCbits
   674                           _PORTCbits	set	0x7
   675  0007                     	global	_CCP2CON
   676                           _CCP2CON	set	0x1D
   677  001D                     	global	_CCP1CON
   678                           _CCP1CON	set	0x17
   679  0017                     	global	_T2CON
   680                           _T2CON	set	0x12
   681  0012                     	global	_PORTE
   682                           _PORTE	set	0x9
   683  0009                     	global	_ADCON0
   684                           _ADCON0	set	0x1F
   685  001F                     	global	_SSPIF
   686                           _SSPIF	set	0x63
   687  0063                     	global	_PEIE
   688                           _PEIE	set	0x5E
   689  005E                     	global	_GIE
   690                           _GIE	set	0x5F
   691  005F                     	global	_RCIF
   692                           _RCIF	set	0x65
   693  0065                     	global	_TXIF
   694                           _TXIF	set	0x64
   695  0064                     	global	_OERR
   696                           _OERR	set	0xC1
   697  00C1                     	global	_FERR
   698                           _FERR	set	0xC2
   699  00C2                     	global	_CREN
   700                           _CREN	set	0xC4
   701  00C4                     	global	_SPEN
   702                           _SPEN	set	0xC7
   703  00C7                     	global	_CCP1Y
   704                           _CCP1Y	set	0xBC
   705  00BC                     	global	_CCP1X
   706                           _CCP1X	set	0xBD
   707  00BD                     	global	_CCP2Y
   708                           _CCP2Y	set	0xEC
   709  00EC                     	global	_CCP2X
   710                           _CCP2X	set	0xED
   711  00ED                     	global	_SSPSTAT
   712                           _SSPSTAT	set	0x94
   713  0094                     	global	_SSPADD
   714                           _SSPADD	set	0x93
   715  0093                     	global	_SSPCON2
   716                           _SSPCON2	set	0x91
   717  0091                     	global	_SPBRG
   718                           _SPBRG	set	0x99
   719  0099                     	global	_ADRESL
   720                           _ADRESL	set	0x9E
   721  009E                     	global	_TRISAbits
   722                           _TRISAbits	set	0x85
   723  0085                     	global	_TRISDbits
   724                           _TRISDbits	set	0x88
   725  0088                     	global	_TRISBbits
   726                           _TRISBbits	set	0x86
   727  0086                     	global	_TRISCbits
   728                           _TRISCbits	set	0x87
   729  0087                     	global	_PR2
   730                           _PR2	set	0x92
   731  0092                     	global	_TRISE
   732                           _TRISE	set	0x89
   733  0089                     	global	_ADCON1
   734                           _ADCON1	set	0x9F
   735  009F                     	global	_ACKEN
   736                           _ACKEN	set	0x48C
   737  048C                     	global	_ACKDT
   738                           _ACKDT	set	0x48D
   739  048D                     	global	_RCEN
   740                           _RCEN	set	0x48B
   741  048B                     	global	_PEN
   742                           _PEN	set	0x48A
   743  048A                     	global	_RSEN
   744                           _RSEN	set	0x489
   745  0489                     	global	_SEN
   746                           _SEN	set	0x488
   747  0488                     	global	_SSPIE
   748                           _SSPIE	set	0x463
   749  0463                     	global	_TRISC4
   750                           _TRISC4	set	0x43C
   751  043C                     	global	_TRISC3
   752                           _TRISC3	set	0x43B
   753  043B                     	global	_TRMT
   754                           _TRMT	set	0x4C1
   755  04C1                     	global	_TXEN
   756                           _TXEN	set	0x4C5
   757  04C5                     	global	_TRISC6
   758                           _TRISC6	set	0x43E
   759  043E                     	global	_TRISC7
   760                           _TRISC7	set	0x43F
   761  043F                     	global	_SYNC
   762                           _SYNC	set	0x4C4
   763  04C4                     	global	_BRGH
   764                           _BRGH	set	0x4C2
   765  04C2                     psect	strings,class=STRING,delta=2,noexec
   766                           global __pstrings
   767                           __pstrings:
   768  0003                     stringtab:
   769  0003                     	global    __stringtab
   770                           __stringtab:
   771  0003                     ;	String table - string pointers are 1 byte each
   772                           stringcode:stringdir:
   773  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
   774  0003  3000               movwf pclath
   775  0004  008A               movf fsr,w
   776  0005  0804               incf fsr
   777  0006  0A84               	addwf pc
   778  0007  0782               	global __stringbase
   779                           __stringbase:
   780  0008                     	retlw	0
   781  0008  3400               psect	strings
   782                           	global    __end_of__stringtab
   783                           __end_of__stringtab:
   784  0009                     	
   785                           STR_3:	
   786  0009                     	retlw	73	;'I'
   787  0009  3449               	retlw	122	;'z'
   788  000A  347A               	retlw	113	;'q'
   789  000B  3471               	retlw	117	;'u'
   790  000C  3475               	retlw	105	;'i'
   791  000D  3469               	retlw	101	;'e'
   792  000E  3465               	retlw	114	;'r'
   793  000F  3472               	retlw	100	;'d'
   794  0010  3464               	retlw	97	;'a'
   795  0011  3461               	retlw	0
   796  0012  3400               psect	strings
   797                           	
   798                           STR_1:	
   799  0013                     	retlw	65	;'A'
   800  0013  3441               	retlw	100	;'d'
   801  0014  3464               	retlw	101	;'e'
   802  0015  3465               	retlw	108	;'l'
   803  0016  346C               	retlw	97	;'a'
   804  0017  3461               	retlw	110	;'n'
   805  0018  346E               	retlw	116	;'t'
   806  0019  3474               	retlw	101	;'e'
   807  001A  3465               	retlw	0
   808  001B  3400               psect	strings
   809                           	
   810                           STR_4:	
   811  001C                     	retlw	68	;'D'
   812  001C  3444               	retlw	101	;'e'
   813  001D  3465               	retlw	114	;'r'
   814  001E  3472               	retlw	101	;'e'
   815  001F  3465               	retlw	99	;'c'
   816  0020  3463               	retlw	104	;'h'
   817  0021  3468               	retlw	97	;'a'
   818  0022  3461               	retlw	0
   819  0023  3400               psect	strings
   820                           	
   821                           STR_5:	
   822  0024                     	retlw	68	;'D'
   823  0024  3444               	retlw	101	;'e'
   824  0025  3465               	retlw	116	;'t'
   825  0026  3474               	retlw	101	;'e'
   826  0027  3465               	retlw	110	;'n'
   827  0028  346E               	retlw	101	;'e'
   828  0029  3465               	retlw	114	;'r'
   829  002A  3472               	retlw	0
   830  002B  3400               psect	strings
   831                           	
   832                           STR_6:	
   833  002C                     	retlw	67	;'C'
   834  002C  3443               	retlw	97	;'a'
   835  002D  3461               	retlw	115	;'s'
   836  002E  3473               	retlw	111	;'o'
   837  002F  346F               	retlw	32	;' '
   838  0030  3420               	retlw	70	;'F'
   839  0031  3446               	retlw	0
   840  0032  3400               psect	strings
   841                           	
   842                           STR_7:	
   843  0033                     	retlw	67	;'C'
   844  0033  3443               	retlw	97	;'a'
   845  0034  3461               	retlw	115	;'s'
   846  0035  3473               	retlw	111	;'o'
   847  0036  346F               	retlw	32	;' '
   848  0037  3420               	retlw	74	;'J'
   849  0038  344A               	retlw	0
   850  0039  3400               psect	strings
   851                           	
   852                           STR_2:	
   853  003A                     	retlw	65	;'A'
   854  003A  3441               	retlw	116	;'t'
   855  003B  3474               	retlw	114	;'r'
   856  003C  3472               	retlw	97	;'a'
   857  003D  3461               	retlw	115	;'s'
   858  003E  3473               	retlw	0
   859  003F  3400               psect	strings
   860                           ; #config settings
   861                           global __CFG_FOSC$HS
   862                           __CFG_FOSC$HS equ 0x0
   863  0000                     global __CFG_WDTE$OFF
   864                           __CFG_WDTE$OFF equ 0x0
   865  0000                     global __CFG_PWRTE$OFF
   866                           __CFG_PWRTE$OFF equ 0x0
   867  0000                     global __CFG_BOREN$OFF
   868                           __CFG_BOREN$OFF equ 0x0
   869  0000                     global __CFG_LVP$ON
   870                           __CFG_LVP$ON equ 0x0
   871  0000                     global __CFG_CPD$OFF
   872                           __CFG_CPD$OFF equ 0x0
   873  0000                     global __CFG_WRT$OFF
   874                           __CFG_WRT$OFF equ 0x0
   875  0000                     global __CFG_CP$OFF
   876                           __CFG_CP$OFF equ 0x0
   877  0000                     	file	"C:\Users\c4810\AppData\Local\Temp\scsk."
   878                           	line	#
   879                           psect cinit,class=CODE,delta=2
   880                           global start_initialization
   881                           start_initialization:
   882  07E8                     
   883                           global __initialization
   884                           __initialization:
   885  07E8                     psect	bssCOMMON,class=COMMON,space=1,noexec
   886                           global __pbssCOMMON
   887                           __pbssCOMMON:
   888  007D                     _in1:
   889  007D                            ds      1
   890  007D                     
   891                           psect	bssBANK0,class=BANK0,space=1,noexec
   892                           global __pbssBANK0
   893                           __pbssBANK0:
   894  003B                     _vb:
   895  003B                            ds      1
   896  003B                     
   897                           _va:
   898  003C                            ds      1
   899  003C                     
   900                           _in4:
   901  003D                            ds      1
   902  003D                     
   903                           _in3:
   904  003E                            ds      1
   905  003E                     
   906                           _in2:
   907  003F                            ds      1
   908  003F                     
   909                           psect	dataBANK0,class=BANK0,space=1,noexec
   910                           global __pdataBANK0
   911                           __pdataBANK0:
   912  0033                     	file	"application.c"
   913                           	line	12
   914                           _data:
   915  0033                            ds      1
   916  0033                     
   917                           psect	dataBANK0
   918                           	file	"application.c"
   919                           	line	11
   920                           _Led:
   921  0034                            ds      1
   922  0034                     
   923                           psect	dataBANK0
   924                           	file	"application.c"
   925                           	line	10
   926                           _InCuatro:
   927  0035                            ds      1
   928  0035                     
   929                           psect	dataBANK0
   930                           	file	"application.c"
   931                           	line	9
   932                           _InTres:
   933  0036                            ds      1
   934  0036                     
   935                           psect	dataBANK0
   936                           	file	"application.c"
   937                           	line	8
   938                           _InDos:
   939  0037                            ds      1
   940  0037                     
   941                           psect	dataBANK0
   942                           	file	"application.c"
   943                           	line	7
   944                           _InUno:
   945  0038                            ds      1
   946  0038                     
   947                           psect	dataBANK0
   948                           	file	"application.c"
   949                           	line	5
   950                           _VelocidadB:
   951  0039                            ds      1
   952  0039                     
   953                           psect	dataBANK0
   954                           	file	"application.c"
   955                           	line	4
   956                           _VelocidadA:
   957  003A                            ds      1
   958  003A                     
   959                           	file	"C:\Users\c4810\AppData\Local\Temp\scsk."
   960                           	line	#
   961                           global btemp
   962                           psect inittext,class=CODE,delta=2
   963                           global init_fetch0,btemp
   964                           ;	Called with low address in FSR and high address in W
   965                           init_fetch0:
   966  0122                     	movf btemp,w
   967  0122  087E               	movwf pclath
   968  0123  008A               	movf btemp+1,w
   969  0124  087F               	movwf pc
   970  0125  0082               global init_ram0
   971                           ;Called with:
   972                           ;	high address of idata address in btemp 
   973                           ;	low address of idata address in btemp+1 
   974                           ;	low address of data in FSR
   975                           ;	high address + 1 of data in btemp-1
   976                           init_ram0:
   977  0126                     	fcall init_fetch0
   978  0126  120A  118A  2122  120A  118A  	movwf indf,f
   979  012B  0080               	incf fsr,f
   980  012C  0A84               	movf fsr,w
   981  012D  0804               	xorwf btemp-1,w
   982  012E  067D               	btfsc status,2
   983  012F  1903               	retlw 0
   984  0130  3400               	incf btemp+1,f
   985  0131  0AFF               	btfsc status,2
   986  0132  1903               	incf btemp,f
   987  0133  0AFE               	goto init_ram0
   988  0134  2926               ; Initialize objects allocated to BANK0
   989                           psect cinit,class=CODE,delta=2,merge=1
   990                           global init_ram0, __pidataBANK0
   991                           	bcf	status, 7	;select IRP bank0
   992  07E8  1383               	movlw low(__pdataBANK0+8)
   993  07E9  303B               	movwf btemp-1,f
   994  07EA  00FD               	movlw high(__pidataBANK0)
   995  07EB  3000               	movwf btemp,f
   996  07EC  00FE               	movlw low(__pidataBANK0)
   997  07ED  30F8               	movwf btemp+1,f
   998  07EE  00FF               	movlw low(__pdataBANK0)
   999  07EF  3033               	movwf fsr,f
  1000  07F0  0084               	fcall init_ram0
  1001  07F1  120A  118A  2126  120A  118A  	line	#
  1002                           ; Clear objects allocated to BANK0
  1003                           psect cinit,class=CODE,delta=2,merge=1
  1004                           	clrf	((__pbssBANK0)+0)&07Fh
  1005  07F6  01BB               	clrf	((__pbssBANK0)+1)&07Fh
  1006  07F7  01BC               	clrf	((__pbssBANK0)+2)&07Fh
  1007  07F8  01BD               	clrf	((__pbssBANK0)+3)&07Fh
  1008  07F9  01BE               	clrf	((__pbssBANK0)+4)&07Fh
  1009  07FA  01BF               ; Clear objects allocated to COMMON
  1010                           psect cinit,class=CODE,delta=2,merge=1
  1011                           	clrf	((__pbssCOMMON)+0)&07Fh
  1012  07FB  01FD               psect cinit,class=CODE,delta=2,merge=1
  1013                           global end_of_initialization,__end_of__initialization
  1014                           
  1015                           ;End of C runtime variable initialization code
  1016                           
  1017                           end_of_initialization:
  1018  07FC                     __end_of__initialization:
  1019  07FC                     clrf status
  1020  07FC  0183               ljmp _main	;jump to C main() function
  1021  07FD  120A  118A  2935   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1022                           global __pcstackCOMMON
  1023                           __pcstackCOMMON:
  1024  0070                     ?_Initialization:	; 1 bytes @ 0x0
  1025  0070                     ??_Initialization:	; 1 bytes @ 0x0
  1026  0070                     ?_setup:	; 1 bytes @ 0x0
  1027  0070                     ?_loop:	; 1 bytes @ 0x0
  1028  0070                     ?_CCP1Configuration:	; 1 bytes @ 0x0
  1029  0070                     ??_CCP1Configuration:	; 1 bytes @ 0x0
  1030  0070                     ?_CCP2Configuration:	; 1 bytes @ 0x0
  1031  0070                     ??_CCP2Configuration:	; 1 bytes @ 0x0
  1032  0070                     ?_Detener:	; 1 bytes @ 0x0
  1033  0070                     ?_pinMode:	; 1 bytes @ 0x0
  1034  0070                     ?_digitalWrite:	; 1 bytes @ 0x0
  1035  0070                     ?_analogWrite:	; 1 bytes @ 0x0
  1036  0070                     ?_SerialWrite:	; 1 bytes @ 0x0
  1037  0070                     ??_SerialWrite:	; 1 bytes @ 0x0
  1038  0070                     ?_SerialPrintLn:	; 1 bytes @ 0x0
  1039  0070                     ?_SerialAvailable:	; 1 bytes @ 0x0
  1040  0070                     ??_SerialAvailable:	; 1 bytes @ 0x0
  1041  0070                     ?_SerialRead:	; 1 bytes @ 0x0
  1042  0070                     ??_SerialRead:	; 1 bytes @ 0x0
  1043  0070                     ?_main:	; 2 bytes @ 0x0
  1044  0070                     	global	?___aldiv
  1045                           ?___aldiv:	; 4 bytes @ 0x0
  1046  0070                     	global	pinMode@mode
  1047                           pinMode@mode:	; 1 bytes @ 0x0
  1048  0070                     	global	digitalWrite@value
  1049                           digitalWrite@value:	; 1 bytes @ 0x0
  1050  0070                     	global	SerialWrite@dataWrite
  1051                           SerialWrite@dataWrite:	; 1 bytes @ 0x0
  1052  0070                     	global	_SerialAvailable$429
  1053                           _SerialAvailable$429:	; 1 bytes @ 0x0
  1054  0070                     	global	analogWrite@value
  1055                           analogWrite@value:	; 2 bytes @ 0x0
  1056  0070                     	global	___aldiv@divisor
  1057                           ___aldiv@divisor:	; 4 bytes @ 0x0
  1058  0070                     	ds	1
  1059  0070                     ??_pinMode:	; 1 bytes @ 0x1
  1060  0071                     ??_digitalWrite:	; 1 bytes @ 0x1
  1061  0071                     ??_SerialPrintLn:	; 1 bytes @ 0x1
  1062  0071                     	global	SerialPrintLn@i
  1063                           SerialPrintLn@i:	; 2 bytes @ 0x1
  1064  0071                     	ds	1
  1065  0071                     ??_analogWrite:	; 1 bytes @ 0x2
  1066  0072                     	ds	1
  1067  0072                     	global	pinMode@pin
  1068                           pinMode@pin:	; 1 bytes @ 0x3
  1069  0073                     	global	digitalWrite@pin
  1070                           digitalWrite@pin:	; 1 bytes @ 0x3
  1071  0073                     	global	SerialPrintLn@dataText
  1072                           SerialPrintLn@dataText:	; 1 bytes @ 0x3
  1073  0073                     	ds	1
  1074  0073                     ?_L298NInit:	; 2 bytes @ 0x4
  1075  0074                     	global	analogWrite@MSB
  1076                           analogWrite@MSB:	; 1 bytes @ 0x4
  1077  0074                     	global	L298NInit@inb
  1078                           L298NInit@inb:	; 1 bytes @ 0x4
  1079  0074                     	global	___aldiv@dividend
  1080                           ___aldiv@dividend:	; 4 bytes @ 0x4
  1081  0074                     	ds	1
  1082  0074                     	global	analogWrite@pin
  1083                           analogWrite@pin:	; 1 bytes @ 0x5
  1084  0075                     	global	L298NInit@inc
  1085                           L298NInit@inc:	; 1 bytes @ 0x5
  1086  0075                     	ds	1
  1087  0075                     ?_Adelante:	; 1 bytes @ 0x6
  1088  0076                     ?_Atras:	; 1 bytes @ 0x6
  1089  0076                     ?_Izquierda:	; 1 bytes @ 0x6
  1090  0076                     ?_Derecha:	; 1 bytes @ 0x6
  1091  0076                     ??_Detener:	; 1 bytes @ 0x6
  1092  0076                     	global	L298NInit@ind
  1093                           L298NInit@ind:	; 1 bytes @ 0x6
  1094  0076                     	global	Adelante@Vel
  1095                           Adelante@Vel:	; 2 bytes @ 0x6
  1096  0076                     	global	Atras@Vel
  1097                           Atras@Vel:	; 2 bytes @ 0x6
  1098  0076                     	global	Izquierda@Vel
  1099                           Izquierda@Vel:	; 2 bytes @ 0x6
  1100  0076                     	global	Derecha@Vel
  1101                           Derecha@Vel:	; 2 bytes @ 0x6
  1102  0076                     	ds	1
  1103  0076                     	global	L298NInit@VelA
  1104                           L298NInit@VelA:	; 2 bytes @ 0x7
  1105  0077                     	ds	1
  1106  0077                     ??_loop:	; 1 bytes @ 0x8
  1107  0078                     ??_Adelante:	; 1 bytes @ 0x8
  1108  0078                     ??_Atras:	; 1 bytes @ 0x8
  1109  0078                     ??_Izquierda:	; 1 bytes @ 0x8
  1110  0078                     ??_Derecha:	; 1 bytes @ 0x8
  1111  0078                     ??___aldiv:	; 1 bytes @ 0x8
  1112  0078                     	ds	1
  1113  0078                     ??_SerialBegin:	; 1 bytes @ 0x9
  1114  0079                     	global	L298NInit@VelB
  1115                           L298NInit@VelB:	; 2 bytes @ 0x9
  1116  0079                     	ds	2
  1117  0079                     ??_L298NInit:	; 1 bytes @ 0xB
  1118  007B                     	ds	1
  1119  007B                     	global	L298NInit@ina
  1120                           L298NInit@ina:	; 1 bytes @ 0xC
  1121  007C                     	ds	1
  1122  007C                     ??_main:	; 1 bytes @ 0xD
  1123  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1124                           global __pcstackBANK0
  1125                           __pcstackBANK0:
  1126  0020                     	global	___aldiv@counter
  1127                           ___aldiv@counter:	; 1 bytes @ 0x0
  1128  0020                     	ds	1
  1129  0020                     	global	___aldiv@sign
  1130                           ___aldiv@sign:	; 1 bytes @ 0x1
  1131  0021                     	ds	1
  1132  0021                     	global	___aldiv@quotient
  1133                           ___aldiv@quotient:	; 4 bytes @ 0x2
  1134  0022                     	ds	4
  1135  0022                     ?_SerialBegin:	; 1 bytes @ 0x6
  1136  0026                     	global	SerialBegin@BaudRate
  1137                           SerialBegin@BaudRate:	; 4 bytes @ 0x6
  1138  0026                     	ds	4
  1139  0026                     	global	SerialBegin@x
  1140                           SerialBegin@x:	; 2 bytes @ 0xA
  1141  002A                     	ds	2
  1142  002A                     ??_setup:	; 1 bytes @ 0xC
  1143  002C                     	ds	7
  1144  002C                     ;!
  1145                           ;!Data Sizes:
  1146                           ;!    Strings     55
  1147                           ;!    Constant    0
  1148                           ;!    Data        8
  1149                           ;!    BSS         6
  1150                           ;!    Persistent  0
  1151                           ;!    Stack       0
  1152                           ;!
  1153                           ;!Auto Spaces:
  1154                           ;!    Space          Size  Autos    Used
  1155                           ;!    COMMON           14     13      14
  1156                           ;!    BANK0            80     19      32
  1157                           ;!    BANK1            80      0       0
  1158                           ;!    BANK3            96      0       0
  1159                           ;!    BANK2            96      0       0
  1160                           
  1161                           ;!
  1162                           ;!Pointer List with Targets:
  1163                           ;!
  1164                           ;!    SerialPrintLn@dataText	PTR unsigned char  size(1) Largest target is 10
  1165                           ;!		 -> STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[8]), 
  1166                           ;!		 -> STR_3(CODE[10]), STR_2(CODE[6]), STR_1(CODE[9]), 
  1167                           ;!
  1168                           
  1169                           
  1170                           ;!
  1171                           ;!Critical Paths under _main in COMMON
  1172                           ;!
  1173                           ;!    _setup->_L298NInit
  1174                           ;!    _setup->_SerialBegin
  1175                           ;!    _SerialBegin->___aldiv
  1176                           ;!    _L298NInit->_pinMode
  1177                           ;!    _loop->_Adelante
  1178                           ;!    _loop->_Atras
  1179                           ;!    _loop->_Derecha
  1180                           ;!    _loop->_Izquierda
  1181                           ;!    _SerialPrintLn->_SerialWrite
  1182                           ;!    _Izquierda->_analogWrite
  1183                           ;!    _Detener->_analogWrite
  1184                           ;!    _Derecha->_analogWrite
  1185                           ;!    _Atras->_analogWrite
  1186                           ;!    _Adelante->_analogWrite
  1187                           ;!
  1188                           ;!Critical Paths under _main in BANK0
  1189                           ;!
  1190                           ;!    _main->_setup
  1191                           ;!    _setup->_SerialBegin
  1192                           ;!    _SerialBegin->___aldiv
  1193                           ;!
  1194                           ;!Critical Paths under _main in BANK1
  1195                           ;!
  1196                           ;!    None.
  1197                           ;!
  1198                           ;!Critical Paths under _main in BANK3
  1199                           ;!
  1200                           ;!    None.
  1201                           ;!
  1202                           ;!Critical Paths under _main in BANK2
  1203                           ;!
  1204                           ;!    None.
  1205                           
  1206 ;;
  1207 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1208 ;;
  1209                           
  1210                           ;!
  1211                           ;!Call Graph Tables:
  1212                           ;!
  1213                           ;! ---------------------------------------------------------------------------------
  1214                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1215                           ;! ---------------------------------------------------------------------------------
  1216                           ;! (0) _main                                                 0     0      0   25070
  1217                           ;!                     _Initialization
  1218                           ;!                               _loop
  1219                           ;!                              _setup
  1220                           ;! ---------------------------------------------------------------------------------
  1221                           ;! (1) _setup                                                7     7      0    5964
  1222                           ;!                                             12 BANK0      7     7      0
  1223                           ;!                          _L298NInit
  1224                           ;!                        _SerialBegin
  1225                           ;!                       _digitalWrite
  1226                           ;!                            _pinMode
  1227                           ;! ---------------------------------------------------------------------------------
  1228                           ;! (2) _SerialBegin                                         10     6      4     792
  1229                           ;!                                              9 COMMON     4     4      0
  1230                           ;!                                              6 BANK0      6     2      4
  1231                           ;!                            ___aldiv
  1232                           ;! ---------------------------------------------------------------------------------
  1233                           ;! (3) ___aldiv                                             15     7      8     604
  1234                           ;!                                              0 COMMON     9     1      8
  1235                           ;!                                              0 BANK0      6     6      0
  1236                           ;! ---------------------------------------------------------------------------------
  1237                           ;! (2) _L298NInit                                            9     2      7    1748
  1238                           ;!                                              4 COMMON     9     2      7
  1239                           ;!                            _pinMode
  1240                           ;! ---------------------------------------------------------------------------------
  1241                           ;! (2) _pinMode                                              4     3      1    1104
  1242                           ;!                                              0 COMMON     4     3      1
  1243                           ;! ---------------------------------------------------------------------------------
  1244                           ;! (1) _loop                                                 2     2      0   19106
  1245                           ;!                                              8 COMMON     2     2      0
  1246                           ;!                           _Adelante
  1247                           ;!                              _Atras
  1248                           ;!                            _Derecha
  1249                           ;!                            _Detener
  1250                           ;!                          _Izquierda
  1251                           ;!                    _SerialAvailable
  1252                           ;!                      _SerialPrintLn
  1253                           ;!                         _SerialRead
  1254                           ;!                       _digitalWrite
  1255                           ;! ---------------------------------------------------------------------------------
  1256                           ;! (2) _SerialRead                                           0     0      0       0
  1257                           ;! ---------------------------------------------------------------------------------
  1258                           ;! (2) _SerialPrintLn                                        3     3      0     343
  1259                           ;!                                              1 COMMON     3     3      0
  1260                           ;!                        _SerialWrite
  1261                           ;! ---------------------------------------------------------------------------------
  1262                           ;! (3) _SerialWrite                                          1     1      0      22
  1263                           ;!                                              0 COMMON     1     1      0
  1264                           ;! ---------------------------------------------------------------------------------
  1265                           ;! (2) _SerialAvailable                                      1     1      0       8
  1266                           ;!                                              0 COMMON     1     1      0
  1267                           ;! ---------------------------------------------------------------------------------
  1268                           ;! (2) _Izquierda                                            2     0      2    3311
  1269                           ;!                                              6 COMMON     2     0      2
  1270                           ;!                        _analogWrite
  1271                           ;!                       _digitalWrite
  1272                           ;! ---------------------------------------------------------------------------------
  1273                           ;! (2) _Detener                                              0     0      0    3191
  1274                           ;!                        _analogWrite
  1275                           ;!                       _digitalWrite
  1276                           ;! ---------------------------------------------------------------------------------
  1277                           ;! (2) _Derecha                                              2     0      2    3311
  1278                           ;!                                              6 COMMON     2     0      2
  1279                           ;!                        _analogWrite
  1280                           ;!                       _digitalWrite
  1281                           ;! ---------------------------------------------------------------------------------
  1282                           ;! (2) _Atras                                                2     0      2    3311
  1283                           ;!                                              6 COMMON     2     0      2
  1284                           ;!                        _analogWrite
  1285                           ;!                       _digitalWrite
  1286                           ;! ---------------------------------------------------------------------------------
  1287                           ;! (2) _Adelante                                             2     0      2    3311
  1288                           ;!                                              6 COMMON     2     0      2
  1289                           ;!                        _analogWrite
  1290                           ;!                       _digitalWrite
  1291                           ;! ---------------------------------------------------------------------------------
  1292                           ;! (2) _digitalWrite                                         4     3      1    2320
  1293                           ;!                                              0 COMMON     4     3      1
  1294                           ;! ---------------------------------------------------------------------------------
  1295                           ;! (3) _analogWrite                                          6     4      2     871
  1296                           ;!                                              0 COMMON     6     4      2
  1297                           ;! ---------------------------------------------------------------------------------
  1298                           ;! (1) _Initialization                                       0     0      0       0
  1299                           ;!                  _CCP1Configuration
  1300                           ;!                  _CCP2Configuration
  1301                           ;! ---------------------------------------------------------------------------------
  1302                           ;! (2) _CCP2Configuration                                    0     0      0       0
  1303                           ;! ---------------------------------------------------------------------------------
  1304                           ;! (2) _CCP1Configuration                                    0     0      0       0
  1305                           ;! ---------------------------------------------------------------------------------
  1306                           ;! Estimated maximum stack depth 3
  1307                           ;! ---------------------------------------------------------------------------------
  1308                           ;!
  1309                           ;! Call Graph Graphs:
  1310                           ;!
  1311                           ;! _main (ROOT)
  1312                           ;!   _Initialization
  1313                           ;!     _CCP1Configuration
  1314                           ;!     _CCP2Configuration
  1315                           ;!   _loop
  1316                           ;!     _Adelante
  1317                           ;!       _analogWrite
  1318                           ;!       _digitalWrite
  1319                           ;!     _Atras
  1320                           ;!       _analogWrite
  1321                           ;!       _digitalWrite
  1322                           ;!     _Derecha
  1323                           ;!       _analogWrite
  1324                           ;!       _digitalWrite
  1325                           ;!     _Detener
  1326                           ;!       _analogWrite
  1327                           ;!       _digitalWrite
  1328                           ;!     _Izquierda
  1329                           ;!       _analogWrite
  1330                           ;!       _digitalWrite
  1331                           ;!     _SerialAvailable
  1332                           ;!     _SerialPrintLn
  1333                           ;!       _SerialWrite
  1334                           ;!     _SerialRead
  1335                           ;!     _digitalWrite
  1336                           ;!   _setup
  1337                           ;!     _L298NInit
  1338                           ;!       _pinMode
  1339                           ;!     _SerialBegin
  1340                           ;!       ___aldiv
  1341                           ;!     _digitalWrite
  1342                           ;!     _pinMode
  1343                           ;!
  1344                           
  1345                           ;! Address spaces:
  1346                           
  1347                           ;!Name               Size   Autos  Total    Cost      Usage
  1348                           ;!BANK3               60      0       0       9        0.0%
  1349                           ;!BITBANK3            60      0       0       8        0.0%
  1350                           ;!SFR3                 0      0       0       4        0.0%
  1351                           ;!BITSFR3              0      0       0       4        0.0%
  1352                           ;!BANK2               60      0       0      11        0.0%
  1353                           ;!BITBANK2            60      0       0      10        0.0%
  1354                           ;!SFR2                 0      0       0       5        0.0%
  1355                           ;!BITSFR2              0      0       0       5        0.0%
  1356                           ;!BANK1               50      0       0       7        0.0%
  1357                           ;!BITBANK1            50      0       0       6        0.0%
  1358                           ;!SFR1                 0      0       0       2        0.0%
  1359                           ;!BITSFR1              0      0       0       2        0.0%
  1360                           ;!BANK0               50     13      20       5       40.0%
  1361                           ;!BITBANK0            50      0       0       4        0.0%
  1362                           ;!SFR0                 0      0       0       1        0.0%
  1363                           ;!BITSFR0              0      0       0       1        0.0%
  1364                           ;!COMMON               E      D       E       1      100.0%
  1365                           ;!BITCOMMON            E      0       0       0        0.0%
  1366                           ;!CODE                 0      0       0       0        0.0%
  1367                           ;!DATA                 0      0      2E      12        0.0%
  1368                           ;!ABS                  0      0      2E       3        0.0%
  1369                           ;!NULL                 0      0       0       0        0.0%
  1370                           ;!STACK                0      0       0       2        0.0%
  1371                           ;!EEDATA             100      0       0       0        0.0%
  1372                           
  1373                           	global	_main
  1374                           
  1375 ;; *************** function _main *****************
  1376 ;; Defined at:
  1377 ;;		line 7 in file "source.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  2  130[None  ] int 
  1384 ;; Registers used:
  1385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : B00/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1391 ;;      Params:         0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels required when called:    3
  1397 ;; This function calls:
  1398 ;;		_Initialization
  1399 ;;		_loop
  1400 ;;		_setup
  1401 ;; This function is called by:
  1402 ;;		Startup code after reset
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1406                           	file	"source.c"
  1407                           	line	7
  1408                           global __pmaintext
  1409                           __pmaintext:	;psect for function _main
  1410  0135                     psect	maintext
  1411                           	file	"source.c"
  1412                           	line	7
  1413                           	global	__size_of_main
  1414                           	__size_of_main	equ	__end_of_main-_main
  1415  0015                     	
  1416                           _main:	
  1417  0135                     ;incstack = 0
  1418                           	opt	stack 5
  1419                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1420                           	line	9
  1421                           	
  1422                           l2207:	
  1423  0135                     ;source.c: 9:     Initialization();
  1424                           	fcall	_Initialization
  1425  0135  120A  118A  2161  120A  118A  	line	10
  1426                           	
  1427                           l2209:	
  1428  013A                     ;source.c: 10:     setup();
  1429                           	fcall	_setup
  1430  013A  120A  118A  22E1  120A  118A  	goto	l2211
  1431  013F  2940               	line	11
  1432                           ;source.c: 11:     while(1)
  1433                           	
  1434                           l131:	
  1435  0140                     	line	13
  1436                           	
  1437                           l2211:	
  1438  0140                     ;source.c: 12:     {;source.c: 13:         loop();
  1439                           	fcall	_loop
  1440  0140  120A  118A  23B8  120A  118A  	goto	l2211
  1441  0145  2940               	line	14
  1442                           ;source.c: 14:     }
  1443                           	
  1444                           l132:	
  1445  0146                     	goto	l2211
  1446  0146  2940               	
  1447                           l133:	
  1448  0147                     	line	16
  1449                           ;source.c: 15:     return 0;;	Return value of _main is never used
  1450                           	
  1451                           l134:	
  1452  0147                     	global	start
  1453                           	ljmp	start
  1454  0147  120A  118A  2800   	opt stack 0
  1455                           GLOBAL	__end_of_main
  1456                           	__end_of_main:
  1457  014A                     	signat	_main,90
  1458                           	global	_setup
  1459                           
  1460 ;; *************** function _setup *****************
  1461 ;; Defined at:
  1462 ;;		line 14 in file "application.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1476 ;;      Params:         0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0
  1478 ;;      Temps:          0       7       0       0       0
  1479 ;;      Totals:         0       7       0       0       0
  1480 ;;Total ram usage:        7 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    2
  1483 ;; This function calls:
  1484 ;;		_L298NInit
  1485 ;;		_SerialBegin
  1486 ;;		_digitalWrite
  1487 ;;		_pinMode
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1493                           	file	"application.c"
  1494                           	line	14
  1495                           global __ptext1
  1496                           __ptext1:	;psect for function _setup
  1497  02E1                     psect	text1
  1498                           	file	"application.c"
  1499                           	line	14
  1500                           	global	__size_of_setup
  1501                           	__size_of_setup	equ	__end_of_setup-_setup
  1502  0044                     	
  1503                           _setup:	
  1504  02E1                     ;incstack = 0
  1505                           	opt	stack 5
  1506                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1507                           	line	16
  1508                           	
  1509                           l2173:	
  1510  02E1                     ;application.c: 16:     SerialBegin(9600);
  1511                           	movlw	0
  1512  02E1  3000               	bcf	status, 5	;RP0=0, select bank0
  1513  02E2  1283               	bcf	status, 6	;RP1=0, select bank0
  1514  02E3  1303               	movwf	(SerialBegin@BaudRate+3)
  1515  02E4  00A9               	movlw	0
  1516  02E5  3000               	movwf	(SerialBegin@BaudRate+2)
  1517  02E6  00A8               	movlw	025h
  1518  02E7  3025               	movwf	(SerialBegin@BaudRate+1)
  1519  02E8  00A7               	movlw	080h
  1520  02E9  3080               	movwf	(SerialBegin@BaudRate)
  1521  02EA  00A6               
  1522                           	fcall	_SerialBegin
  1523  02EB  120A  118A  2459  120A  118A  	line	17
  1524                           	
  1525                           l2175:	
  1526  02F0                     ;application.c: 17:     L298NInit(InUno,InDos,InTres,InCuatro,VelocidadA,VelocidadB);
  1527                           	bcf	status, 5	;RP0=0, select bank0
  1528  02F0  1283               	bcf	status, 6	;RP1=0, select bank0
  1529  02F1  1303               	movf	(_InDos),w
  1530  02F2  0837               	movwf	(??_setup+0)+0
  1531  02F3  00AC               	movf	(??_setup+0)+0,w
  1532  02F4  082C               	movwf	(L298NInit@inb)
  1533  02F5  00F4               	movf	(_InTres),w
  1534  02F6  0836               	movwf	(??_setup+1)+0
  1535  02F7  00AD               	movf	(??_setup+1)+0,w
  1536  02F8  082D               	movwf	(L298NInit@inc)
  1537  02F9  00F5               	movf	(_InCuatro),w
  1538  02FA  0835               	movwf	(??_setup+2)+0
  1539  02FB  00AE               	movf	(??_setup+2)+0,w
  1540  02FC  082E               	movwf	(L298NInit@ind)
  1541  02FD  00F6               	movf	(_VelocidadA),w
  1542  02FE  083A               	movwf	(??_setup+3)+0
  1543  02FF  00AF               	clrf	(??_setup+3)+0+1
  1544  0300  01B0               	movf	0+(??_setup+3)+0,w
  1545  0301  082F               	movwf	(L298NInit@VelA)
  1546  0302  00F7               	movf	1+(??_setup+3)+0,w
  1547  0303  0830               	movwf	(L298NInit@VelA+1)
  1548  0304  00F8               	movf	(_VelocidadB),w
  1549  0305  0839               	movwf	(??_setup+5)+0
  1550  0306  00B1               	clrf	(??_setup+5)+0+1
  1551  0307  01B2               	movf	0+(??_setup+5)+0,w
  1552  0308  0831               	movwf	(L298NInit@VelB)
  1553  0309  00F9               	movf	1+(??_setup+5)+0,w
  1554  030A  0832               	movwf	(L298NInit@VelB+1)
  1555  030B  00FA               	movf	(_InUno),w
  1556  030C  0838               	fcall	_L298NInit
  1557  030D  120A  118A  2325  120A  118A  	line	18
  1558                           	
  1559                           l2177:	
  1560  0312                     ;application.c: 18:     pinMode(Led,0);
  1561                           	clrf	(pinMode@mode)
  1562  0312  01F0               	bcf	status, 5	;RP0=0, select bank0
  1563  0313  1283               	bcf	status, 6	;RP1=0, select bank0
  1564  0314  1303               	movf	(_Led),w
  1565  0315  0834               	fcall	_pinMode
  1566  0316  120A  118A  25A4  120A  118A  	line	19
  1567                           	
  1568                           l2179:	
  1569  031B                     ;application.c: 19:     digitalWrite(Led,0);
  1570                           	clrf	(digitalWrite@value)
  1571  031B  01F0               	bcf	status, 5	;RP0=0, select bank0
  1572  031C  1283               	bcf	status, 6	;RP1=0, select bank0
  1573  031D  1303               	movf	(_Led),w
  1574  031E  0834               	fcall	_digitalWrite
  1575  031F  120A  118A  26C5  120A  118A  	line	20
  1576                           	
  1577                           l427:	
  1578  0324                     	return
  1579  0324  0008               	opt stack 0
  1580                           GLOBAL	__end_of_setup
  1581                           	__end_of_setup:
  1582  0325                     	signat	_setup,89
  1583                           	global	_SerialBegin
  1584                           
  1585 ;; *************** function _SerialBegin *****************
  1586 ;; Defined at:
  1587 ;;		line 450 in file "source.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  BaudRate        4    6[BANK0 ] const long 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  x               2   10[BANK0 ] unsigned int 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      unsigned char 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, pclath, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       4       0       0       0
  1602 ;;      Locals:         0       2       0       0       0
  1603 ;;      Temps:          4       0       0       0       0
  1604 ;;      Totals:         4       6       0       0       0
  1605 ;;Total ram usage:       10 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    1
  1608 ;; This function calls:
  1609 ;;		___aldiv
  1610 ;; This function is called by:
  1611 ;;		_setup
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1615                           	file	"source.c"
  1616                           	line	450
  1617                           global __ptext2
  1618                           __ptext2:	;psect for function _SerialBegin
  1619  0459                     psect	text2
  1620                           	file	"source.c"
  1621                           	line	450
  1622                           	global	__size_of_SerialBegin
  1623                           	__size_of_SerialBegin	equ	__end_of_SerialBegin-_SerialBegin
  1624  00A5                     	
  1625                           _SerialBegin:	
  1626  0459                     ;incstack = 0
  1627                           	opt	stack 5
  1628                           ; Regs used in _SerialBegin: [wreg+status,2+status,0+pclath+cstack]
  1629                           	line	456
  1630                           	
  1631                           l2069:	
  1632  0459                     ;source.c: 450: char SerialBegin(const long int BaudRate);source.c: 451: {;source.c: 455
                                 :  unsigned int x;;source.c: 456:  BRGH = 0;
  1633                           	bsf	status, 5	;RP0=1, select bank1
  1634  0459  1683               	bcf	status, 6	;RP1=0, select bank1
  1635  045A  1303               	bcf	(1218/8)^080h,(1218)&7	;volatile
  1636  045B  1118               	line	457
  1637                           	
  1638                           l2071:	
  1639  045C                     ;source.c: 457:  x = (20000000 / (64 * BaudRate)) - 1;
  1640                           	bcf	status, 5	;RP0=0, select bank0
  1641  045C  1283               	bcf	status, 6	;RP1=0, select bank0
  1642  045D  1303               	movf	(SerialBegin@BaudRate),w
  1643  045E  0826               	movwf	(??_SerialBegin+0)+0
  1644  045F  00F9               	movf	(SerialBegin@BaudRate+1),w
  1645  0460  0827               	movwf	((??_SerialBegin+0)+0+1)
  1646  0461  00FA               	movf	(SerialBegin@BaudRate+2),w
  1647  0462  0828               	movwf	((??_SerialBegin+0)+0+2)
  1648  0463  00FB               	movf	(SerialBegin@BaudRate+3),w
  1649  0464  0829               	movwf	((??_SerialBegin+0)+0+3)
  1650  0465  00FC               	movlw	06h
  1651  0466  3006               u655:
  1652  0467                     	clrc
  1653  0467  1003               	rlf	(??_SerialBegin+0)+0,f
  1654  0468  0DF9               	rlf	(??_SerialBegin+0)+1,f
  1655  0469  0DFA               	rlf	(??_SerialBegin+0)+2,f
  1656  046A  0DFB               	rlf	(??_SerialBegin+0)+3,f
  1657  046B  0DFC               u650:
  1658  046C                     	addlw	-1
  1659  046C  3EFF               	skipz
  1660  046D  1D03               	goto	u655
  1661  046E  2C67               	movf	3+(??_SerialBegin+0)+0,w
  1662  046F  087C               	movwf	(___aldiv@divisor+3)
  1663  0470  00F3               	movf	2+(??_SerialBegin+0)+0,w
  1664  0471  087B               	movwf	(___aldiv@divisor+2)
  1665  0472  00F2               	movf	1+(??_SerialBegin+0)+0,w
  1666  0473  087A               	movwf	(___aldiv@divisor+1)
  1667  0474  00F1               	movf	0+(??_SerialBegin+0)+0,w
  1668  0475  0879               	movwf	(___aldiv@divisor)
  1669  0476  00F0               
  1670                           	movlw	01h
  1671  0477  3001               	movwf	(___aldiv@dividend+3)
  1672  0478  00F7               	movlw	031h
  1673  0479  3031               	movwf	(___aldiv@dividend+2)
  1674  047A  00F6               	movlw	02Dh
  1675  047B  302D               	movwf	(___aldiv@dividend+1)
  1676  047C  00F5               	movlw	0
  1677  047D  3000               	movwf	(___aldiv@dividend)
  1678  047E  00F4               
  1679                           	fcall	___aldiv
  1680  047F  120A  118A  24FE  120A  118A  	movf	(0+(?___aldiv)),w
  1681  0484  0870               	addlw	low(0FFFFh)
  1682  0485  3EFF               	bcf	status, 5	;RP0=0, select bank0
  1683  0486  1283               	bcf	status, 6	;RP1=0, select bank0
  1684  0487  1303               	movwf	(SerialBegin@x)
  1685  0488  00AA               	movf	(1+(?___aldiv)),w
  1686  0489  0871               	skipnc
  1687  048A  1803               	addlw	1
  1688  048B  3E01               	addlw	high(0FFFFh)
  1689  048C  3EFF               	movwf	1+(SerialBegin@x)
  1690  048D  00AB               	line	458
  1691                           	
  1692                           l2073:	
  1693  048E                     ;source.c: 458:  if(x > 255)
  1694                           	movlw	01h
  1695  048E  3001               	subwf	(SerialBegin@x+1),w
  1696  048F  022B               	movlw	0
  1697  0490  3000               	skipnz
  1698  0491  1903               	subwf	(SerialBegin@x),w
  1699  0492  022A               	skipc
  1700  0493  1C03               	goto	u661
  1701  0494  2C96               	goto	u660
  1702  0495  2C97               u661:
  1703  0496                     	goto	l2101
  1704  0496  2CE5               u660:
  1705  0497                     	line	460
  1706                           	
  1707                           l2075:	
  1708  0497                     ;source.c: 459:  {;source.c: 460:   BRGH = 1;
  1709                           	bsf	status, 5	;RP0=1, select bank1
  1710  0497  1683               	bcf	status, 6	;RP1=0, select bank1
  1711  0498  1303               	bsf	(1218/8)^080h,(1218)&7	;volatile
  1712  0499  1518               	line	461
  1713                           	
  1714                           l2077:	
  1715  049A                     ;source.c: 461:   x = (20000000 / (16 * BaudRate)) - 1;
  1716                           	bcf	status, 5	;RP0=0, select bank0
  1717  049A  1283               	bcf	status, 6	;RP1=0, select bank0
  1718  049B  1303               	movf	(SerialBegin@BaudRate),w
  1719  049C  0826               	movwf	(??_SerialBegin+0)+0
  1720  049D  00F9               	movf	(SerialBegin@BaudRate+1),w
  1721  049E  0827               	movwf	((??_SerialBegin+0)+0+1)
  1722  049F  00FA               	movf	(SerialBegin@BaudRate+2),w
  1723  04A0  0828               	movwf	((??_SerialBegin+0)+0+2)
  1724  04A1  00FB               	movf	(SerialBegin@BaudRate+3),w
  1725  04A2  0829               	movwf	((??_SerialBegin+0)+0+3)
  1726  04A3  00FC               	movlw	04h
  1727  04A4  3004               u675:
  1728  04A5                     	clrc
  1729  04A5  1003               	rlf	(??_SerialBegin+0)+0,f
  1730  04A6  0DF9               	rlf	(??_SerialBegin+0)+1,f
  1731  04A7  0DFA               	rlf	(??_SerialBegin+0)+2,f
  1732  04A8  0DFB               	rlf	(??_SerialBegin+0)+3,f
  1733  04A9  0DFC               u670:
  1734  04AA                     	addlw	-1
  1735  04AA  3EFF               	skipz
  1736  04AB  1D03               	goto	u675
  1737  04AC  2CA5               	movf	3+(??_SerialBegin+0)+0,w
  1738  04AD  087C               	movwf	(___aldiv@divisor+3)
  1739  04AE  00F3               	movf	2+(??_SerialBegin+0)+0,w
  1740  04AF  087B               	movwf	(___aldiv@divisor+2)
  1741  04B0  00F2               	movf	1+(??_SerialBegin+0)+0,w
  1742  04B1  087A               	movwf	(___aldiv@divisor+1)
  1743  04B2  00F1               	movf	0+(??_SerialBegin+0)+0,w
  1744  04B3  0879               	movwf	(___aldiv@divisor)
  1745  04B4  00F0               
  1746                           	movlw	01h
  1747  04B5  3001               	movwf	(___aldiv@dividend+3)
  1748  04B6  00F7               	movlw	031h
  1749  04B7  3031               	movwf	(___aldiv@dividend+2)
  1750  04B8  00F6               	movlw	02Dh
  1751  04B9  302D               	movwf	(___aldiv@dividend+1)
  1752  04BA  00F5               	movlw	0
  1753  04BB  3000               	movwf	(___aldiv@dividend)
  1754  04BC  00F4               
  1755                           	fcall	___aldiv
  1756  04BD  120A  118A  24FE  120A  118A  	movf	(0+(?___aldiv)),w
  1757  04C2  0870               	addlw	low(0FFFFh)
  1758  04C3  3EFF               	bcf	status, 5	;RP0=0, select bank0
  1759  04C4  1283               	bcf	status, 6	;RP1=0, select bank0
  1760  04C5  1303               	movwf	(SerialBegin@x)
  1761  04C6  00AA               	movf	(1+(?___aldiv)),w
  1762  04C7  0871               	skipnc
  1763  04C8  1803               	addlw	1
  1764  04C9  3E01               	addlw	high(0FFFFh)
  1765  04CA  3EFF               	movwf	1+(SerialBegin@x)
  1766  04CB  00AB               	line	462
  1767                           	
  1768                           l2079:	
  1769  04CC                     ;source.c: 462:   SPBRG = x;
  1770                           	movf	(SerialBegin@x),w
  1771  04CC  082A               	bsf	status, 5	;RP0=1, select bank1
  1772  04CD  1683               	bcf	status, 6	;RP1=0, select bank1
  1773  04CE  1303               	movwf	(153)^080h	;volatile
  1774  04CF  0099               	line	463
  1775                           	
  1776                           l2081:	
  1777  04D0                     ;source.c: 463:   SYNC = 0;
  1778                           	bcf	(1220/8)^080h,(1220)&7	;volatile
  1779  04D0  1218               	line	464
  1780                           	
  1781                           l2083:	
  1782  04D1                     ;source.c: 464:   SPEN = 1;
  1783                           	bcf	status, 5	;RP0=0, select bank0
  1784  04D1  1283               	bcf	status, 6	;RP1=0, select bank0
  1785  04D2  1303               	bsf	(199/8),(199)&7	;volatile
  1786  04D3  1798               	line	465
  1787                           	
  1788                           l2085:	
  1789  04D4                     ;source.c: 465:   TRISC7 = 1;
  1790                           	bsf	status, 5	;RP0=1, select bank1
  1791  04D4  1683               	bcf	status, 6	;RP1=0, select bank1
  1792  04D5  1303               	bsf	(1087/8)^080h,(1087)&7	;volatile
  1793  04D6  1787               	line	466
  1794                           	
  1795                           l2087:	
  1796  04D7                     ;source.c: 466:   TRISC6 = 1;
  1797                           	bsf	(1086/8)^080h,(1086)&7	;volatile
  1798  04D7  1707               	line	467
  1799                           	
  1800                           l2089:	
  1801  04D8                     ;source.c: 467:   CREN = 1;
  1802                           	bcf	status, 5	;RP0=0, select bank0
  1803  04D8  1283               	bcf	status, 6	;RP1=0, select bank0
  1804  04D9  1303               	bsf	(196/8),(196)&7	;volatile
  1805  04DA  1618               	line	468
  1806                           	
  1807                           l2091:	
  1808  04DB                     ;source.c: 468:   TXEN = 1;
  1809                           	bsf	status, 5	;RP0=1, select bank1
  1810  04DB  1683               	bcf	status, 6	;RP1=0, select bank1
  1811  04DC  1303               	bsf	(1221/8)^080h,(1221)&7	;volatile
  1812  04DD  1698               	line	469
  1813                           	
  1814                           l2093:	
  1815  04DE                     ;source.c: 469:         TXREG = 0x00;
  1816                           	bcf	status, 5	;RP0=0, select bank0
  1817  04DE  1283               	bcf	status, 6	;RP1=0, select bank0
  1818  04DF  1303               	clrf	(25)	;volatile
  1819  04E0  0199               	line	470
  1820                           	
  1821                           l2095:	
  1822  04E1                     ;source.c: 470:         RCREG = 0x00;
  1823                           	clrf	(26)	;volatile
  1824  04E1  019A               	goto	l286
  1825  04E2  2CFD               	line	471
  1826                           	
  1827                           l2097:	
  1828  04E3                     ;source.c: 471:   return 0;;	Return value of _SerialBegin is never used
  1829                           	goto	l286
  1830  04E3  2CFD               	line	472
  1831                           	
  1832                           l2099:	
  1833  04E4                     ;source.c: 472:  }
  1834                           	goto	l286
  1835  04E4  2CFD               	line	473
  1836                           ;source.c: 473:  else
  1837                           	
  1838                           l285:	
  1839  04E5                     	line	475
  1840                           	
  1841                           l2101:	
  1842  04E5                     ;source.c: 474:  {;source.c: 475:   SPBRG = x;
  1843                           	movf	(SerialBegin@x),w
  1844  04E5  082A               	bsf	status, 5	;RP0=1, select bank1
  1845  04E6  1683               	bcf	status, 6	;RP1=0, select bank1
  1846  04E7  1303               	movwf	(153)^080h	;volatile
  1847  04E8  0099               	line	476
  1848                           	
  1849                           l2103:	
  1850  04E9                     ;source.c: 476:   SYNC = 0;
  1851                           	bcf	(1220/8)^080h,(1220)&7	;volatile
  1852  04E9  1218               	line	477
  1853                           	
  1854                           l2105:	
  1855  04EA                     ;source.c: 477:   SPEN = 1;
  1856                           	bcf	status, 5	;RP0=0, select bank0
  1857  04EA  1283               	bcf	status, 6	;RP1=0, select bank0
  1858  04EB  1303               	bsf	(199/8),(199)&7	;volatile
  1859  04EC  1798               	line	478
  1860                           	
  1861                           l2107:	
  1862  04ED                     ;source.c: 478:   TRISC7 = 1;
  1863                           	bsf	status, 5	;RP0=1, select bank1
  1864  04ED  1683               	bcf	status, 6	;RP1=0, select bank1
  1865  04EE  1303               	bsf	(1087/8)^080h,(1087)&7	;volatile
  1866  04EF  1787               	line	479
  1867                           	
  1868                           l2109:	
  1869  04F0                     ;source.c: 479:   TRISC6 = 1;
  1870                           	bsf	(1086/8)^080h,(1086)&7	;volatile
  1871  04F0  1707               	line	480
  1872                           	
  1873                           l2111:	
  1874  04F1                     ;source.c: 480:   CREN = 1;
  1875                           	bcf	status, 5	;RP0=0, select bank0
  1876  04F1  1283               	bcf	status, 6	;RP1=0, select bank0
  1877  04F2  1303               	bsf	(196/8),(196)&7	;volatile
  1878  04F3  1618               	line	481
  1879                           	
  1880                           l2113:	
  1881  04F4                     ;source.c: 481:   TXEN = 1;
  1882                           	bsf	status, 5	;RP0=1, select bank1
  1883  04F4  1683               	bcf	status, 6	;RP1=0, select bank1
  1884  04F5  1303               	bsf	(1221/8)^080h,(1221)&7	;volatile
  1885  04F6  1698               	line	482
  1886                           	
  1887                           l2115:	
  1888  04F7                     ;source.c: 482:         TXREG = 0x00;
  1889                           	bcf	status, 5	;RP0=0, select bank0
  1890  04F7  1283               	bcf	status, 6	;RP1=0, select bank0
  1891  04F8  1303               	clrf	(25)	;volatile
  1892  04F9  0199               	line	483
  1893                           	
  1894                           l2117:	
  1895  04FA                     ;source.c: 483:         RCREG = 0x00;
  1896                           	clrf	(26)	;volatile
  1897  04FA  019A               	goto	l286
  1898  04FB  2CFD               	line	484
  1899                           	
  1900                           l2119:	
  1901  04FC                     ;source.c: 484:   return 1;;	Return value of _SerialBegin is never used
  1902                           	goto	l286
  1903  04FC  2CFD               	line	485
  1904                           ;source.c: 485:  }
  1905                           	
  1906                           l287:	
  1907  04FD                     	line	486
  1908                           	
  1909                           l286:	
  1910  04FD                     	return
  1911  04FD  0008               	opt stack 0
  1912                           GLOBAL	__end_of_SerialBegin
  1913                           	__end_of_SerialBegin:
  1914  04FE                     	signat	_SerialBegin,4217
  1915                           	global	___aldiv
  1916                           
  1917 ;; *************** function ___aldiv *****************
  1918 ;; Defined at:
  1919 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  divisor         4    0[COMMON] long 
  1922 ;;  dividend        4    4[COMMON] long 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  quotient        4    2[BANK0 ] long 
  1925 ;;  sign            1    1[BANK0 ] unsigned char 
  1926 ;;  counter         1    0[BANK0 ] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  4    0[COMMON] long 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         8       0       0       0       0
  1937 ;;      Locals:         0       6       0       0       0
  1938 ;;      Temps:          1       0       0       0       0
  1939 ;;      Totals:         9       6       0       0       0
  1940 ;;Total ram usage:       15 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_SerialBegin
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  1949                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  1950                           	line	5
  1951                           global __ptext3
  1952                           __ptext3:	;psect for function ___aldiv
  1953  04FE                     psect	text3
  1954                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  1955                           	line	5
  1956                           	global	__size_of___aldiv
  1957                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  1958  00A6                     	
  1959                           ___aldiv:	
  1960  04FE                     ;incstack = 0
  1961                           	opt	stack 5
  1962                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1963                           	line	13
  1964                           	
  1965                           l2029:	
  1966  04FE                     	bcf	status, 5	;RP0=0, select bank0
  1967  04FE  1283               	bcf	status, 6	;RP1=0, select bank0
  1968  04FF  1303               	clrf	(___aldiv@sign)
  1969  0500  01A1               	line	14
  1970                           	
  1971                           l2031:	
  1972  0501                     	btfss	(___aldiv@divisor+3),7
  1973  0501  1FF3               	goto	u551
  1974  0502  2D04               	goto	u550
  1975  0503  2D05               u551:
  1976  0504                     	goto	l627
  1977  0504  2D12               u550:
  1978  0505                     	line	15
  1979                           	
  1980                           l2033:	
  1981  0505                     	comf	(___aldiv@divisor),f
  1982  0505  09F0               	comf	(___aldiv@divisor+1),f
  1983  0506  09F1               	comf	(___aldiv@divisor+2),f
  1984  0507  09F2               	comf	(___aldiv@divisor+3),f
  1985  0508  09F3               	incf	(___aldiv@divisor),f
  1986  0509  0AF0               	skipnz
  1987  050A  1903               	incf	(___aldiv@divisor+1),f
  1988  050B  0AF1               	skipnz
  1989  050C  1903               	incf	(___aldiv@divisor+2),f
  1990  050D  0AF2               	skipnz
  1991  050E  1903               	incf	(___aldiv@divisor+3),f
  1992  050F  0AF3               	line	16
  1993                           	clrf	(___aldiv@sign)
  1994  0510  01A1               	incf	(___aldiv@sign),f
  1995  0511  0AA1               	line	17
  1996                           	
  1997                           l627:	
  1998  0512                     	line	18
  1999                           	btfss	(___aldiv@dividend+3),7
  2000  0512  1FF7               	goto	u561
  2001  0513  2D15               	goto	u560
  2002  0514  2D16               u561:
  2003  0515                     	goto	l2039
  2004  0515  2D26               u560:
  2005  0516                     	line	19
  2006                           	
  2007                           l2035:	
  2008  0516                     	comf	(___aldiv@dividend),f
  2009  0516  09F4               	comf	(___aldiv@dividend+1),f
  2010  0517  09F5               	comf	(___aldiv@dividend+2),f
  2011  0518  09F6               	comf	(___aldiv@dividend+3),f
  2012  0519  09F7               	incf	(___aldiv@dividend),f
  2013  051A  0AF4               	skipnz
  2014  051B  1903               	incf	(___aldiv@dividend+1),f
  2015  051C  0AF5               	skipnz
  2016  051D  1903               	incf	(___aldiv@dividend+2),f
  2017  051E  0AF6               	skipnz
  2018  051F  1903               	incf	(___aldiv@dividend+3),f
  2019  0520  0AF7               	line	20
  2020                           	
  2021                           l2037:	
  2022  0521                     	movlw	low(01h)
  2023  0521  3001               	movwf	(??___aldiv+0)+0
  2024  0522  00F8               	movf	(??___aldiv+0)+0,w
  2025  0523  0878               	xorwf	(___aldiv@sign),f
  2026  0524  06A1               	goto	l2039
  2027  0525  2D26               	line	21
  2028                           	
  2029                           l628:	
  2030  0526                     	line	22
  2031                           	
  2032                           l2039:	
  2033  0526                     	movlw	high highword(0)
  2034  0526  3000               	movwf	(___aldiv@quotient+3)
  2035  0527  00A5               	movlw	low highword(0)
  2036  0528  3000               	movwf	(___aldiv@quotient+2)
  2037  0529  00A4               	movlw	high(0)
  2038  052A  3000               	movwf	(___aldiv@quotient+1)
  2039  052B  00A3               	movlw	low(0)
  2040  052C  3000               	movwf	(___aldiv@quotient)
  2041  052D  00A2               
  2042                           	line	23
  2043                           	
  2044                           l2041:	
  2045  052E                     	movf	(___aldiv@divisor+3),w
  2046  052E  0873               	iorwf	(___aldiv@divisor+2),w
  2047  052F  0472               	iorwf	(___aldiv@divisor+1),w
  2048  0530  0471               	iorwf	(___aldiv@divisor),w
  2049  0531  0470               	skipnz
  2050  0532  1903               	goto	u571
  2051  0533  2D35               	goto	u570
  2052  0534  2D36               u571:
  2053  0535                     	goto	l2061
  2054  0535  2D89               u570:
  2055  0536                     	line	24
  2056                           	
  2057                           l2043:	
  2058  0536                     	clrf	(___aldiv@counter)
  2059  0536  01A0               	incf	(___aldiv@counter),f
  2060  0537  0AA0               	line	25
  2061                           	goto	l2047
  2062  0538  2D47               	
  2063                           l631:	
  2064  0539                     	line	26
  2065                           	
  2066                           l2045:	
  2067  0539                     	movlw	01h
  2068  0539  3001               	movwf	(??___aldiv+0)+0
  2069  053A  00F8               u585:
  2070  053B                     	clrc
  2071  053B  1003               	rlf	(___aldiv@divisor),f
  2072  053C  0DF0               	rlf	(___aldiv@divisor+1),f
  2073  053D  0DF1               	rlf	(___aldiv@divisor+2),f
  2074  053E  0DF2               	rlf	(___aldiv@divisor+3),f
  2075  053F  0DF3               	decfsz	(??___aldiv+0)+0
  2076  0540  0BF8               	goto	u585
  2077  0541  2D3B               	line	27
  2078                           	movlw	low(01h)
  2079  0542  3001               	movwf	(??___aldiv+0)+0
  2080  0543  00F8               	movf	(??___aldiv+0)+0,w
  2081  0544  0878               	addwf	(___aldiv@counter),f
  2082  0545  07A0               	goto	l2047
  2083  0546  2D47               	line	28
  2084                           	
  2085                           l630:	
  2086  0547                     	line	25
  2087                           	
  2088                           l2047:	
  2089  0547                     	btfss	(___aldiv@divisor+3),(31)&7
  2090  0547  1FF3               	goto	u591
  2091  0548  2D4A               	goto	u590
  2092  0549  2D4B               u591:
  2093  054A                     	goto	l2045
  2094  054A  2D39               u590:
  2095  054B                     	goto	l2049
  2096  054B  2D4D               	
  2097                           l632:	
  2098  054C                     	goto	l2049
  2099  054C  2D4D               	line	29
  2100                           	
  2101                           l633:	
  2102  054D                     	line	30
  2103                           	
  2104                           l2049:	
  2105  054D                     	movlw	01h
  2106  054D  3001               	movwf	(??___aldiv+0)+0
  2107  054E  00F8               u605:
  2108  054F                     	clrc
  2109  054F  1003               	rlf	(___aldiv@quotient),f
  2110  0550  0DA2               	rlf	(___aldiv@quotient+1),f
  2111  0551  0DA3               	rlf	(___aldiv@quotient+2),f
  2112  0552  0DA4               	rlf	(___aldiv@quotient+3),f
  2113  0553  0DA5               	decfsz	(??___aldiv+0)+0
  2114  0554  0BF8               	goto	u605
  2115  0555  2D4F               	line	31
  2116                           	
  2117                           l2051:	
  2118  0556                     	movf	(___aldiv@divisor+3),w
  2119  0556  0873               	subwf	(___aldiv@dividend+3),w
  2120  0557  0277               	skipz
  2121  0558  1D03               	goto	u615
  2122  0559  2D64               	movf	(___aldiv@divisor+2),w
  2123  055A  0872               	subwf	(___aldiv@dividend+2),w
  2124  055B  0276               	skipz
  2125  055C  1D03               	goto	u615
  2126  055D  2D64               	movf	(___aldiv@divisor+1),w
  2127  055E  0871               	subwf	(___aldiv@dividend+1),w
  2128  055F  0275               	skipz
  2129  0560  1D03               	goto	u615
  2130  0561  2D64               	movf	(___aldiv@divisor),w
  2131  0562  0870               	subwf	(___aldiv@dividend),w
  2132  0563  0274               u615:
  2133  0564                     	skipc
  2134  0564  1C03               	goto	u611
  2135  0565  2D67               	goto	u610
  2136  0566  2D68               u611:
  2137  0567                     	goto	l2057
  2138  0567  2D78               u610:
  2139  0568                     	line	32
  2140                           	
  2141                           l2053:	
  2142  0568                     	movf	(___aldiv@divisor),w
  2143  0568  0870               	subwf	(___aldiv@dividend),f
  2144  0569  02F4               	movf	(___aldiv@divisor+1),w
  2145  056A  0871               	skipc
  2146  056B  1C03               	incfsz	(___aldiv@divisor+1),w
  2147  056C  0F71               	subwf	(___aldiv@dividend+1),f
  2148  056D  02F5               	movf	(___aldiv@divisor+2),w
  2149  056E  0872               	skipc
  2150  056F  1C03               	incfsz	(___aldiv@divisor+2),w
  2151  0570  0F72               	subwf	(___aldiv@dividend+2),f
  2152  0571  02F6               	movf	(___aldiv@divisor+3),w
  2153  0572  0873               	skipc
  2154  0573  1C03               	incfsz	(___aldiv@divisor+3),w
  2155  0574  0F73               	subwf	(___aldiv@dividend+3),f
  2156  0575  02F7               	line	33
  2157                           	
  2158                           l2055:	
  2159  0576                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  2160  0576  1422               	goto	l2057
  2161  0577  2D78               	line	34
  2162                           	
  2163                           l634:	
  2164  0578                     	line	35
  2165                           	
  2166                           l2057:	
  2167  0578                     	movlw	01h
  2168  0578  3001               u625:
  2169  0579                     	clrc
  2170  0579  1003               	rrf	(___aldiv@divisor+3),f
  2171  057A  0CF3               	rrf	(___aldiv@divisor+2),f
  2172  057B  0CF2               	rrf	(___aldiv@divisor+1),f
  2173  057C  0CF1               	rrf	(___aldiv@divisor),f
  2174  057D  0CF0               	addlw	-1
  2175  057E  3EFF               	skipz
  2176  057F  1D03               	goto	u625
  2177  0580  2D79               
  2178                           	line	36
  2179                           	
  2180                           l2059:	
  2181  0581                     	movlw	01h
  2182  0581  3001               	subwf	(___aldiv@counter),f
  2183  0582  02A0               	btfss	status,2
  2184  0583  1D03               	goto	u631
  2185  0584  2D86               	goto	u630
  2186  0585  2D87               u631:
  2187  0586                     	goto	l2049
  2188  0586  2D4D               u630:
  2189  0587                     	goto	l2061
  2190  0587  2D89               	
  2191                           l635:	
  2192  0588                     	goto	l2061
  2193  0588  2D89               	line	37
  2194                           	
  2195                           l629:	
  2196  0589                     	line	38
  2197                           	
  2198                           l2061:	
  2199  0589                     	movf	((___aldiv@sign)),w
  2200  0589  0821               	btfsc	status,2
  2201  058A  1903               	goto	u641
  2202  058B  2D8D               	goto	u640
  2203  058C  2D8E               u641:
  2204  058D                     	goto	l2065
  2205  058D  2D9A               u640:
  2206  058E                     	line	39
  2207                           	
  2208                           l2063:	
  2209  058E                     	comf	(___aldiv@quotient),f
  2210  058E  09A2               	comf	(___aldiv@quotient+1),f
  2211  058F  09A3               	comf	(___aldiv@quotient+2),f
  2212  0590  09A4               	comf	(___aldiv@quotient+3),f
  2213  0591  09A5               	incf	(___aldiv@quotient),f
  2214  0592  0AA2               	skipnz
  2215  0593  1903               	incf	(___aldiv@quotient+1),f
  2216  0594  0AA3               	skipnz
  2217  0595  1903               	incf	(___aldiv@quotient+2),f
  2218  0596  0AA4               	skipnz
  2219  0597  1903               	incf	(___aldiv@quotient+3),f
  2220  0598  0AA5               	goto	l2065
  2221  0599  2D9A               	
  2222                           l636:	
  2223  059A                     	line	40
  2224                           	
  2225                           l2065:	
  2226  059A                     	movf	(___aldiv@quotient+3),w
  2227  059A  0825               	movwf	(?___aldiv+3)
  2228  059B  00F3               	movf	(___aldiv@quotient+2),w
  2229  059C  0824               	movwf	(?___aldiv+2)
  2230  059D  00F2               	movf	(___aldiv@quotient+1),w
  2231  059E  0823               	movwf	(?___aldiv+1)
  2232  059F  00F1               	movf	(___aldiv@quotient),w
  2233  05A0  0822               	movwf	(?___aldiv)
  2234  05A1  00F0               
  2235                           	goto	l637
  2236  05A2  2DA3               	
  2237                           l2067:	
  2238  05A3                     	line	41
  2239                           	
  2240                           l637:	
  2241  05A3                     	return
  2242  05A3  0008               	opt stack 0
  2243                           GLOBAL	__end_of___aldiv
  2244                           	__end_of___aldiv:
  2245  05A4                     	signat	___aldiv,8316
  2246                           	global	_L298NInit
  2247                           
  2248 ;; *************** function _L298NInit *****************
  2249 ;; Defined at:
  2250 ;;		line 9 in file "RobotMovimientos.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  ina             1    wreg     unsigned char 
  2253 ;;  inb             1    4[COMMON] unsigned char 
  2254 ;;  inc             1    5[COMMON] unsigned char 
  2255 ;;  ind             1    6[COMMON] unsigned char 
  2256 ;;  VelA            2    7[COMMON] int 
  2257 ;;  VelB            2    9[COMMON] int 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  ina             1   12[COMMON] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  2    4[COMMON] int 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         7       0       0       0       0
  2270 ;;      Locals:         1       0       0       0       0
  2271 ;;      Temps:          1       0       0       0       0
  2272 ;;      Totals:         9       0       0       0       0
  2273 ;;Total ram usage:        9 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    1
  2276 ;; This function calls:
  2277 ;;		_pinMode
  2278 ;; This function is called by:
  2279 ;;		_setup
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2283                           	file	"RobotMovimientos.c"
  2284                           	line	9
  2285                           global __ptext4
  2286                           __ptext4:	;psect for function _L298NInit
  2287  0325                     psect	text4
  2288                           	file	"RobotMovimientos.c"
  2289                           	line	9
  2290                           	global	__size_of_L298NInit
  2291                           	__size_of_L298NInit	equ	__end_of_L298NInit-_L298NInit
  2292  0047                     	
  2293                           _L298NInit:	
  2294  0325                     ;incstack = 0
  2295                           	opt	stack 5
  2296                           ; Regs used in _L298NInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2297                           ;L298NInit@ina stored from wreg
  2298                           	movwf	(L298NInit@ina)
  2299  0325  00FC               	line	11
  2300                           	
  2301                           l2147:	
  2302  0326                     ;RobotMovimientos.c: 9: int L298NInit(uint8_t ina,uint8_t inb, uint8_t inc,uint8_t ind, 
                                 int VelA, int VelB);RobotMovimientos.c: 10: {;RobotMovimientos.c: 11:     pinMode(ina,0)
                                 ;
  2303                           	clrf	(pinMode@mode)
  2304  0326  01F0               	movf	(L298NInit@ina),w
  2305  0327  087C               	fcall	_pinMode
  2306  0328  120A  118A  25A4  120A  118A  	line	12
  2307                           ;RobotMovimientos.c: 12:     pinMode(inb,0);
  2308                           	clrf	(pinMode@mode)
  2309  032D  01F0               	movf	(L298NInit@inb),w
  2310  032E  0874               	fcall	_pinMode
  2311  032F  120A  118A  25A4  120A  118A  	line	13
  2312                           ;RobotMovimientos.c: 13:     pinMode(inc,0);
  2313                           	clrf	(pinMode@mode)
  2314  0334  01F0               	movf	(L298NInit@inc),w
  2315  0335  0875               	fcall	_pinMode
  2316  0336  120A  118A  25A4  120A  118A  	line	14
  2317                           ;RobotMovimientos.c: 14:     pinMode(ind,0);
  2318                           	clrf	(pinMode@mode)
  2319  033B  01F0               	movf	(L298NInit@ind),w
  2320  033C  0876               	fcall	_pinMode
  2321  033D  120A  118A  25A4  120A  118A  	line	15
  2322                           ;RobotMovimientos.c: 15:     pinMode(VelA,0);
  2323                           	clrf	(pinMode@mode)
  2324  0342  01F0               	movf	(L298NInit@VelA),w
  2325  0343  0877               	fcall	_pinMode
  2326  0344  120A  118A  25A4  120A  118A  	line	16
  2327                           ;RobotMovimientos.c: 16:     pinMode(VelB,0);
  2328                           	clrf	(pinMode@mode)
  2329  0349  01F0               	movf	(L298NInit@VelB),w
  2330  034A  0879               	fcall	_pinMode
  2331  034B  120A  118A  25A4  120A  118A  	line	17
  2332                           	
  2333                           l2149:	
  2334  0350                     ;RobotMovimientos.c: 17:     in1 = ina;
  2335                           	movf	(L298NInit@ina),w
  2336  0350  087C               	movwf	(??_L298NInit+0)+0
  2337  0351  00FB               	movf	(??_L298NInit+0)+0,w
  2338  0352  087B               	movwf	(_in1)
  2339  0353  00FD               	line	18
  2340                           	
  2341                           l2151:	
  2342  0354                     ;RobotMovimientos.c: 18:     in2 = inb;
  2343                           	movf	(L298NInit@inb),w
  2344  0354  0874               	movwf	(??_L298NInit+0)+0
  2345  0355  00FB               	movf	(??_L298NInit+0)+0,w
  2346  0356  087B               	bcf	status, 5	;RP0=0, select bank0
  2347  0357  1283               	bcf	status, 6	;RP1=0, select bank0
  2348  0358  1303               	movwf	(_in2)
  2349  0359  00BF               	line	19
  2350                           	
  2351                           l2153:	
  2352  035A                     ;RobotMovimientos.c: 19:     in3 = inc;
  2353                           	movf	(L298NInit@inc),w
  2354  035A  0875               	movwf	(??_L298NInit+0)+0
  2355  035B  00FB               	movf	(??_L298NInit+0)+0,w
  2356  035C  087B               	movwf	(_in3)
  2357  035D  00BE               	line	20
  2358                           	
  2359                           l2155:	
  2360  035E                     ;RobotMovimientos.c: 20:     in4 = ind;
  2361                           	movf	(L298NInit@ind),w
  2362  035E  0876               	movwf	(??_L298NInit+0)+0
  2363  035F  00FB               	movf	(??_L298NInit+0)+0,w
  2364  0360  087B               	movwf	(_in4)
  2365  0361  00BD               	line	21
  2366                           	
  2367                           l2157:	
  2368  0362                     ;RobotMovimientos.c: 21:     va = VelA;
  2369                           	movf	(L298NInit@VelA),w
  2370  0362  0877               	movwf	(??_L298NInit+0)+0
  2371  0363  00FB               	movf	(??_L298NInit+0)+0,w
  2372  0364  087B               	movwf	(_va)
  2373  0365  00BC               	line	22
  2374                           	
  2375                           l2159:	
  2376  0366                     ;RobotMovimientos.c: 22:     vb = VelB;
  2377                           	movf	(L298NInit@VelB),w
  2378  0366  0879               	movwf	(??_L298NInit+0)+0
  2379  0367  00FB               	movf	(??_L298NInit+0)+0,w
  2380  0368  087B               	movwf	(_vb)
  2381  0369  00BB               	goto	l461
  2382  036A  2B6B               	line	23
  2383                           	
  2384                           l2161:	
  2385  036B                     	line	24
  2386                           ;RobotMovimientos.c: 23:     return 0;;	Return value of _L298NInit is never used
  2387                           	
  2388                           l461:	
  2389  036B                     	return
  2390  036B  0008               	opt stack 0
  2391                           GLOBAL	__end_of_L298NInit
  2392                           	__end_of_L298NInit:
  2393  036C                     	signat	_L298NInit,24698
  2394                           	global	_pinMode
  2395                           
  2396 ;; *************** function _pinMode *****************
  2397 ;; Defined at:
  2398 ;;		line 63 in file "source.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  pin             1    wreg     unsigned char 
  2401 ;;  mode            1    0[COMMON] unsigned char 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  pin             1    3[COMMON] unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         1       0       0       0       0
  2414 ;;      Locals:         1       0       0       0       0
  2415 ;;      Temps:          2       0       0       0       0
  2416 ;;      Totals:         4       0       0       0       0
  2417 ;;Total ram usage:        4 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_setup
  2423 ;;		_L298NInit
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2427                           	file	"source.c"
  2428                           	line	63
  2429                           global __ptext5
  2430                           __ptext5:	;psect for function _pinMode
  2431  05A4                     psect	text5
  2432                           	file	"source.c"
  2433                           	line	63
  2434                           	global	__size_of_pinMode
  2435                           	__size_of_pinMode	equ	__end_of_pinMode-_pinMode
  2436  0121                     	
  2437                           _pinMode:	
  2438  05A4                     ;incstack = 0
  2439                           	opt	stack 6
  2440                           ; Regs used in _pinMode: [wreg-fsr0h+status,2+status,0]
  2441                           ;pinMode@pin stored from wreg
  2442                           	movwf	(pinMode@pin)
  2443  05A4  00F3               	line	65
  2444                           	
  2445                           l1879:	
  2446  05A5                     ;source.c: 63: void pinMode(char pin, char mode);source.c: 64: {;source.c: 65:     switc
                                 h(pin)
  2447                           	goto	l1933
  2448  05A5  2E6F               	line	67
  2449                           ;source.c: 66:     {;source.c: 67:         case 0:
  2450                           	
  2451                           l153:	
  2452  05A6                     	line	68
  2453                           	
  2454                           l1881:	
  2455  05A6                     ;source.c: 68:             TRISCbits.TRISC7 = mode;
  2456                           	rrf	(pinMode@mode),w
  2457  05A6  0C70               	bsf	status, 5	;RP0=1, select bank1
  2458  05A7  1683               	bcf	status, 6	;RP1=0, select bank1
  2459  05A8  1303               	skipc
  2460  05A9  1C03               	bcf	(135)^080h,7	;volatile
  2461  05AA  1387               	skipnc
  2462  05AB  1803               	bsf	(135)^080h,7	;volatile
  2463  05AC  1787               	line	69
  2464                           ;source.c: 69:             break;
  2465                           	goto	l179
  2466  05AD  2EC4               	line	70
  2467                           ;source.c: 70:         case 1:
  2468                           	
  2469                           l155:	
  2470  05AE                     	line	71
  2471                           	
  2472                           l1883:	
  2473  05AE                     ;source.c: 71:             TRISCbits.TRISC6 = mode;
  2474                           	rrf	(pinMode@mode),w
  2475  05AE  0C70               	bsf	status, 5	;RP0=1, select bank1
  2476  05AF  1683               	bcf	status, 6	;RP1=0, select bank1
  2477  05B0  1303               	skipc
  2478  05B1  1C03               	bcf	(135)^080h,6	;volatile
  2479  05B2  1307               	skipnc
  2480  05B3  1803               	bsf	(135)^080h,6	;volatile
  2481  05B4  1707               	line	72
  2482                           ;source.c: 72:             break;
  2483                           	goto	l179
  2484  05B5  2EC4               	line	73
  2485                           ;source.c: 73:         case 2:
  2486                           	
  2487                           l156:	
  2488  05B6                     	line	74
  2489                           	
  2490                           l1885:	
  2491  05B6                     ;source.c: 74:             TRISCbits.TRISC5 = mode;
  2492                           	rrf	(pinMode@mode),w
  2493  05B6  0C70               	bsf	status, 5	;RP0=1, select bank1
  2494  05B7  1683               	bcf	status, 6	;RP1=0, select bank1
  2495  05B8  1303               	skipc
  2496  05B9  1C03               	bcf	(135)^080h,5	;volatile
  2497  05BA  1287               	skipnc
  2498  05BB  1803               	bsf	(135)^080h,5	;volatile
  2499  05BC  1687               	line	75
  2500                           ;source.c: 75:             break;
  2501                           	goto	l179
  2502  05BD  2EC4               	line	76
  2503                           ;source.c: 76:         case 3:
  2504                           	
  2505                           l157:	
  2506  05BE                     	line	77
  2507                           	
  2508                           l1887:	
  2509  05BE                     ;source.c: 77:             TRISCbits.TRISC4 = mode;
  2510                           	rrf	(pinMode@mode),w
  2511  05BE  0C70               	bsf	status, 5	;RP0=1, select bank1
  2512  05BF  1683               	bcf	status, 6	;RP1=0, select bank1
  2513  05C0  1303               	skipc
  2514  05C1  1C03               	bcf	(135)^080h,4	;volatile
  2515  05C2  1207               	skipnc
  2516  05C3  1803               	bsf	(135)^080h,4	;volatile
  2517  05C4  1607               	line	78
  2518                           ;source.c: 78:             break;
  2519                           	goto	l179
  2520  05C5  2EC4               	line	79
  2521                           ;source.c: 79:         case 4:
  2522                           	
  2523                           l158:	
  2524  05C6                     	line	80
  2525                           	
  2526                           l1889:	
  2527  05C6                     ;source.c: 80:             TRISCbits.TRISC3 = mode;
  2528                           	rrf	(pinMode@mode),w
  2529  05C6  0C70               	bsf	status, 5	;RP0=1, select bank1
  2530  05C7  1683               	bcf	status, 6	;RP1=0, select bank1
  2531  05C8  1303               	skipc
  2532  05C9  1C03               	bcf	(135)^080h,3	;volatile
  2533  05CA  1187               	skipnc
  2534  05CB  1803               	bsf	(135)^080h,3	;volatile
  2535  05CC  1587               	line	81
  2536                           ;source.c: 81:             break;
  2537                           	goto	l179
  2538  05CD  2EC4               	line	82
  2539                           ;source.c: 82:         case 5:
  2540                           	
  2541                           l159:	
  2542  05CE                     	line	83
  2543                           	
  2544                           l1891:	
  2545  05CE                     ;source.c: 83:             TRISCbits.TRISC2 = mode;
  2546                           	rrf	(pinMode@mode),w
  2547  05CE  0C70               	bsf	status, 5	;RP0=1, select bank1
  2548  05CF  1683               	bcf	status, 6	;RP1=0, select bank1
  2549  05D0  1303               	skipc
  2550  05D1  1C03               	bcf	(135)^080h,2	;volatile
  2551  05D2  1107               	skipnc
  2552  05D3  1803               	bsf	(135)^080h,2	;volatile
  2553  05D4  1507               	line	85
  2554                           ;source.c: 85:             break;
  2555                           	goto	l179
  2556  05D5  2EC4               	line	86
  2557                           ;source.c: 86:         case 6:
  2558                           	
  2559                           l160:	
  2560  05D6                     	line	87
  2561                           	
  2562                           l1893:	
  2563  05D6                     ;source.c: 87:             TRISCbits.TRISC1 = mode;
  2564                           	rrf	(pinMode@mode),w
  2565  05D6  0C70               	bsf	status, 5	;RP0=1, select bank1
  2566  05D7  1683               	bcf	status, 6	;RP1=0, select bank1
  2567  05D8  1303               	skipc
  2568  05D9  1C03               	bcf	(135)^080h,1	;volatile
  2569  05DA  1087               	skipnc
  2570  05DB  1803               	bsf	(135)^080h,1	;volatile
  2571  05DC  1487               	line	89
  2572                           ;source.c: 89:             break;
  2573                           	goto	l179
  2574  05DD  2EC4               	line	90
  2575                           ;source.c: 90:         case 7:
  2576                           	
  2577                           l161:	
  2578  05DE                     	line	91
  2579                           	
  2580                           l1895:	
  2581  05DE                     ;source.c: 91:             TRISCbits.TRISC0 = mode;
  2582                           	rrf	(pinMode@mode),w
  2583  05DE  0C70               	bsf	status, 5	;RP0=1, select bank1
  2584  05DF  1683               	bcf	status, 6	;RP1=0, select bank1
  2585  05E0  1303               	skipc
  2586  05E1  1C03               	bcf	(135)^080h,0	;volatile
  2587  05E2  1007               	skipnc
  2588  05E3  1803               	bsf	(135)^080h,0	;volatile
  2589  05E4  1407               	line	92
  2590                           ;source.c: 92:             break;
  2591                           	goto	l179
  2592  05E5  2EC4               	line	93
  2593                           ;source.c: 93:         case 8:
  2594                           	
  2595                           l162:	
  2596  05E6                     	line	94
  2597                           	
  2598                           l1897:	
  2599  05E6                     ;source.c: 94:             TRISBbits.TRISB0 = mode;
  2600                           	rrf	(pinMode@mode),w
  2601  05E6  0C70               	bsf	status, 5	;RP0=1, select bank1
  2602  05E7  1683               	bcf	status, 6	;RP1=0, select bank1
  2603  05E8  1303               	skipc
  2604  05E9  1C03               	bcf	(134)^080h,0	;volatile
  2605  05EA  1006               	skipnc
  2606  05EB  1803               	bsf	(134)^080h,0	;volatile
  2607  05EC  1406               	line	95
  2608                           ;source.c: 95:             break;
  2609                           	goto	l179
  2610  05ED  2EC4               	line	96
  2611                           ;source.c: 96:         case 9:
  2612                           	
  2613                           l163:	
  2614  05EE                     	line	97
  2615                           	
  2616                           l1899:	
  2617  05EE                     ;source.c: 97:             TRISBbits.TRISB1 = mode;
  2618                           	rrf	(pinMode@mode),w
  2619  05EE  0C70               	bsf	status, 5	;RP0=1, select bank1
  2620  05EF  1683               	bcf	status, 6	;RP1=0, select bank1
  2621  05F0  1303               	skipc
  2622  05F1  1C03               	bcf	(134)^080h,1	;volatile
  2623  05F2  1086               	skipnc
  2624  05F3  1803               	bsf	(134)^080h,1	;volatile
  2625  05F4  1486               	line	98
  2626                           ;source.c: 98:             break;
  2627                           	goto	l179
  2628  05F5  2EC4               	line	99
  2629                           ;source.c: 99:         case 10:
  2630                           	
  2631                           l164:	
  2632  05F6                     	line	100
  2633                           	
  2634                           l1901:	
  2635  05F6                     ;source.c: 100:             TRISBbits.TRISB2 = mode;
  2636                           	rrf	(pinMode@mode),w
  2637  05F6  0C70               	bsf	status, 5	;RP0=1, select bank1
  2638  05F7  1683               	bcf	status, 6	;RP1=0, select bank1
  2639  05F8  1303               	skipc
  2640  05F9  1C03               	bcf	(134)^080h,2	;volatile
  2641  05FA  1106               	skipnc
  2642  05FB  1803               	bsf	(134)^080h,2	;volatile
  2643  05FC  1506               	line	101
  2644                           ;source.c: 101:             break;
  2645                           	goto	l179
  2646  05FD  2EC4               	line	102
  2647                           ;source.c: 102:         case 11:
  2648                           	
  2649                           l165:	
  2650  05FE                     	line	103
  2651                           	
  2652                           l1903:	
  2653  05FE                     ;source.c: 103:             TRISBbits.TRISB3 = mode;
  2654                           	rrf	(pinMode@mode),w
  2655  05FE  0C70               	bsf	status, 5	;RP0=1, select bank1
  2656  05FF  1683               	bcf	status, 6	;RP1=0, select bank1
  2657  0600  1303               	skipc
  2658  0601  1C03               	bcf	(134)^080h,3	;volatile
  2659  0602  1186               	skipnc
  2660  0603  1803               	bsf	(134)^080h,3	;volatile
  2661  0604  1586               	line	104
  2662                           ;source.c: 104:             break;
  2663                           	goto	l179
  2664  0605  2EC4               	line	105
  2665                           ;source.c: 105:         case 12:
  2666                           	
  2667                           l166:	
  2668  0606                     	line	106
  2669                           	
  2670                           l1905:	
  2671  0606                     ;source.c: 106:             TRISBbits.TRISB4 = mode;
  2672                           	rrf	(pinMode@mode),w
  2673  0606  0C70               	bsf	status, 5	;RP0=1, select bank1
  2674  0607  1683               	bcf	status, 6	;RP1=0, select bank1
  2675  0608  1303               	skipc
  2676  0609  1C03               	bcf	(134)^080h,4	;volatile
  2677  060A  1206               	skipnc
  2678  060B  1803               	bsf	(134)^080h,4	;volatile
  2679  060C  1606               	line	107
  2680                           ;source.c: 107:             break;
  2681                           	goto	l179
  2682  060D  2EC4               	line	108
  2683                           ;source.c: 108:         case 13:
  2684                           	
  2685                           l167:	
  2686  060E                     	line	109
  2687                           	
  2688                           l1907:	
  2689  060E                     ;source.c: 109:             TRISBbits.TRISB5 = mode;
  2690                           	rrf	(pinMode@mode),w
  2691  060E  0C70               	bsf	status, 5	;RP0=1, select bank1
  2692  060F  1683               	bcf	status, 6	;RP1=0, select bank1
  2693  0610  1303               	skipc
  2694  0611  1C03               	bcf	(134)^080h,5	;volatile
  2695  0612  1286               	skipnc
  2696  0613  1803               	bsf	(134)^080h,5	;volatile
  2697  0614  1686               	line	110
  2698                           ;source.c: 110:             break;
  2699                           	goto	l179
  2700  0615  2EC4               	line	111
  2701                           ;source.c: 111:         case 14:
  2702                           	
  2703                           l168:	
  2704  0616                     	line	112
  2705                           	
  2706                           l1909:	
  2707  0616                     ;source.c: 112:             TRISBbits.TRISB6 = mode;
  2708                           	rrf	(pinMode@mode),w
  2709  0616  0C70               	bsf	status, 5	;RP0=1, select bank1
  2710  0617  1683               	bcf	status, 6	;RP1=0, select bank1
  2711  0618  1303               	skipc
  2712  0619  1C03               	bcf	(134)^080h,6	;volatile
  2713  061A  1306               	skipnc
  2714  061B  1803               	bsf	(134)^080h,6	;volatile
  2715  061C  1706               	line	113
  2716                           ;source.c: 113:             break;
  2717                           	goto	l179
  2718  061D  2EC4               	line	114
  2719                           ;source.c: 114:         case 15:
  2720                           	
  2721                           l169:	
  2722  061E                     	line	115
  2723                           	
  2724                           l1911:	
  2725  061E                     ;source.c: 115:             TRISBbits.TRISB7 = mode;
  2726                           	rrf	(pinMode@mode),w
  2727  061E  0C70               	bsf	status, 5	;RP0=1, select bank1
  2728  061F  1683               	bcf	status, 6	;RP1=0, select bank1
  2729  0620  1303               	skipc
  2730  0621  1C03               	bcf	(134)^080h,7	;volatile
  2731  0622  1386               	skipnc
  2732  0623  1803               	bsf	(134)^080h,7	;volatile
  2733  0624  1786               	line	116
  2734                           ;source.c: 116:             break;
  2735                           	goto	l179
  2736  0625  2EC4               	line	117
  2737                           ;source.c: 117:         case 16:
  2738                           	
  2739                           l170:	
  2740  0626                     	line	118
  2741                           	
  2742                           l1913:	
  2743  0626                     ;source.c: 118:             TRISDbits.TRISD0 = mode;
  2744                           	rrf	(pinMode@mode),w
  2745  0626  0C70               	bsf	status, 5	;RP0=1, select bank1
  2746  0627  1683               	bcf	status, 6	;RP1=0, select bank1
  2747  0628  1303               	skipc
  2748  0629  1C03               	bcf	(136)^080h,0	;volatile
  2749  062A  1008               	skipnc
  2750  062B  1803               	bsf	(136)^080h,0	;volatile
  2751  062C  1408               	line	119
  2752                           ;source.c: 119:             break;
  2753                           	goto	l179
  2754  062D  2EC4               	line	120
  2755                           ;source.c: 120:         case 17:
  2756                           	
  2757                           l171:	
  2758  062E                     	line	121
  2759                           	
  2760                           l1915:	
  2761  062E                     ;source.c: 121:             TRISDbits.TRISD1 = mode;
  2762                           	rrf	(pinMode@mode),w
  2763  062E  0C70               	bsf	status, 5	;RP0=1, select bank1
  2764  062F  1683               	bcf	status, 6	;RP1=0, select bank1
  2765  0630  1303               	skipc
  2766  0631  1C03               	bcf	(136)^080h,1	;volatile
  2767  0632  1088               	skipnc
  2768  0633  1803               	bsf	(136)^080h,1	;volatile
  2769  0634  1488               	line	122
  2770                           ;source.c: 122:             break;
  2771                           	goto	l179
  2772  0635  2EC4               	line	123
  2773                           ;source.c: 123:         case 18:
  2774                           	
  2775                           l172:	
  2776  0636                     	line	124
  2777                           	
  2778                           l1917:	
  2779  0636                     ;source.c: 124:             TRISDbits.TRISD2 = mode;
  2780                           	rrf	(pinMode@mode),w
  2781  0636  0C70               	bsf	status, 5	;RP0=1, select bank1
  2782  0637  1683               	bcf	status, 6	;RP1=0, select bank1
  2783  0638  1303               	skipc
  2784  0639  1C03               	bcf	(136)^080h,2	;volatile
  2785  063A  1108               	skipnc
  2786  063B  1803               	bsf	(136)^080h,2	;volatile
  2787  063C  1508               	line	125
  2788                           ;source.c: 125:             break;
  2789                           	goto	l179
  2790  063D  2EC4               	line	126
  2791                           ;source.c: 126:         case 19:
  2792                           	
  2793                           l173:	
  2794  063E                     	line	127
  2795                           	
  2796                           l1919:	
  2797  063E                     ;source.c: 127:             TRISDbits.TRISD3 = mode;
  2798                           	rrf	(pinMode@mode),w
  2799  063E  0C70               	bsf	status, 5	;RP0=1, select bank1
  2800  063F  1683               	bcf	status, 6	;RP1=0, select bank1
  2801  0640  1303               	skipc
  2802  0641  1C03               	bcf	(136)^080h,3	;volatile
  2803  0642  1188               	skipnc
  2804  0643  1803               	bsf	(136)^080h,3	;volatile
  2805  0644  1588               	line	128
  2806                           ;source.c: 128:             break;
  2807                           	goto	l179
  2808  0645  2EC4               	line	129
  2809                           ;source.c: 129:         case 20:
  2810                           	
  2811                           l174:	
  2812  0646                     	line	130
  2813                           	
  2814                           l1921:	
  2815  0646                     ;source.c: 130:    TRISDbits.TRISD4 = mode;
  2816                           	rrf	(pinMode@mode),w
  2817  0646  0C70               	bsf	status, 5	;RP0=1, select bank1
  2818  0647  1683               	bcf	status, 6	;RP1=0, select bank1
  2819  0648  1303               	skipc
  2820  0649  1C03               	bcf	(136)^080h,4	;volatile
  2821  064A  1208               	skipnc
  2822  064B  1803               	bsf	(136)^080h,4	;volatile
  2823  064C  1608               	line	140
  2824                           ;source.c: 140:    break;
  2825                           	goto	l179
  2826  064D  2EC4               	line	141
  2827                           ;source.c: 141:         case 21:
  2828                           	
  2829                           l175:	
  2830  064E                     	line	142
  2831                           	
  2832                           l1923:	
  2833  064E                     ;source.c: 142:             TRISDbits.TRISD5 = mode;
  2834                           	rrf	(pinMode@mode),w
  2835  064E  0C70               	bsf	status, 5	;RP0=1, select bank1
  2836  064F  1683               	bcf	status, 6	;RP1=0, select bank1
  2837  0650  1303               	skipc
  2838  0651  1C03               	bcf	(136)^080h,5	;volatile
  2839  0652  1288               	skipnc
  2840  0653  1803               	bsf	(136)^080h,5	;volatile
  2841  0654  1688               	line	143
  2842                           ;source.c: 143:             break;
  2843                           	goto	l179
  2844  0655  2EC4               	line	144
  2845                           ;source.c: 144:         case 22:
  2846                           	
  2847                           l176:	
  2848  0656                     	line	145
  2849                           	
  2850                           l1925:	
  2851  0656                     ;source.c: 145:             TRISDbits.TRISD6 = mode;
  2852                           	rrf	(pinMode@mode),w
  2853  0656  0C70               	bsf	status, 5	;RP0=1, select bank1
  2854  0657  1683               	bcf	status, 6	;RP1=0, select bank1
  2855  0658  1303               	skipc
  2856  0659  1C03               	bcf	(136)^080h,6	;volatile
  2857  065A  1308               	skipnc
  2858  065B  1803               	bsf	(136)^080h,6	;volatile
  2859  065C  1708               	line	146
  2860                           ;source.c: 146:             break;
  2861                           	goto	l179
  2862  065D  2EC4               	line	147
  2863                           ;source.c: 147:         case 23:
  2864                           	
  2865                           l177:	
  2866  065E                     	line	148
  2867                           	
  2868                           l1927:	
  2869  065E                     ;source.c: 148:             TRISDbits.TRISD7 = mode;
  2870                           	rrf	(pinMode@mode),w
  2871  065E  0C70               	bsf	status, 5	;RP0=1, select bank1
  2872  065F  1683               	bcf	status, 6	;RP1=0, select bank1
  2873  0660  1303               	skipc
  2874  0661  1C03               	bcf	(136)^080h,7	;volatile
  2875  0662  1388               	skipnc
  2876  0663  1803               	bsf	(136)^080h,7	;volatile
  2877  0664  1788               	line	149
  2878                           ;source.c: 149:             break;
  2879                           	goto	l179
  2880  0665  2EC4               	line	150
  2881                           ;source.c: 150:         case 24:
  2882                           	
  2883                           l178:	
  2884  0666                     	line	151
  2885                           	
  2886                           l1929:	
  2887  0666                     ;source.c: 151:             TRISAbits.TRISA4 = mode;
  2888                           	rrf	(pinMode@mode),w
  2889  0666  0C70               	bsf	status, 5	;RP0=1, select bank1
  2890  0667  1683               	bcf	status, 6	;RP1=0, select bank1
  2891  0668  1303               	skipc
  2892  0669  1C03               	bcf	(133)^080h,4	;volatile
  2893  066A  1205               	skipnc
  2894  066B  1803               	bsf	(133)^080h,4	;volatile
  2895  066C  1605               	line	152
  2896                           ;source.c: 152:             break;
  2897                           	goto	l179
  2898  066D  2EC4               	line	167
  2899                           	
  2900                           l1931:	
  2901  066E                     ;source.c: 167:     }
  2902                           	goto	l179
  2903  066E  2EC4               	
  2904                           l152:	
  2905  066F                     	
  2906                           l1933:	
  2907  066F                     	movf	(pinMode@pin),w
  2908  066F  0873               	movwf	(??_pinMode+0)+0
  2909  0670  00F1               	clrf	(??_pinMode+0)+0+1
  2910  0671  01F2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2911                           ; Switch size 1, requested type "space"
  2912                           ; Number of cases is 1, Range of values is 0 to 0
  2913                           ; switch strategies available:
  2914                           ; Name         Instructions Cycles
  2915                           ; simple_byte            4     3 (average)
  2916                           ; direct_byte           11     8 (fixed)
  2917                           ; jumptable            260     6 (fixed)
  2918                           ;	Chosen strategy is simple_byte
  2919                           
  2920                           	movf 1+(??_pinMode+0)+0,w
  2921  0672  0872               	opt asmopt_push
  2922                           	opt asmopt_off
  2923                           	xorlw	0^0	; case 0
  2924  0673  3A00               	skipnz
  2925  0674  1903               	goto	l2317
  2926  0675  2E77               	goto	l179
  2927  0676  2EC4               	opt asmopt_pop
  2928                           	
  2929                           l2317:	
  2930  0677                     ; Switch size 1, requested type "space"
  2931                           ; Number of cases is 25, Range of values is 0 to 24
  2932                           ; switch strategies available:
  2933                           ; Name         Instructions Cycles
  2934                           ; simple_byte           76    39 (average)
  2935                           ; direct_byte           83     8 (fixed)
  2936                           ; jumptable            260     6 (fixed)
  2937                           ;	Chosen strategy is simple_byte
  2938                           
  2939                           	movf 0+(??_pinMode+0)+0,w
  2940  0677  0871               	opt asmopt_push
  2941                           	opt asmopt_off
  2942                           	xorlw	0^0	; case 0
  2943  0678  3A00               	skipnz
  2944  0679  1903               	goto	l1881
  2945  067A  2DA6               	xorlw	1^0	; case 1
  2946  067B  3A01               	skipnz
  2947  067C  1903               	goto	l1883
  2948  067D  2DAE               	xorlw	2^1	; case 2
  2949  067E  3A03               	skipnz
  2950  067F  1903               	goto	l1885
  2951  0680  2DB6               	xorlw	3^2	; case 3
  2952  0681  3A01               	skipnz
  2953  0682  1903               	goto	l1887
  2954  0683  2DBE               	xorlw	4^3	; case 4
  2955  0684  3A07               	skipnz
  2956  0685  1903               	goto	l1889
  2957  0686  2DC6               	xorlw	5^4	; case 5
  2958  0687  3A01               	skipnz
  2959  0688  1903               	goto	l1891
  2960  0689  2DCE               	xorlw	6^5	; case 6
  2961  068A  3A03               	skipnz
  2962  068B  1903               	goto	l1893
  2963  068C  2DD6               	xorlw	7^6	; case 7
  2964  068D  3A01               	skipnz
  2965  068E  1903               	goto	l1895
  2966  068F  2DDE               	xorlw	8^7	; case 8
  2967  0690  3A0F               	skipnz
  2968  0691  1903               	goto	l1897
  2969  0692  2DE6               	xorlw	9^8	; case 9
  2970  0693  3A01               	skipnz
  2971  0694  1903               	goto	l1899
  2972  0695  2DEE               	xorlw	10^9	; case 10
  2973  0696  3A03               	skipnz
  2974  0697  1903               	goto	l1901
  2975  0698  2DF6               	xorlw	11^10	; case 11
  2976  0699  3A01               	skipnz
  2977  069A  1903               	goto	l1903
  2978  069B  2DFE               	xorlw	12^11	; case 12
  2979  069C  3A07               	skipnz
  2980  069D  1903               	goto	l1905
  2981  069E  2E06               	xorlw	13^12	; case 13
  2982  069F  3A01               	skipnz
  2983  06A0  1903               	goto	l1907
  2984  06A1  2E0E               	xorlw	14^13	; case 14
  2985  06A2  3A03               	skipnz
  2986  06A3  1903               	goto	l1909
  2987  06A4  2E16               	xorlw	15^14	; case 15
  2988  06A5  3A01               	skipnz
  2989  06A6  1903               	goto	l1911
  2990  06A7  2E1E               	xorlw	16^15	; case 16
  2991  06A8  3A1F               	skipnz
  2992  06A9  1903               	goto	l1913
  2993  06AA  2E26               	xorlw	17^16	; case 17
  2994  06AB  3A01               	skipnz
  2995  06AC  1903               	goto	l1915
  2996  06AD  2E2E               	xorlw	18^17	; case 18
  2997  06AE  3A03               	skipnz
  2998  06AF  1903               	goto	l1917
  2999  06B0  2E36               	xorlw	19^18	; case 19
  3000  06B1  3A01               	skipnz
  3001  06B2  1903               	goto	l1919
  3002  06B3  2E3E               	xorlw	20^19	; case 20
  3003  06B4  3A07               	skipnz
  3004  06B5  1903               	goto	l1921
  3005  06B6  2E46               	xorlw	21^20	; case 21
  3006  06B7  3A01               	skipnz
  3007  06B8  1903               	goto	l1923
  3008  06B9  2E4E               	xorlw	22^21	; case 22
  3009  06BA  3A03               	skipnz
  3010  06BB  1903               	goto	l1925
  3011  06BC  2E56               	xorlw	23^22	; case 23
  3012  06BD  3A01               	skipnz
  3013  06BE  1903               	goto	l1927
  3014  06BF  2E5E               	xorlw	24^23	; case 24
  3015  06C0  3A0F               	skipnz
  3016  06C1  1903               	goto	l1929
  3017  06C2  2E66               	goto	l179
  3018  06C3  2EC4               	opt asmopt_pop
  3019                           
  3020                           	
  3021                           l154:	
  3022  06C4                     	line	168
  3023                           	
  3024                           l179:	
  3025  06C4                     	return
  3026  06C4  0008               	opt stack 0
  3027                           GLOBAL	__end_of_pinMode
  3028                           	__end_of_pinMode:
  3029  06C5                     	signat	_pinMode,8313
  3030                           	global	_loop
  3031                           
  3032 ;; *************** function _loop *****************
  3033 ;; Defined at:
  3034 ;;		line 22 in file "application.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         0       0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0
  3050 ;;      Temps:          2       0       0       0       0
  3051 ;;      Totals:         2       0       0       0       0
  3052 ;;Total ram usage:        2 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    2
  3055 ;; This function calls:
  3056 ;;		_Adelante
  3057 ;;		_Atras
  3058 ;;		_Derecha
  3059 ;;		_Detener
  3060 ;;		_Izquierda
  3061 ;;		_SerialAvailable
  3062 ;;		_SerialPrintLn
  3063 ;;		_SerialRead
  3064 ;;		_digitalWrite
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3070                           	file	"application.c"
  3071                           	line	22
  3072                           global __ptext6
  3073                           __ptext6:	;psect for function _loop
  3074  03B8                     psect	text6
  3075                           	file	"application.c"
  3076                           	line	22
  3077                           	global	__size_of_loop
  3078                           	__size_of_loop	equ	__end_of_loop-_loop
  3079  00A1                     	
  3080                           _loop:	
  3081  03B8                     ;incstack = 0
  3082                           	opt	stack 5
  3083                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3084                           	line	24
  3085                           	
  3086                           l2181:	
  3087  03B8                     ;application.c: 24:     if(SerialAvailable() >=0)
  3088                           	fcall	_SerialAvailable
  3089  03B8  120A  118A  214A  120A  118A  	line	26
  3090                           	
  3091                           l2183:	
  3092  03BD                     ;application.c: 25:     {;application.c: 26:         data = SerialRead();
  3093                           	fcall	_SerialRead
  3094  03BD  120A  118A  210B  120A  118A  	movwf	(??_loop+0)+0
  3095  03C2  00F8               	movf	(??_loop+0)+0,w
  3096  03C3  0878               	bcf	status, 5	;RP0=0, select bank0
  3097  03C4  1283               	bcf	status, 6	;RP1=0, select bank0
  3098  03C5  1303               	movwf	(_data)
  3099  03C6  00B3               	line	27
  3100                           ;application.c: 27:         switch(data)
  3101                           	goto	l2201
  3102  03C7  2C36               	line	29
  3103                           ;application.c: 28:         {;application.c: 29:             case 'w':
  3104                           	
  3105                           l432:	
  3106  03C8                     	line	30
  3107                           	
  3108                           l2185:	
  3109  03C8                     ;application.c: 30:                 Adelante(500);
  3110                           	movlw	0F4h
  3111  03C8  30F4               	movwf	(Adelante@Vel)
  3112  03C9  00F6               	movlw	01h
  3113  03CA  3001               	movwf	((Adelante@Vel))+1
  3114  03CB  00F7               	fcall	_Adelante
  3115  03CC  120A  118A  21ED  120A  118A  	line	31
  3116                           ;application.c: 31:                 SerialPrintLn("Adelante");
  3117                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  3118  03D1  300B               	fcall	_SerialPrintLn
  3119  03D2  120A  118A  2187  120A  118A  	line	32
  3120                           ;application.c: 32:                 break;
  3121                           	goto	l440
  3122  03D7  2C58               	line	33
  3123                           ;application.c: 33:             case 's':
  3124                           	
  3125                           l434:	
  3126  03D8                     	line	34
  3127                           	
  3128                           l2187:	
  3129  03D8                     ;application.c: 34:                 Atras(500);
  3130                           	movlw	0F4h
  3131  03D8  30F4               	movwf	(Atras@Vel)
  3132  03D9  00F6               	movlw	01h
  3133  03DA  3001               	movwf	((Atras@Vel))+1
  3134  03DB  00F7               	fcall	_Atras
  3135  03DC  120A  118A  222A  120A  118A  	line	35
  3136                           ;application.c: 35:                 SerialPrintLn("Atras");
  3137                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  3138  03E1  3032               	fcall	_SerialPrintLn
  3139  03E2  120A  118A  2187  120A  118A  	line	36
  3140                           ;application.c: 36:                 break;
  3141                           	goto	l440
  3142  03E7  2C58               	line	37
  3143                           ;application.c: 37:             case 'a':
  3144                           	
  3145                           l435:	
  3146  03E8                     	line	38
  3147                           	
  3148                           l2189:	
  3149  03E8                     ;application.c: 38:                 Izquierda(500);
  3150                           	movlw	0F4h
  3151  03E8  30F4               	movwf	(Izquierda@Vel)
  3152  03E9  00F6               	movlw	01h
  3153  03EA  3001               	movwf	((Izquierda@Vel))+1
  3154  03EB  00F7               	fcall	_Izquierda
  3155  03EC  120A  118A  22A4  120A  118A  	line	39
  3156                           ;application.c: 39:                 SerialPrintLn("Izquierda");
  3157                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  3158  03F1  3001               	fcall	_SerialPrintLn
  3159  03F2  120A  118A  2187  120A  118A  	line	40
  3160                           ;application.c: 40:                 break;
  3161                           	goto	l440
  3162  03F7  2C58               	line	41
  3163                           ;application.c: 41:             case 'd':
  3164                           	
  3165                           l436:	
  3166  03F8                     	line	42
  3167                           	
  3168                           l2191:	
  3169  03F8                     ;application.c: 42:                 Derecha(500);
  3170                           	movlw	0F4h
  3171  03F8  30F4               	movwf	(Derecha@Vel)
  3172  03F9  00F6               	movlw	01h
  3173  03FA  3001               	movwf	((Derecha@Vel))+1
  3174  03FB  00F7               	fcall	_Derecha
  3175  03FC  120A  118A  2267  120A  118A  	line	43
  3176                           ;application.c: 43:                 SerialPrintLn("Derecha");
  3177                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3178  0401  3014               	fcall	_SerialPrintLn
  3179  0402  120A  118A  2187  120A  118A  	line	44
  3180                           ;application.c: 44:                 break;
  3181                           	goto	l440
  3182  0407  2C58               	line	45
  3183                           ;application.c: 45:             case 'c':
  3184                           	
  3185                           l437:	
  3186  0408                     	line	46
  3187                           	
  3188                           l2193:	
  3189  0408                     ;application.c: 46:                 Detener();
  3190                           	fcall	_Detener
  3191  0408  120A  118A  21B4  120A  118A  	line	47
  3192                           ;application.c: 47:                 SerialPrintLn("Detener");
  3193                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3194  040D  301C               	fcall	_SerialPrintLn
  3195  040E  120A  118A  2187  120A  118A  	line	48
  3196                           ;application.c: 48:                 break;
  3197                           	goto	l440
  3198  0413  2C58               	line	49
  3199                           ;application.c: 49:             case 'f':
  3200                           	
  3201                           l438:	
  3202  0414                     	line	50
  3203                           	
  3204                           l2195:	
  3205  0414                     ;application.c: 50:                 digitalWrite(Led,1);
  3206                           	clrf	(digitalWrite@value)
  3207  0414  01F0               	incf	(digitalWrite@value),f
  3208  0415  0AF0               	bcf	status, 5	;RP0=0, select bank0
  3209  0416  1283               	bcf	status, 6	;RP1=0, select bank0
  3210  0417  1303               	movf	(_Led),w
  3211  0418  0834               	fcall	_digitalWrite
  3212  0419  120A  118A  26C5  120A  118A  	line	51
  3213                           ;application.c: 51:                 SerialPrintLn("Caso F");
  3214                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  3215  041E  3024               	fcall	_SerialPrintLn
  3216  041F  120A  118A  2187  120A  118A  	line	52
  3217                           ;application.c: 52:                 break;
  3218                           	goto	l440
  3219  0424  2C58               	line	53
  3220                           ;application.c: 53:             case 'j':
  3221                           	
  3222                           l439:	
  3223  0425                     	line	54
  3224                           	
  3225                           l2197:	
  3226  0425                     ;application.c: 54:                 digitalWrite(Led,0);
  3227                           	clrf	(digitalWrite@value)
  3228  0425  01F0               	bcf	status, 5	;RP0=0, select bank0
  3229  0426  1283               	bcf	status, 6	;RP1=0, select bank0
  3230  0427  1303               	movf	(_Led),w
  3231  0428  0834               	fcall	_digitalWrite
  3232  0429  120A  118A  26C5  120A  118A  	line	55
  3233                           ;application.c: 55:                 SerialPrintLn("Caso J");
  3234                           	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  3235  042E  302B               	fcall	_SerialPrintLn
  3236  042F  120A  118A  2187  120A  118A  	line	56
  3237                           ;application.c: 56:                 break;
  3238                           	goto	l440
  3239  0434  2C58               	line	57
  3240                           	
  3241                           l2199:	
  3242  0435                     ;application.c: 57:         }
  3243                           	goto	l440
  3244  0435  2C58               	
  3245                           l431:	
  3246  0436                     	
  3247                           l2201:	
  3248  0436                     	bcf	status, 5	;RP0=0, select bank0
  3249  0436  1283               	bcf	status, 6	;RP1=0, select bank0
  3250  0437  1303               	movf	(_data),w
  3251  0438  0833               	movwf	(??_loop+0)+0
  3252  0439  00F8               	clrf	(??_loop+0)+0+1
  3253  043A  01F9               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3254                           ; Switch size 1, requested type "space"
  3255                           ; Number of cases is 1, Range of values is 0 to 0
  3256                           ; switch strategies available:
  3257                           ; Name         Instructions Cycles
  3258                           ; simple_byte            4     3 (average)
  3259                           ; direct_byte           11     8 (fixed)
  3260                           ; jumptable            260     6 (fixed)
  3261                           ;	Chosen strategy is simple_byte
  3262                           
  3263                           	movf 1+(??_loop+0)+0,w
  3264  043B  0879               	opt asmopt_push
  3265                           	opt asmopt_off
  3266                           	xorlw	0^0	; case 0
  3267  043C  3A00               	skipnz
  3268  043D  1903               	goto	l2319
  3269  043E  2C40               	goto	l440
  3270  043F  2C58               	opt asmopt_pop
  3271                           	
  3272                           l2319:	
  3273  0440                     ; Switch size 1, requested type "space"
  3274                           ; Number of cases is 7, Range of values is 97 to 119
  3275                           ; switch strategies available:
  3276                           ; Name         Instructions Cycles
  3277                           ; simple_byte           22    12 (average)
  3278                           ; direct_byte           80    11 (fixed)
  3279                           ; jumptable            263     9 (fixed)
  3280                           ;	Chosen strategy is simple_byte
  3281                           
  3282                           	movf 0+(??_loop+0)+0,w
  3283  0440  0878               	opt asmopt_push
  3284                           	opt asmopt_off
  3285                           	xorlw	97^0	; case 97
  3286  0441  3A61               	skipnz
  3287  0442  1903               	goto	l2189
  3288  0443  2BE8               	xorlw	99^97	; case 99
  3289  0444  3A02               	skipnz
  3290  0445  1903               	goto	l2193
  3291  0446  2C08               	xorlw	100^99	; case 100
  3292  0447  3A07               	skipnz
  3293  0448  1903               	goto	l2191
  3294  0449  2BF8               	xorlw	102^100	; case 102
  3295  044A  3A02               	skipnz
  3296  044B  1903               	goto	l2195
  3297  044C  2C14               	xorlw	106^102	; case 106
  3298  044D  3A0C               	skipnz
  3299  044E  1903               	goto	l2197
  3300  044F  2C25               	xorlw	115^106	; case 115
  3301  0450  3A19               	skipnz
  3302  0451  1903               	goto	l2187
  3303  0452  2BD8               	xorlw	119^115	; case 119
  3304  0453  3A04               	skipnz
  3305  0454  1903               	goto	l2185
  3306  0455  2BC8               	goto	l440
  3307  0456  2C58               	opt asmopt_pop
  3308                           
  3309                           	
  3310                           l433:	
  3311  0457                     	goto	l440
  3312  0457  2C58               	line	58
  3313                           ;application.c: 58:     }
  3314                           	
  3315                           l430:	
  3316  0458                     	line	59
  3317                           	
  3318                           l440:	
  3319  0458                     	return
  3320  0458  0008               	opt stack 0
  3321                           GLOBAL	__end_of_loop
  3322                           	__end_of_loop:
  3323  0459                     	signat	_loop,89
  3324                           	global	_SerialRead
  3325                           
  3326 ;; *************** function _SerialRead *****************
  3327 ;; Defined at:
  3328 ;;		line 546 in file "source.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      unsigned char 
  3335 ;; Registers used:
  3336 ;;		wreg
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0
  3345 ;;      Totals:         0       0       0       0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_loop
  3352 ;;		_SerialReadText
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3356                           	file	"source.c"
  3357                           	line	546
  3358                           global __ptext7
  3359                           __ptext7:	;psect for function _SerialRead
  3360  010B                     psect	text7
  3361                           	file	"source.c"
  3362                           	line	546
  3363                           	global	__size_of_SerialRead
  3364                           	__size_of_SerialRead	equ	__end_of_SerialRead-_SerialRead
  3365  000B                     	
  3366                           _SerialRead:	
  3367  010B                     ;incstack = 0
  3368                           	opt	stack 6
  3369                           ; Regs used in _SerialRead: [wreg]
  3370                           	line	548
  3371                           	
  3372                           l2141:	
  3373  010B                     ;source.c: 548:     while(!RCIF);
  3374                           	goto	l335
  3375  010B  290C               	
  3376                           l336:	
  3377  010C                     	
  3378                           l335:	
  3379  010C                     	bcf	status, 5	;RP0=0, select bank0
  3380  010C  1283               	bcf	status, 6	;RP1=0, select bank0
  3381  010D  1303               	btfss	(101/8),(101)&7	;volatile
  3382  010E  1E8C               	goto	u721
  3383  010F  2911               	goto	u720
  3384  0110  2912               u721:
  3385  0111                     	goto	l335
  3386  0111  290C               u720:
  3387  0112                     	goto	l2143
  3388  0112  2913               	
  3389                           l337:	
  3390  0113                     	line	549
  3391                           	
  3392                           l2143:	
  3393  0113                     ;source.c: 549:     return RCREG;
  3394                           	movf	(26),w	;volatile
  3395  0113  081A               	goto	l338
  3396  0114  2915               	
  3397                           l2145:	
  3398  0115                     	line	550
  3399                           	
  3400                           l338:	
  3401  0115                     	return
  3402  0115  0008               	opt stack 0
  3403                           GLOBAL	__end_of_SerialRead
  3404                           	__end_of_SerialRead:
  3405  0116                     	signat	_SerialRead,89
  3406                           	global	_SerialPrintLn
  3407                           
  3408 ;; *************** function _SerialPrintLn *****************
  3409 ;; Defined at:
  3410 ;;		line 532 in file "source.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  dataText        1    wreg     PTR unsigned char 
  3413 ;;		 -> STR_7(7), STR_6(7), STR_5(8), STR_4(8), 
  3414 ;;		 -> STR_3(10), STR_2(6), STR_1(9), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  dataText        1    3[COMMON] PTR unsigned char 
  3417 ;;		 -> STR_7(7), STR_6(7), STR_5(8), STR_4(8), 
  3418 ;;		 -> STR_3(10), STR_2(6), STR_1(9), 
  3419 ;;  i               2    1[COMMON] unsigned int 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3429 ;;      Params:         0       0       0       0       0
  3430 ;;      Locals:         3       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0
  3432 ;;      Totals:         3       0       0       0       0
  3433 ;;Total ram usage:        3 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    1
  3436 ;; This function calls:
  3437 ;;		_SerialWrite
  3438 ;; This function is called by:
  3439 ;;		_loop
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3443                           	line	532
  3444                           global __ptext8
  3445                           __ptext8:	;psect for function _SerialPrintLn
  3446  0187                     psect	text8
  3447                           	file	"source.c"
  3448                           	line	532
  3449                           	global	__size_of_SerialPrintLn
  3450                           	__size_of_SerialPrintLn	equ	__end_of_SerialPrintLn-_SerialPrintLn
  3451  002D                     	
  3452                           _SerialPrintLn:	
  3453  0187                     ;incstack = 0
  3454                           	opt	stack 5
  3455                           ; Regs used in _SerialPrintLn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3456                           ;SerialPrintLn@dataText stored from wreg
  3457                           	movwf	(SerialPrintLn@dataText)
  3458  0187  00F3               	line	535
  3459                           	
  3460                           l2121:	
  3461  0188                     ;source.c: 532: void SerialPrintLn(char *dataText);source.c: 533: {;source.c: 534:     u
                                 nsigned int i;;source.c: 535:         for(i=0;dataText[i]!='\0';i++)
  3462                           	clrf	(SerialPrintLn@i)
  3463  0188  01F1               	clrf	(SerialPrintLn@i+1)
  3464  0189  01F2               	goto	l2127
  3465  018A  299F               	
  3466                           l325:	
  3467  018B                     	line	537
  3468                           	
  3469                           l2123:	
  3470  018B                     ;source.c: 536:         {;source.c: 537:             SerialWrite(dataText[i]);
  3471                           	movf	(SerialPrintLn@i),w
  3472  018B  0871               	addwf	(SerialPrintLn@dataText),w
  3473  018C  0773               	movwf	fsr0
  3474  018D  0084               	fcall	stringdir
  3475  018E  120A  118A  2003  120A  118A  	fcall	_SerialWrite
  3476  0193  120A  118A  2116  120A  118A  	line	538
  3477                           	
  3478                           l2125:	
  3479  0198                     ;source.c: 538:         }
  3480                           	movlw	01h
  3481  0198  3001               	addwf	(SerialPrintLn@i),f
  3482  0199  07F1               	skipnc
  3483  019A  1803               	incf	(SerialPrintLn@i+1),f
  3484  019B  0AF2               	movlw	0
  3485  019C  3000               	addwf	(SerialPrintLn@i+1),f
  3486  019D  07F2               	goto	l2127
  3487  019E  299F               	
  3488                           l324:	
  3489  019F                     	
  3490                           l2127:	
  3491  019F                     	movf	(SerialPrintLn@i),w
  3492  019F  0871               	addwf	(SerialPrintLn@dataText),w
  3493  01A0  0773               	movwf	fsr0
  3494  01A1  0084               	fcall	stringdir
  3495  01A2  120A  118A  2003  120A  118A  	xorlw	0
  3496  01A7  3A00               	skipz
  3497  01A8  1D03               	goto	u681
  3498  01A9  29AB               	goto	u680
  3499  01AA  29AC               u681:
  3500  01AB                     	goto	l2123
  3501  01AB  298B               u680:
  3502  01AC                     	goto	l2129
  3503  01AC  29AD               	
  3504                           l326:	
  3505  01AD                     	line	539
  3506                           	
  3507                           l2129:	
  3508  01AD                     ;source.c: 539:         SerialWrite(0x0A);
  3509                           	movlw	low(0Ah)
  3510  01AD  300A               	fcall	_SerialWrite
  3511  01AE  120A  118A  2116  120A  118A  	line	540
  3512                           	
  3513                           l327:	
  3514  01B3                     	return
  3515  01B3  0008               	opt stack 0
  3516                           GLOBAL	__end_of_SerialPrintLn
  3517                           	__end_of_SerialPrintLn:
  3518  01B4                     	signat	_SerialPrintLn,4217
  3519                           	global	_SerialWrite
  3520                           
  3521 ;; *************** function _SerialWrite *****************
  3522 ;; Defined at:
  3523 ;;		line 511 in file "source.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  dataWrite       1    wreg     unsigned char 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  dataWrite       1    0[COMMON] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3537 ;;      Params:         0       0       0       0       0
  3538 ;;      Locals:         1       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0
  3540 ;;      Totals:         1       0       0       0       0
  3541 ;;Total ram usage:        1 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_SerialPrintLn
  3547 ;;		_SerialWriteText
  3548 ;;		_SerialPrint
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3552                           	line	511
  3553                           global __ptext9
  3554                           __ptext9:	;psect for function _SerialWrite
  3555  0116                     psect	text9
  3556                           	file	"source.c"
  3557                           	line	511
  3558                           	global	__size_of_SerialWrite
  3559                           	__size_of_SerialWrite	equ	__end_of_SerialWrite-_SerialWrite
  3560  000C                     	
  3561                           _SerialWrite:	
  3562  0116                     ;incstack = 0
  3563                           	opt	stack 5
  3564                           ; Regs used in _SerialWrite: [wreg]
  3565                           ;SerialWrite@dataWrite stored from wreg
  3566                           	movwf	(SerialWrite@dataWrite)
  3567  0116  00F0               	line	513
  3568                           	
  3569                           l2025:	
  3570  0117                     ;source.c: 511: void SerialWrite(char dataWrite);source.c: 512: {;source.c: 513:     whi
                                 le(!TXIF);
  3571                           	goto	l306
  3572  0117  2918               	
  3573                           l307:	
  3574  0118                     	
  3575                           l306:	
  3576  0118                     	bcf	status, 5	;RP0=0, select bank0
  3577  0118  1283               	bcf	status, 6	;RP1=0, select bank0
  3578  0119  1303               	btfss	(100/8),(100)&7	;volatile
  3579  011A  1E0C               	goto	u541
  3580  011B  291D               	goto	u540
  3581  011C  291E               u541:
  3582  011D                     	goto	l306
  3583  011D  2918               u540:
  3584  011E                     	goto	l2027
  3585  011E  291F               	
  3586                           l308:	
  3587  011F                     	line	514
  3588                           	
  3589                           l2027:	
  3590  011F                     ;source.c: 514:     TXREG = dataWrite;
  3591                           	movf	(SerialWrite@dataWrite),w
  3592  011F  0870               	movwf	(25)	;volatile
  3593  0120  0099               	line	515
  3594                           	
  3595                           l309:	
  3596  0121                     	return
  3597  0121  0008               	opt stack 0
  3598                           GLOBAL	__end_of_SerialWrite
  3599                           	__end_of_SerialWrite:
  3600  0122                     	signat	_SerialWrite,4217
  3601                           	global	_SerialAvailable
  3602                           
  3603 ;; *************** function _SerialAvailable *****************
  3604 ;; Defined at:
  3605 ;;		line 541 in file "source.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      unsigned char 
  3612 ;; Registers used:
  3613 ;;		status,2
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3619 ;;      Params:         0       0       0       0       0
  3620 ;;      Locals:         1       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0
  3622 ;;      Totals:         1       0       0       0       0
  3623 ;;Total ram usage:        1 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_loop
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3632                           	line	541
  3633                           global __ptext10
  3634                           __ptext10:	;psect for function _SerialAvailable
  3635  014A                     psect	text10
  3636                           	file	"source.c"
  3637                           	line	541
  3638                           	global	__size_of_SerialAvailable
  3639                           	__size_of_SerialAvailable	equ	__end_of_SerialAvailable-_SerialAvailable
  3640  0017                     	
  3641                           _SerialAvailable:	
  3642  014A                     ;incstack = 0
  3643                           	opt	stack 6
  3644                           ; Regs used in _SerialAvailable: [status,2]
  3645                           	line	543
  3646                           	
  3647                           l2131:	
  3648  014A                     ;source.c: 543:     return RCIF || (TXIF && TRMT);
  3649                           	clrf	(_SerialAvailable$429)
  3650  014A  01F0               	incf	(_SerialAvailable$429),f
  3651  014B  0AF0               	bcf	status, 5	;RP0=0, select bank0
  3652  014C  1283               	bcf	status, 6	;RP1=0, select bank0
  3653  014D  1303               	btfsc	(101/8),(101)&7	;volatile
  3654  014E  1A8C               	goto	u691
  3655  014F  2951               	goto	u690
  3656  0150  2952               u691:
  3657  0151                     	goto	l332
  3658  0151  2960               u690:
  3659  0152                     	
  3660                           l2133:	
  3661  0152                     	btfss	(100/8),(100)&7	;volatile
  3662  0152  1E0C               	goto	u701
  3663  0153  2955               	goto	u700
  3664  0154  2956               u701:
  3665  0155                     	goto	l2137
  3666  0155  295D               u700:
  3667  0156                     	
  3668                           l2135:	
  3669  0156                     	bsf	status, 5	;RP0=1, select bank1
  3670  0156  1683               	bcf	status, 6	;RP1=0, select bank1
  3671  0157  1303               	btfsc	(1217/8)^080h,(1217)&7	;volatile
  3672  0158  1898               	goto	u711
  3673  0159  295B               	goto	u710
  3674  015A  295C               u711:
  3675  015B                     	goto	l332
  3676  015B  2960               u710:
  3677  015C                     	goto	l2137
  3678  015C  295D               	
  3679                           l1877:	
  3680  015D                     	
  3681                           l2137:	
  3682  015D                     	clrf	(_SerialAvailable$429)
  3683  015D  01F0               	goto	l332
  3684  015E  2960               	
  3685                           l331:	
  3686  015F                     	goto	l332
  3687  015F  2960               	
  3688                           l2139:	
  3689  0160                     	line	544
  3690                           ;	Return value of _SerialAvailable is never used
  3691                           	
  3692                           l332:	
  3693  0160                     	return
  3694  0160  0008               	opt stack 0
  3695                           GLOBAL	__end_of_SerialAvailable
  3696                           	__end_of_SerialAvailable:
  3697  0161                     	signat	_SerialAvailable,89
  3698                           	global	_Izquierda
  3699                           
  3700 ;; *************** function _Izquierda *****************
  3701 ;; Defined at:
  3702 ;;		line 46 in file "RobotMovimientos.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  Vel             2    6[COMMON] unsigned int 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3716 ;;      Params:         2       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0
  3719 ;;      Totals:         2       0       0       0       0
  3720 ;;Total ram usage:        2 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:    1
  3723 ;; This function calls:
  3724 ;;		_analogWrite
  3725 ;;		_digitalWrite
  3726 ;; This function is called by:
  3727 ;;		_loop
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3731                           	file	"RobotMovimientos.c"
  3732                           	line	46
  3733                           global __ptext11
  3734                           __ptext11:	;psect for function _Izquierda
  3735  02A4                     psect	text11
  3736                           	file	"RobotMovimientos.c"
  3737                           	line	46
  3738                           	global	__size_of_Izquierda
  3739                           	__size_of_Izquierda	equ	__end_of_Izquierda-_Izquierda
  3740  003D                     	
  3741                           _Izquierda:	
  3742  02A4                     ;incstack = 0
  3743                           	opt	stack 5
  3744                           ; Regs used in _Izquierda: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3745                           	line	48
  3746                           	
  3747                           l2167:	
  3748  02A4                     ;RobotMovimientos.c: 46: void Izquierda(uint16_t Vel);RobotMovimientos.c: 47: {;RobotMov
                                 imientos.c: 48:     digitalWrite(in1,1);
  3749                           	clrf	(digitalWrite@value)
  3750  02A4  01F0               	incf	(digitalWrite@value),f
  3751  02A5  0AF0               	movf	(_in1),w
  3752  02A6  087D               	fcall	_digitalWrite
  3753  02A7  120A  118A  26C5  120A  118A  	line	49
  3754                           ;RobotMovimientos.c: 49:     digitalWrite(in2,0);
  3755                           	clrf	(digitalWrite@value)
  3756  02AC  01F0               	bcf	status, 5	;RP0=0, select bank0
  3757  02AD  1283               	bcf	status, 6	;RP1=0, select bank0
  3758  02AE  1303               	movf	(_in2),w
  3759  02AF  083F               	fcall	_digitalWrite
  3760  02B0  120A  118A  26C5  120A  118A  	line	50
  3761                           ;RobotMovimientos.c: 50:     digitalWrite(in3,0);
  3762                           	clrf	(digitalWrite@value)
  3763  02B5  01F0               	bcf	status, 5	;RP0=0, select bank0
  3764  02B6  1283               	bcf	status, 6	;RP1=0, select bank0
  3765  02B7  1303               	movf	(_in3),w
  3766  02B8  083E               	fcall	_digitalWrite
  3767  02B9  120A  118A  26C5  120A  118A  	line	51
  3768                           ;RobotMovimientos.c: 51:     digitalWrite(in4,1);
  3769                           	clrf	(digitalWrite@value)
  3770  02BE  01F0               	incf	(digitalWrite@value),f
  3771  02BF  0AF0               	bcf	status, 5	;RP0=0, select bank0
  3772  02C0  1283               	bcf	status, 6	;RP1=0, select bank0
  3773  02C1  1303               	movf	(_in4),w
  3774  02C2  083D               	fcall	_digitalWrite
  3775  02C3  120A  118A  26C5  120A  118A  	line	52
  3776                           ;RobotMovimientos.c: 52:  analogWrite(va,Vel);
  3777                           	movf	(Izquierda@Vel+1),w
  3778  02C8  0877               	movwf	(analogWrite@value+1)
  3779  02C9  00F1               	movf	(Izquierda@Vel),w
  3780  02CA  0876               	movwf	(analogWrite@value)
  3781  02CB  00F0               	bcf	status, 5	;RP0=0, select bank0
  3782  02CC  1283               	bcf	status, 6	;RP1=0, select bank0
  3783  02CD  1303               	movf	(_va),w
  3784  02CE  083C               	fcall	_analogWrite
  3785  02CF  120A  118A  236C  120A  118A  	line	53
  3786                           ;RobotMovimientos.c: 53:  analogWrite(vb,Vel);
  3787                           	movf	(Izquierda@Vel+1),w
  3788  02D4  0877               	movwf	(analogWrite@value+1)
  3789  02D5  00F1               	movf	(Izquierda@Vel),w
  3790  02D6  0876               	movwf	(analogWrite@value)
  3791  02D7  00F0               	bcf	status, 5	;RP0=0, select bank0
  3792  02D8  1283               	bcf	status, 6	;RP1=0, select bank0
  3793  02D9  1303               	movf	(_vb),w
  3794  02DA  083B               	fcall	_analogWrite
  3795  02DB  120A  118A  236C  120A  118A  	line	54
  3796                           	
  3797                           l470:	
  3798  02E0                     	return
  3799  02E0  0008               	opt stack 0
  3800                           GLOBAL	__end_of_Izquierda
  3801                           	__end_of_Izquierda:
  3802  02E1                     	signat	_Izquierda,4217
  3803                           	global	_Detener
  3804                           
  3805 ;; *************** function _Detener *****************
  3806 ;; Defined at:
  3807 ;;		line 66 in file "RobotMovimientos.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         0       0       0       0       0
  3822 ;;      Locals:         0       0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0
  3824 ;;      Totals:         0       0       0       0       0
  3825 ;;Total ram usage:        0 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    1
  3828 ;; This function calls:
  3829 ;;		_analogWrite
  3830 ;;		_digitalWrite
  3831 ;; This function is called by:
  3832 ;;		_loop
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3836                           	line	66
  3837                           global __ptext12
  3838                           __ptext12:	;psect for function _Detener
  3839  01B4                     psect	text12
  3840                           	file	"RobotMovimientos.c"
  3841                           	line	66
  3842                           	global	__size_of_Detener
  3843                           	__size_of_Detener	equ	__end_of_Detener-_Detener
  3844  0039                     	
  3845                           _Detener:	
  3846  01B4                     ;incstack = 0
  3847                           	opt	stack 5
  3848                           ; Regs used in _Detener: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3849                           	line	68
  3850                           	
  3851                           l2171:	
  3852  01B4                     ;RobotMovimientos.c: 68:     digitalWrite(in1,0);
  3853                           	clrf	(digitalWrite@value)
  3854  01B4  01F0               	movf	(_in1),w
  3855  01B5  087D               	fcall	_digitalWrite
  3856  01B6  120A  118A  26C5  120A  118A  	line	69
  3857                           ;RobotMovimientos.c: 69:     digitalWrite(in2,0);
  3858                           	clrf	(digitalWrite@value)
  3859  01BB  01F0               	bcf	status, 5	;RP0=0, select bank0
  3860  01BC  1283               	bcf	status, 6	;RP1=0, select bank0
  3861  01BD  1303               	movf	(_in2),w
  3862  01BE  083F               	fcall	_digitalWrite
  3863  01BF  120A  118A  26C5  120A  118A  	line	70
  3864                           ;RobotMovimientos.c: 70:     digitalWrite(in3,0);
  3865                           	clrf	(digitalWrite@value)
  3866  01C4  01F0               	bcf	status, 5	;RP0=0, select bank0
  3867  01C5  1283               	bcf	status, 6	;RP1=0, select bank0
  3868  01C6  1303               	movf	(_in3),w
  3869  01C7  083E               	fcall	_digitalWrite
  3870  01C8  120A  118A  26C5  120A  118A  	line	71
  3871                           ;RobotMovimientos.c: 71:     digitalWrite(in4,0);
  3872                           	clrf	(digitalWrite@value)
  3873  01CD  01F0               	bcf	status, 5	;RP0=0, select bank0
  3874  01CE  1283               	bcf	status, 6	;RP1=0, select bank0
  3875  01CF  1303               	movf	(_in4),w
  3876  01D0  083D               	fcall	_digitalWrite
  3877  01D1  120A  118A  26C5  120A  118A  	line	72
  3878                           ;RobotMovimientos.c: 72:  analogWrite(va,0);
  3879                           	movlw	0
  3880  01D6  3000               	movwf	(analogWrite@value)
  3881  01D7  00F0               	movwf	(analogWrite@value+1)
  3882  01D8  00F1               	bcf	status, 5	;RP0=0, select bank0
  3883  01D9  1283               	bcf	status, 6	;RP1=0, select bank0
  3884  01DA  1303               	movf	(_va),w
  3885  01DB  083C               	fcall	_analogWrite
  3886  01DC  120A  118A  236C  120A  118A  	line	73
  3887                           ;RobotMovimientos.c: 73:  analogWrite(vb,0);
  3888                           	movlw	0
  3889  01E1  3000               	movwf	(analogWrite@value)
  3890  01E2  00F0               	movwf	(analogWrite@value+1)
  3891  01E3  00F1               	bcf	status, 5	;RP0=0, select bank0
  3892  01E4  1283               	bcf	status, 6	;RP1=0, select bank0
  3893  01E5  1303               	movf	(_vb),w
  3894  01E6  083B               	fcall	_analogWrite
  3895  01E7  120A  118A  236C  120A  118A  	line	74
  3896                           	
  3897                           l476:	
  3898  01EC                     	return
  3899  01EC  0008               	opt stack 0
  3900                           GLOBAL	__end_of_Detener
  3901                           	__end_of_Detener:
  3902  01ED                     	signat	_Detener,89
  3903                           	global	_Derecha
  3904                           
  3905 ;; *************** function _Derecha *****************
  3906 ;; Defined at:
  3907 ;;		line 56 in file "RobotMovimientos.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  Vel             2    6[COMMON] unsigned int 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3921 ;;      Params:         2       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0
  3924 ;;      Totals:         2       0       0       0       0
  3925 ;;Total ram usage:        2 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    1
  3928 ;; This function calls:
  3929 ;;		_analogWrite
  3930 ;;		_digitalWrite
  3931 ;; This function is called by:
  3932 ;;		_loop
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3936                           	line	56
  3937                           global __ptext13
  3938                           __ptext13:	;psect for function _Derecha
  3939  0267                     psect	text13
  3940                           	file	"RobotMovimientos.c"
  3941                           	line	56
  3942                           	global	__size_of_Derecha
  3943                           	__size_of_Derecha	equ	__end_of_Derecha-_Derecha
  3944  003D                     	
  3945                           _Derecha:	
  3946  0267                     ;incstack = 0
  3947                           	opt	stack 5
  3948                           ; Regs used in _Derecha: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3949                           	line	58
  3950                           	
  3951                           l2169:	
  3952  0267                     ;RobotMovimientos.c: 56: void Derecha(uint16_t Vel);RobotMovimientos.c: 57: {;RobotMovim
                                 ientos.c: 58:     digitalWrite(in1,0);
  3953                           	clrf	(digitalWrite@value)
  3954  0267  01F0               	movf	(_in1),w
  3955  0268  087D               	fcall	_digitalWrite
  3956  0269  120A  118A  26C5  120A  118A  	line	59
  3957                           ;RobotMovimientos.c: 59:     digitalWrite(in2,1);
  3958                           	clrf	(digitalWrite@value)
  3959  026E  01F0               	incf	(digitalWrite@value),f
  3960  026F  0AF0               	bcf	status, 5	;RP0=0, select bank0
  3961  0270  1283               	bcf	status, 6	;RP1=0, select bank0
  3962  0271  1303               	movf	(_in2),w
  3963  0272  083F               	fcall	_digitalWrite
  3964  0273  120A  118A  26C5  120A  118A  	line	60
  3965                           ;RobotMovimientos.c: 60:     digitalWrite(in3,1);
  3966                           	clrf	(digitalWrite@value)
  3967  0278  01F0               	incf	(digitalWrite@value),f
  3968  0279  0AF0               	bcf	status, 5	;RP0=0, select bank0
  3969  027A  1283               	bcf	status, 6	;RP1=0, select bank0
  3970  027B  1303               	movf	(_in3),w
  3971  027C  083E               	fcall	_digitalWrite
  3972  027D  120A  118A  26C5  120A  118A  	line	61
  3973                           ;RobotMovimientos.c: 61:     digitalWrite(in4,0);
  3974                           	clrf	(digitalWrite@value)
  3975  0282  01F0               	bcf	status, 5	;RP0=0, select bank0
  3976  0283  1283               	bcf	status, 6	;RP1=0, select bank0
  3977  0284  1303               	movf	(_in4),w
  3978  0285  083D               	fcall	_digitalWrite
  3979  0286  120A  118A  26C5  120A  118A  	line	62
  3980                           ;RobotMovimientos.c: 62:  analogWrite(va,Vel);
  3981                           	movf	(Derecha@Vel+1),w
  3982  028B  0877               	movwf	(analogWrite@value+1)
  3983  028C  00F1               	movf	(Derecha@Vel),w
  3984  028D  0876               	movwf	(analogWrite@value)
  3985  028E  00F0               	bcf	status, 5	;RP0=0, select bank0
  3986  028F  1283               	bcf	status, 6	;RP1=0, select bank0
  3987  0290  1303               	movf	(_va),w
  3988  0291  083C               	fcall	_analogWrite
  3989  0292  120A  118A  236C  120A  118A  	line	63
  3990                           ;RobotMovimientos.c: 63:  analogWrite(vb,Vel);
  3991                           	movf	(Derecha@Vel+1),w
  3992  0297  0877               	movwf	(analogWrite@value+1)
  3993  0298  00F1               	movf	(Derecha@Vel),w
  3994  0299  0876               	movwf	(analogWrite@value)
  3995  029A  00F0               	bcf	status, 5	;RP0=0, select bank0
  3996  029B  1283               	bcf	status, 6	;RP1=0, select bank0
  3997  029C  1303               	movf	(_vb),w
  3998  029D  083B               	fcall	_analogWrite
  3999  029E  120A  118A  236C  120A  118A  	line	64
  4000                           	
  4001                           l473:	
  4002  02A3                     	return
  4003  02A3  0008               	opt stack 0
  4004                           GLOBAL	__end_of_Derecha
  4005                           	__end_of_Derecha:
  4006  02A4                     	signat	_Derecha,4217
  4007                           	global	_Atras
  4008                           
  4009 ;; *************** function _Atras *****************
  4010 ;; Defined at:
  4011 ;;		line 36 in file "RobotMovimientos.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  Vel             2    6[COMMON] unsigned int 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4025 ;;      Params:         2       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0
  4028 ;;      Totals:         2       0       0       0       0
  4029 ;;Total ram usage:        2 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    1
  4032 ;; This function calls:
  4033 ;;		_analogWrite
  4034 ;;		_digitalWrite
  4035 ;; This function is called by:
  4036 ;;		_loop
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4040                           	line	36
  4041                           global __ptext14
  4042                           __ptext14:	;psect for function _Atras
  4043  022A                     psect	text14
  4044                           	file	"RobotMovimientos.c"
  4045                           	line	36
  4046                           	global	__size_of_Atras
  4047                           	__size_of_Atras	equ	__end_of_Atras-_Atras
  4048  003D                     	
  4049                           _Atras:	
  4050  022A                     ;incstack = 0
  4051                           	opt	stack 5
  4052                           ; Regs used in _Atras: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4053                           	line	38
  4054                           	
  4055                           l2165:	
  4056  022A                     ;RobotMovimientos.c: 36: void Atras(uint16_t Vel);RobotMovimientos.c: 37: {;RobotMovimie
                                 ntos.c: 38:     digitalWrite(in1,0);
  4057                           	clrf	(digitalWrite@value)
  4058  022A  01F0               	movf	(_in1),w
  4059  022B  087D               	fcall	_digitalWrite
  4060  022C  120A  118A  26C5  120A  118A  	line	39
  4061                           ;RobotMovimientos.c: 39:     digitalWrite(in2,1);
  4062                           	clrf	(digitalWrite@value)
  4063  0231  01F0               	incf	(digitalWrite@value),f
  4064  0232  0AF0               	bcf	status, 5	;RP0=0, select bank0
  4065  0233  1283               	bcf	status, 6	;RP1=0, select bank0
  4066  0234  1303               	movf	(_in2),w
  4067  0235  083F               	fcall	_digitalWrite
  4068  0236  120A  118A  26C5  120A  118A  	line	40
  4069                           ;RobotMovimientos.c: 40:     digitalWrite(in3,0);
  4070                           	clrf	(digitalWrite@value)
  4071  023B  01F0               	bcf	status, 5	;RP0=0, select bank0
  4072  023C  1283               	bcf	status, 6	;RP1=0, select bank0
  4073  023D  1303               	movf	(_in3),w
  4074  023E  083E               	fcall	_digitalWrite
  4075  023F  120A  118A  26C5  120A  118A  	line	41
  4076                           ;RobotMovimientos.c: 41:     digitalWrite(in4,1);
  4077                           	clrf	(digitalWrite@value)
  4078  0244  01F0               	incf	(digitalWrite@value),f
  4079  0245  0AF0               	bcf	status, 5	;RP0=0, select bank0
  4080  0246  1283               	bcf	status, 6	;RP1=0, select bank0
  4081  0247  1303               	movf	(_in4),w
  4082  0248  083D               	fcall	_digitalWrite
  4083  0249  120A  118A  26C5  120A  118A  	line	42
  4084                           ;RobotMovimientos.c: 42:  analogWrite(va,Vel);
  4085                           	movf	(Atras@Vel+1),w
  4086  024E  0877               	movwf	(analogWrite@value+1)
  4087  024F  00F1               	movf	(Atras@Vel),w
  4088  0250  0876               	movwf	(analogWrite@value)
  4089  0251  00F0               	bcf	status, 5	;RP0=0, select bank0
  4090  0252  1283               	bcf	status, 6	;RP1=0, select bank0
  4091  0253  1303               	movf	(_va),w
  4092  0254  083C               	fcall	_analogWrite
  4093  0255  120A  118A  236C  120A  118A  	line	43
  4094                           ;RobotMovimientos.c: 43:  analogWrite(vb,Vel);
  4095                           	movf	(Atras@Vel+1),w
  4096  025A  0877               	movwf	(analogWrite@value+1)
  4097  025B  00F1               	movf	(Atras@Vel),w
  4098  025C  0876               	movwf	(analogWrite@value)
  4099  025D  00F0               	bcf	status, 5	;RP0=0, select bank0
  4100  025E  1283               	bcf	status, 6	;RP1=0, select bank0
  4101  025F  1303               	movf	(_vb),w
  4102  0260  083B               	fcall	_analogWrite
  4103  0261  120A  118A  236C  120A  118A  	line	44
  4104                           	
  4105                           l467:	
  4106  0266                     	return
  4107  0266  0008               	opt stack 0
  4108                           GLOBAL	__end_of_Atras
  4109                           	__end_of_Atras:
  4110  0267                     	signat	_Atras,4217
  4111                           	global	_Adelante
  4112                           
  4113 ;; *************** function _Adelante *****************
  4114 ;; Defined at:
  4115 ;;		line 25 in file "RobotMovimientos.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  Vel             2    6[COMMON] unsigned int 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4129 ;;      Params:         2       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0
  4132 ;;      Totals:         2       0       0       0       0
  4133 ;;Total ram usage:        2 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:    1
  4136 ;; This function calls:
  4137 ;;		_analogWrite
  4138 ;;		_digitalWrite
  4139 ;; This function is called by:
  4140 ;;		_loop
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4144                           	line	25
  4145                           global __ptext15
  4146                           __ptext15:	;psect for function _Adelante
  4147  01ED                     psect	text15
  4148                           	file	"RobotMovimientos.c"
  4149                           	line	25
  4150                           	global	__size_of_Adelante
  4151                           	__size_of_Adelante	equ	__end_of_Adelante-_Adelante
  4152  003D                     	
  4153                           _Adelante:	
  4154  01ED                     ;incstack = 0
  4155                           	opt	stack 5
  4156                           ; Regs used in _Adelante: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4157                           	line	27
  4158                           	
  4159                           l2163:	
  4160  01ED                     ;RobotMovimientos.c: 25: void Adelante(uint16_t Vel);RobotMovimientos.c: 26: {;RobotMovi
                                 mientos.c: 27:     digitalWrite(in1,1);
  4161                           	clrf	(digitalWrite@value)
  4162  01ED  01F0               	incf	(digitalWrite@value),f
  4163  01EE  0AF0               	movf	(_in1),w
  4164  01EF  087D               	fcall	_digitalWrite
  4165  01F0  120A  118A  26C5  120A  118A  	line	28
  4166                           ;RobotMovimientos.c: 28:     digitalWrite(in2,0);
  4167                           	clrf	(digitalWrite@value)
  4168  01F5  01F0               	bcf	status, 5	;RP0=0, select bank0
  4169  01F6  1283               	bcf	status, 6	;RP1=0, select bank0
  4170  01F7  1303               	movf	(_in2),w
  4171  01F8  083F               	fcall	_digitalWrite
  4172  01F9  120A  118A  26C5  120A  118A  	line	29
  4173                           ;RobotMovimientos.c: 29:     digitalWrite(in3,1);
  4174                           	clrf	(digitalWrite@value)
  4175  01FE  01F0               	incf	(digitalWrite@value),f
  4176  01FF  0AF0               	bcf	status, 5	;RP0=0, select bank0
  4177  0200  1283               	bcf	status, 6	;RP1=0, select bank0
  4178  0201  1303               	movf	(_in3),w
  4179  0202  083E               	fcall	_digitalWrite
  4180  0203  120A  118A  26C5  120A  118A  	line	30
  4181                           ;RobotMovimientos.c: 30:     digitalWrite(in4,0);
  4182                           	clrf	(digitalWrite@value)
  4183  0208  01F0               	bcf	status, 5	;RP0=0, select bank0
  4184  0209  1283               	bcf	status, 6	;RP1=0, select bank0
  4185  020A  1303               	movf	(_in4),w
  4186  020B  083D               	fcall	_digitalWrite
  4187  020C  120A  118A  26C5  120A  118A  	line	31
  4188                           ;RobotMovimientos.c: 31:  analogWrite(va,Vel);
  4189                           	movf	(Adelante@Vel+1),w
  4190  0211  0877               	movwf	(analogWrite@value+1)
  4191  0212  00F1               	movf	(Adelante@Vel),w
  4192  0213  0876               	movwf	(analogWrite@value)
  4193  0214  00F0               	bcf	status, 5	;RP0=0, select bank0
  4194  0215  1283               	bcf	status, 6	;RP1=0, select bank0
  4195  0216  1303               	movf	(_va),w
  4196  0217  083C               	fcall	_analogWrite
  4197  0218  120A  118A  236C  120A  118A  	line	32
  4198                           ;RobotMovimientos.c: 32:  analogWrite(vb,Vel);
  4199                           	movf	(Adelante@Vel+1),w
  4200  021D  0877               	movwf	(analogWrite@value+1)
  4201  021E  00F1               	movf	(Adelante@Vel),w
  4202  021F  0876               	movwf	(analogWrite@value)
  4203  0220  00F0               	bcf	status, 5	;RP0=0, select bank0
  4204  0221  1283               	bcf	status, 6	;RP1=0, select bank0
  4205  0222  1303               	movf	(_vb),w
  4206  0223  083B               	fcall	_analogWrite
  4207  0224  120A  118A  236C  120A  118A  	line	34
  4208                           	
  4209                           l464:	
  4210  0229                     	return
  4211  0229  0008               	opt stack 0
  4212                           GLOBAL	__end_of_Adelante
  4213                           	__end_of_Adelante:
  4214  022A                     	signat	_Adelante,4217
  4215                           	global	_digitalWrite
  4216                           
  4217 ;; *************** function _digitalWrite *****************
  4218 ;; Defined at:
  4219 ;;		line 169 in file "source.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  pin             1    wreg     unsigned char 
  4222 ;;  value           1    0[COMMON] unsigned char 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  pin             1    3[COMMON] unsigned char 
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4234 ;;      Params:         1       0       0       0       0
  4235 ;;      Locals:         1       0       0       0       0
  4236 ;;      Temps:          2       0       0       0       0
  4237 ;;      Totals:         4       0       0       0       0
  4238 ;;Total ram usage:        4 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_setup
  4244 ;;		_loop
  4245 ;;		_Adelante
  4246 ;;		_Atras
  4247 ;;		_Izquierda
  4248 ;;		_Derecha
  4249 ;;		_Detener
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4253                           	file	"source.c"
  4254                           	line	169
  4255                           global __ptext16
  4256                           __ptext16:	;psect for function _digitalWrite
  4257  06C5                     psect	text16
  4258                           	file	"source.c"
  4259                           	line	169
  4260                           	global	__size_of_digitalWrite
  4261                           	__size_of_digitalWrite	equ	__end_of_digitalWrite-_digitalWrite
  4262  0123                     	
  4263                           _digitalWrite:	
  4264  06C5                     ;incstack = 0
  4265                           	opt	stack 6
  4266                           ; Regs used in _digitalWrite: [wreg-fsr0h+status,2+status,0]
  4267                           ;digitalWrite@pin stored from wreg
  4268                           	movwf	(digitalWrite@pin)
  4269  06C5  00F3               	line	171
  4270                           	
  4271                           l1939:	
  4272  06C6                     ;source.c: 169: void digitalWrite(char pin, char value);source.c: 170: {;source.c: 171: 
                                     switch(pin)
  4273                           	goto	l1997
  4274  06C6  2F92               	line	173
  4275                           ;source.c: 172:     {;source.c: 173:         case 0:
  4276                           	
  4277                           l183:	
  4278  06C7                     	line	174
  4279                           	
  4280                           l1941:	
  4281  06C7                     ;source.c: 174:             PORTCbits.RC7 = value;
  4282                           	rrf	(digitalWrite@value),w
  4283  06C7  0C70               	bcf	status, 5	;RP0=0, select bank0
  4284  06C8  1283               	bcf	status, 6	;RP1=0, select bank0
  4285  06C9  1303               	skipc
  4286  06CA  1C03               	bcf	(7),7	;volatile
  4287  06CB  1387               	skipnc
  4288  06CC  1803               	bsf	(7),7	;volatile
  4289  06CD  1787               	line	175
  4290                           ;source.c: 175:             break;
  4291                           	goto	l209
  4292  06CE  2FE7               	line	176
  4293                           ;source.c: 176:         case 1:
  4294                           	
  4295                           l185:	
  4296  06CF                     	line	177
  4297                           	
  4298                           l1943:	
  4299  06CF                     ;source.c: 177:             PORTCbits.RC6 = value;
  4300                           	rrf	(digitalWrite@value),w
  4301  06CF  0C70               	bcf	status, 5	;RP0=0, select bank0
  4302  06D0  1283               	bcf	status, 6	;RP1=0, select bank0
  4303  06D1  1303               	skipc
  4304  06D2  1C03               	bcf	(7),6	;volatile
  4305  06D3  1307               	skipnc
  4306  06D4  1803               	bsf	(7),6	;volatile
  4307  06D5  1707               	line	178
  4308                           ;source.c: 178:             break;
  4309                           	goto	l209
  4310  06D6  2FE7               	line	179
  4311                           ;source.c: 179:         case 2:
  4312                           	
  4313                           l186:	
  4314  06D7                     	line	180
  4315                           	
  4316                           l1945:	
  4317  06D7                     ;source.c: 180:             PORTCbits.RC5 = value;
  4318                           	rrf	(digitalWrite@value),w
  4319  06D7  0C70               	bcf	status, 5	;RP0=0, select bank0
  4320  06D8  1283               	bcf	status, 6	;RP1=0, select bank0
  4321  06D9  1303               	skipc
  4322  06DA  1C03               	bcf	(7),5	;volatile
  4323  06DB  1287               	skipnc
  4324  06DC  1803               	bsf	(7),5	;volatile
  4325  06DD  1687               	line	181
  4326                           ;source.c: 181:             break;
  4327                           	goto	l209
  4328  06DE  2FE7               	line	182
  4329                           ;source.c: 182:         case 3:
  4330                           	
  4331                           l187:	
  4332  06DF                     	line	183
  4333                           	
  4334                           l1947:	
  4335  06DF                     ;source.c: 183:             PORTCbits.RC4 = value;
  4336                           	rrf	(digitalWrite@value),w
  4337  06DF  0C70               	bcf	status, 5	;RP0=0, select bank0
  4338  06E0  1283               	bcf	status, 6	;RP1=0, select bank0
  4339  06E1  1303               	skipc
  4340  06E2  1C03               	bcf	(7),4	;volatile
  4341  06E3  1207               	skipnc
  4342  06E4  1803               	bsf	(7),4	;volatile
  4343  06E5  1607               	line	184
  4344                           ;source.c: 184:             break;
  4345                           	goto	l209
  4346  06E6  2FE7               	line	185
  4347                           ;source.c: 185:         case 4:
  4348                           	
  4349                           l188:	
  4350  06E7                     	line	186
  4351                           	
  4352                           l1949:	
  4353  06E7                     ;source.c: 186:             PORTCbits.RC3 = value;
  4354                           	rrf	(digitalWrite@value),w
  4355  06E7  0C70               	bcf	status, 5	;RP0=0, select bank0
  4356  06E8  1283               	bcf	status, 6	;RP1=0, select bank0
  4357  06E9  1303               	skipc
  4358  06EA  1C03               	bcf	(7),3	;volatile
  4359  06EB  1187               	skipnc
  4360  06EC  1803               	bsf	(7),3	;volatile
  4361  06ED  1587               	line	187
  4362                           ;source.c: 187:             break;
  4363                           	goto	l209
  4364  06EE  2FE7               	line	188
  4365                           ;source.c: 188:         case 5:
  4366                           	
  4367                           l189:	
  4368  06EF                     	line	189
  4369                           	
  4370                           l1951:	
  4371  06EF                     ;source.c: 189:             CCP1CON = 0x00;
  4372                           	bcf	status, 5	;RP0=0, select bank0
  4373  06EF  1283               	bcf	status, 6	;RP1=0, select bank0
  4374  06F0  1303               	clrf	(23)	;volatile
  4375  06F1  0197               	line	190
  4376                           	
  4377                           l1953:	
  4378  06F2                     ;source.c: 190:             PORTCbits.RC2 = value;
  4379                           	rrf	(digitalWrite@value),w
  4380  06F2  0C70               	skipc
  4381  06F3  1C03               	bcf	(7),2	;volatile
  4382  06F4  1107               	skipnc
  4383  06F5  1803               	bsf	(7),2	;volatile
  4384  06F6  1507               	line	191
  4385                           ;source.c: 191:             break;
  4386                           	goto	l209
  4387  06F7  2FE7               	line	192
  4388                           ;source.c: 192:         case 6:
  4389                           	
  4390                           l190:	
  4391  06F8                     	line	193
  4392                           	
  4393                           l1955:	
  4394  06F8                     ;source.c: 193:             CCP2CON = 0x00;
  4395                           	bcf	status, 5	;RP0=0, select bank0
  4396  06F8  1283               	bcf	status, 6	;RP1=0, select bank0
  4397  06F9  1303               	clrf	(29)	;volatile
  4398  06FA  019D               	line	194
  4399                           	
  4400                           l1957:	
  4401  06FB                     ;source.c: 194:             PORTCbits.RC1 = value;
  4402                           	rrf	(digitalWrite@value),w
  4403  06FB  0C70               	skipc
  4404  06FC  1C03               	bcf	(7),1	;volatile
  4405  06FD  1087               	skipnc
  4406  06FE  1803               	bsf	(7),1	;volatile
  4407  06FF  1487               	line	195
  4408                           ;source.c: 195:             break;
  4409                           	goto	l209
  4410  0700  2FE7               	line	196
  4411                           ;source.c: 196:         case 7:
  4412                           	
  4413                           l191:	
  4414  0701                     	line	197
  4415                           	
  4416                           l1959:	
  4417  0701                     ;source.c: 197:             PORTCbits.RC0 = value;
  4418                           	rrf	(digitalWrite@value),w
  4419  0701  0C70               	bcf	status, 5	;RP0=0, select bank0
  4420  0702  1283               	bcf	status, 6	;RP1=0, select bank0
  4421  0703  1303               	skipc
  4422  0704  1C03               	bcf	(7),0	;volatile
  4423  0705  1007               	skipnc
  4424  0706  1803               	bsf	(7),0	;volatile
  4425  0707  1407               	line	198
  4426                           ;source.c: 198:             break;
  4427                           	goto	l209
  4428  0708  2FE7               	line	199
  4429                           ;source.c: 199:         case 8:
  4430                           	
  4431                           l192:	
  4432  0709                     	line	200
  4433                           	
  4434                           l1961:	
  4435  0709                     ;source.c: 200:             PORTBbits.RB0 = value;
  4436                           	rrf	(digitalWrite@value),w
  4437  0709  0C70               	bcf	status, 5	;RP0=0, select bank0
  4438  070A  1283               	bcf	status, 6	;RP1=0, select bank0
  4439  070B  1303               	skipc
  4440  070C  1C03               	bcf	(6),0	;volatile
  4441  070D  1006               	skipnc
  4442  070E  1803               	bsf	(6),0	;volatile
  4443  070F  1406               	line	201
  4444                           ;source.c: 201:             break;
  4445                           	goto	l209
  4446  0710  2FE7               	line	202
  4447                           ;source.c: 202:         case 9:
  4448                           	
  4449                           l193:	
  4450  0711                     	line	203
  4451                           	
  4452                           l1963:	
  4453  0711                     ;source.c: 203:             PORTBbits.RB1 = value;
  4454                           	rrf	(digitalWrite@value),w
  4455  0711  0C70               	bcf	status, 5	;RP0=0, select bank0
  4456  0712  1283               	bcf	status, 6	;RP1=0, select bank0
  4457  0713  1303               	skipc
  4458  0714  1C03               	bcf	(6),1	;volatile
  4459  0715  1086               	skipnc
  4460  0716  1803               	bsf	(6),1	;volatile
  4461  0717  1486               	line	204
  4462                           ;source.c: 204:             break;
  4463                           	goto	l209
  4464  0718  2FE7               	line	205
  4465                           ;source.c: 205:         case 10:
  4466                           	
  4467                           l194:	
  4468  0719                     	line	206
  4469                           	
  4470                           l1965:	
  4471  0719                     ;source.c: 206:             PORTBbits.RB2 = value;
  4472                           	rrf	(digitalWrite@value),w
  4473  0719  0C70               	bcf	status, 5	;RP0=0, select bank0
  4474  071A  1283               	bcf	status, 6	;RP1=0, select bank0
  4475  071B  1303               	skipc
  4476  071C  1C03               	bcf	(6),2	;volatile
  4477  071D  1106               	skipnc
  4478  071E  1803               	bsf	(6),2	;volatile
  4479  071F  1506               	line	207
  4480                           ;source.c: 207:             break;
  4481                           	goto	l209
  4482  0720  2FE7               	line	208
  4483                           ;source.c: 208:         case 11:
  4484                           	
  4485                           l195:	
  4486  0721                     	line	209
  4487                           	
  4488                           l1967:	
  4489  0721                     ;source.c: 209:             PORTBbits.RB3 = value;
  4490                           	rrf	(digitalWrite@value),w
  4491  0721  0C70               	bcf	status, 5	;RP0=0, select bank0
  4492  0722  1283               	bcf	status, 6	;RP1=0, select bank0
  4493  0723  1303               	skipc
  4494  0724  1C03               	bcf	(6),3	;volatile
  4495  0725  1186               	skipnc
  4496  0726  1803               	bsf	(6),3	;volatile
  4497  0727  1586               	line	210
  4498                           ;source.c: 210:             break;
  4499                           	goto	l209
  4500  0728  2FE7               	line	211
  4501                           ;source.c: 211:         case 12:
  4502                           	
  4503                           l196:	
  4504  0729                     	line	212
  4505                           	
  4506                           l1969:	
  4507  0729                     ;source.c: 212:             PORTBbits.RB4 = value;
  4508                           	rrf	(digitalWrite@value),w
  4509  0729  0C70               	bcf	status, 5	;RP0=0, select bank0
  4510  072A  1283               	bcf	status, 6	;RP1=0, select bank0
  4511  072B  1303               	skipc
  4512  072C  1C03               	bcf	(6),4	;volatile
  4513  072D  1206               	skipnc
  4514  072E  1803               	bsf	(6),4	;volatile
  4515  072F  1606               	line	213
  4516                           ;source.c: 213:             break;
  4517                           	goto	l209
  4518  0730  2FE7               	line	214
  4519                           ;source.c: 214:         case 13:
  4520                           	
  4521                           l197:	
  4522  0731                     	line	215
  4523                           	
  4524                           l1971:	
  4525  0731                     ;source.c: 215:             PORTBbits.RB5 = value;
  4526                           	rrf	(digitalWrite@value),w
  4527  0731  0C70               	bcf	status, 5	;RP0=0, select bank0
  4528  0732  1283               	bcf	status, 6	;RP1=0, select bank0
  4529  0733  1303               	skipc
  4530  0734  1C03               	bcf	(6),5	;volatile
  4531  0735  1286               	skipnc
  4532  0736  1803               	bsf	(6),5	;volatile
  4533  0737  1686               	line	216
  4534                           ;source.c: 216:             break;
  4535                           	goto	l209
  4536  0738  2FE7               	line	217
  4537                           ;source.c: 217:         case 14:
  4538                           	
  4539                           l198:	
  4540  0739                     	line	218
  4541                           	
  4542                           l1973:	
  4543  0739                     ;source.c: 218:             PORTBbits.RB6 = value;
  4544                           	rrf	(digitalWrite@value),w
  4545  0739  0C70               	bcf	status, 5	;RP0=0, select bank0
  4546  073A  1283               	bcf	status, 6	;RP1=0, select bank0
  4547  073B  1303               	skipc
  4548  073C  1C03               	bcf	(6),6	;volatile
  4549  073D  1306               	skipnc
  4550  073E  1803               	bsf	(6),6	;volatile
  4551  073F  1706               	line	219
  4552                           ;source.c: 219:             break;
  4553                           	goto	l209
  4554  0740  2FE7               	line	220
  4555                           ;source.c: 220:         case 15:
  4556                           	
  4557                           l199:	
  4558  0741                     	line	221
  4559                           	
  4560                           l1975:	
  4561  0741                     ;source.c: 221:             PORTBbits.RB7 = value;
  4562                           	rrf	(digitalWrite@value),w
  4563  0741  0C70               	bcf	status, 5	;RP0=0, select bank0
  4564  0742  1283               	bcf	status, 6	;RP1=0, select bank0
  4565  0743  1303               	skipc
  4566  0744  1C03               	bcf	(6),7	;volatile
  4567  0745  1386               	skipnc
  4568  0746  1803               	bsf	(6),7	;volatile
  4569  0747  1786               	line	222
  4570                           ;source.c: 222:             break;
  4571                           	goto	l209
  4572  0748  2FE7               	line	223
  4573                           ;source.c: 223:         case 16:
  4574                           	
  4575                           l200:	
  4576  0749                     	line	224
  4577                           	
  4578                           l1977:	
  4579  0749                     ;source.c: 224:             PORTDbits.RD0 = value;
  4580                           	rrf	(digitalWrite@value),w
  4581  0749  0C70               	bcf	status, 5	;RP0=0, select bank0
  4582  074A  1283               	bcf	status, 6	;RP1=0, select bank0
  4583  074B  1303               	skipc
  4584  074C  1C03               	bcf	(8),0	;volatile
  4585  074D  1008               	skipnc
  4586  074E  1803               	bsf	(8),0	;volatile
  4587  074F  1408               	line	225
  4588                           ;source.c: 225:             break;
  4589                           	goto	l209
  4590  0750  2FE7               	line	226
  4591                           ;source.c: 226:         case 17:
  4592                           	
  4593                           l201:	
  4594  0751                     	line	227
  4595                           	
  4596                           l1979:	
  4597  0751                     ;source.c: 227:             PORTDbits.RD1 = value;
  4598                           	rrf	(digitalWrite@value),w
  4599  0751  0C70               	bcf	status, 5	;RP0=0, select bank0
  4600  0752  1283               	bcf	status, 6	;RP1=0, select bank0
  4601  0753  1303               	skipc
  4602  0754  1C03               	bcf	(8),1	;volatile
  4603  0755  1088               	skipnc
  4604  0756  1803               	bsf	(8),1	;volatile
  4605  0757  1488               	line	228
  4606                           ;source.c: 228:             break;
  4607                           	goto	l209
  4608  0758  2FE7               	line	229
  4609                           ;source.c: 229:         case 18:
  4610                           	
  4611                           l202:	
  4612  0759                     	line	230
  4613                           	
  4614                           l1981:	
  4615  0759                     ;source.c: 230:             PORTDbits.RD2 = value;
  4616                           	rrf	(digitalWrite@value),w
  4617  0759  0C70               	bcf	status, 5	;RP0=0, select bank0
  4618  075A  1283               	bcf	status, 6	;RP1=0, select bank0
  4619  075B  1303               	skipc
  4620  075C  1C03               	bcf	(8),2	;volatile
  4621  075D  1108               	skipnc
  4622  075E  1803               	bsf	(8),2	;volatile
  4623  075F  1508               	line	231
  4624                           ;source.c: 231:             break;
  4625                           	goto	l209
  4626  0760  2FE7               	line	232
  4627                           ;source.c: 232:         case 19:
  4628                           	
  4629                           l203:	
  4630  0761                     	line	233
  4631                           	
  4632                           l1983:	
  4633  0761                     ;source.c: 233:             PORTDbits.RD3 = value;
  4634                           	rrf	(digitalWrite@value),w
  4635  0761  0C70               	bcf	status, 5	;RP0=0, select bank0
  4636  0762  1283               	bcf	status, 6	;RP1=0, select bank0
  4637  0763  1303               	skipc
  4638  0764  1C03               	bcf	(8),3	;volatile
  4639  0765  1188               	skipnc
  4640  0766  1803               	bsf	(8),3	;volatile
  4641  0767  1588               	line	234
  4642                           ;source.c: 234:             break;
  4643                           	goto	l209
  4644  0768  2FE7               	line	235
  4645                           ;source.c: 235:         case 20:
  4646                           	
  4647                           l204:	
  4648  0769                     	line	236
  4649                           	
  4650                           l1985:	
  4651  0769                     ;source.c: 236:             PORTDbits.RD4 = value;
  4652                           	rrf	(digitalWrite@value),w
  4653  0769  0C70               	bcf	status, 5	;RP0=0, select bank0
  4654  076A  1283               	bcf	status, 6	;RP1=0, select bank0
  4655  076B  1303               	skipc
  4656  076C  1C03               	bcf	(8),4	;volatile
  4657  076D  1208               	skipnc
  4658  076E  1803               	bsf	(8),4	;volatile
  4659  076F  1608               	line	237
  4660                           ;source.c: 237:             break;
  4661                           	goto	l209
  4662  0770  2FE7               	line	238
  4663                           ;source.c: 238:         case 21:
  4664                           	
  4665                           l205:	
  4666  0771                     	line	239
  4667                           	
  4668                           l1987:	
  4669  0771                     ;source.c: 239:             PORTDbits.RD5 = value;
  4670                           	rrf	(digitalWrite@value),w
  4671  0771  0C70               	bcf	status, 5	;RP0=0, select bank0
  4672  0772  1283               	bcf	status, 6	;RP1=0, select bank0
  4673  0773  1303               	skipc
  4674  0774  1C03               	bcf	(8),5	;volatile
  4675  0775  1288               	skipnc
  4676  0776  1803               	bsf	(8),5	;volatile
  4677  0777  1688               	line	240
  4678                           ;source.c: 240:             break;
  4679                           	goto	l209
  4680  0778  2FE7               	line	241
  4681                           ;source.c: 241:         case 22:
  4682                           	
  4683                           l206:	
  4684  0779                     	line	242
  4685                           	
  4686                           l1989:	
  4687  0779                     ;source.c: 242:             PORTDbits.RD6 = value;
  4688                           	rrf	(digitalWrite@value),w
  4689  0779  0C70               	bcf	status, 5	;RP0=0, select bank0
  4690  077A  1283               	bcf	status, 6	;RP1=0, select bank0
  4691  077B  1303               	skipc
  4692  077C  1C03               	bcf	(8),6	;volatile
  4693  077D  1308               	skipnc
  4694  077E  1803               	bsf	(8),6	;volatile
  4695  077F  1708               	line	243
  4696                           ;source.c: 243:             break;
  4697                           	goto	l209
  4698  0780  2FE7               	line	244
  4699                           ;source.c: 244:         case 23:
  4700                           	
  4701                           l207:	
  4702  0781                     	line	245
  4703                           	
  4704                           l1991:	
  4705  0781                     ;source.c: 245:             PORTDbits.RD7 = value;
  4706                           	rrf	(digitalWrite@value),w
  4707  0781  0C70               	bcf	status, 5	;RP0=0, select bank0
  4708  0782  1283               	bcf	status, 6	;RP1=0, select bank0
  4709  0783  1303               	skipc
  4710  0784  1C03               	bcf	(8),7	;volatile
  4711  0785  1388               	skipnc
  4712  0786  1803               	bsf	(8),7	;volatile
  4713  0787  1788               	line	246
  4714                           ;source.c: 246:             break;
  4715                           	goto	l209
  4716  0788  2FE7               	line	247
  4717                           ;source.c: 247:         case 24:
  4718                           	
  4719                           l208:	
  4720  0789                     	line	248
  4721                           	
  4722                           l1993:	
  4723  0789                     ;source.c: 248:             PORTAbits.RA4 = value;
  4724                           	rrf	(digitalWrite@value),w
  4725  0789  0C70               	bcf	status, 5	;RP0=0, select bank0
  4726  078A  1283               	bcf	status, 6	;RP1=0, select bank0
  4727  078B  1303               	skipc
  4728  078C  1C03               	bcf	(5),4	;volatile
  4729  078D  1205               	skipnc
  4730  078E  1803               	bsf	(5),4	;volatile
  4731  078F  1605               	line	249
  4732                           ;source.c: 249:             break;
  4733                           	goto	l209
  4734  0790  2FE7               	line	258
  4735                           	
  4736                           l1995:	
  4737  0791                     ;source.c: 258:     }
  4738                           	goto	l209
  4739  0791  2FE7               	
  4740                           l182:	
  4741  0792                     	
  4742                           l1997:	
  4743  0792                     	movf	(digitalWrite@pin),w
  4744  0792  0873               	movwf	(??_digitalWrite+0)+0
  4745  0793  00F1               	clrf	(??_digitalWrite+0)+0+1
  4746  0794  01F2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4747                           ; Switch size 1, requested type "space"
  4748                           ; Number of cases is 1, Range of values is 0 to 0
  4749                           ; switch strategies available:
  4750                           ; Name         Instructions Cycles
  4751                           ; simple_byte            4     3 (average)
  4752                           ; direct_byte           11     8 (fixed)
  4753                           ; jumptable            260     6 (fixed)
  4754                           ;	Chosen strategy is simple_byte
  4755                           
  4756                           	movf 1+(??_digitalWrite+0)+0,w
  4757  0795  0872               	opt asmopt_push
  4758                           	opt asmopt_off
  4759                           	xorlw	0^0	; case 0
  4760  0796  3A00               	skipnz
  4761  0797  1903               	goto	l2321
  4762  0798  2F9A               	goto	l209
  4763  0799  2FE7               	opt asmopt_pop
  4764                           	
  4765                           l2321:	
  4766  079A                     ; Switch size 1, requested type "space"
  4767                           ; Number of cases is 25, Range of values is 0 to 24
  4768                           ; switch strategies available:
  4769                           ; Name         Instructions Cycles
  4770                           ; simple_byte           76    39 (average)
  4771                           ; direct_byte           83     8 (fixed)
  4772                           ; jumptable            260     6 (fixed)
  4773                           ;	Chosen strategy is simple_byte
  4774                           
  4775                           	movf 0+(??_digitalWrite+0)+0,w
  4776  079A  0871               	opt asmopt_push
  4777                           	opt asmopt_off
  4778                           	xorlw	0^0	; case 0
  4779  079B  3A00               	skipnz
  4780  079C  1903               	goto	l1941
  4781  079D  2EC7               	xorlw	1^0	; case 1
  4782  079E  3A01               	skipnz
  4783  079F  1903               	goto	l1943
  4784  07A0  2ECF               	xorlw	2^1	; case 2
  4785  07A1  3A03               	skipnz
  4786  07A2  1903               	goto	l1945
  4787  07A3  2ED7               	xorlw	3^2	; case 3
  4788  07A4  3A01               	skipnz
  4789  07A5  1903               	goto	l1947
  4790  07A6  2EDF               	xorlw	4^3	; case 4
  4791  07A7  3A07               	skipnz
  4792  07A8  1903               	goto	l1949
  4793  07A9  2EE7               	xorlw	5^4	; case 5
  4794  07AA  3A01               	skipnz
  4795  07AB  1903               	goto	l1951
  4796  07AC  2EEF               	xorlw	6^5	; case 6
  4797  07AD  3A03               	skipnz
  4798  07AE  1903               	goto	l1955
  4799  07AF  2EF8               	xorlw	7^6	; case 7
  4800  07B0  3A01               	skipnz
  4801  07B1  1903               	goto	l1959
  4802  07B2  2F01               	xorlw	8^7	; case 8
  4803  07B3  3A0F               	skipnz
  4804  07B4  1903               	goto	l1961
  4805  07B5  2F09               	xorlw	9^8	; case 9
  4806  07B6  3A01               	skipnz
  4807  07B7  1903               	goto	l1963
  4808  07B8  2F11               	xorlw	10^9	; case 10
  4809  07B9  3A03               	skipnz
  4810  07BA  1903               	goto	l1965
  4811  07BB  2F19               	xorlw	11^10	; case 11
  4812  07BC  3A01               	skipnz
  4813  07BD  1903               	goto	l1967
  4814  07BE  2F21               	xorlw	12^11	; case 12
  4815  07BF  3A07               	skipnz
  4816  07C0  1903               	goto	l1969
  4817  07C1  2F29               	xorlw	13^12	; case 13
  4818  07C2  3A01               	skipnz
  4819  07C3  1903               	goto	l1971
  4820  07C4  2F31               	xorlw	14^13	; case 14
  4821  07C5  3A03               	skipnz
  4822  07C6  1903               	goto	l1973
  4823  07C7  2F39               	xorlw	15^14	; case 15
  4824  07C8  3A01               	skipnz
  4825  07C9  1903               	goto	l1975
  4826  07CA  2F41               	xorlw	16^15	; case 16
  4827  07CB  3A1F               	skipnz
  4828  07CC  1903               	goto	l1977
  4829  07CD  2F49               	xorlw	17^16	; case 17
  4830  07CE  3A01               	skipnz
  4831  07CF  1903               	goto	l1979
  4832  07D0  2F51               	xorlw	18^17	; case 18
  4833  07D1  3A03               	skipnz
  4834  07D2  1903               	goto	l1981
  4835  07D3  2F59               	xorlw	19^18	; case 19
  4836  07D4  3A01               	skipnz
  4837  07D5  1903               	goto	l1983
  4838  07D6  2F61               	xorlw	20^19	; case 20
  4839  07D7  3A07               	skipnz
  4840  07D8  1903               	goto	l1985
  4841  07D9  2F69               	xorlw	21^20	; case 21
  4842  07DA  3A01               	skipnz
  4843  07DB  1903               	goto	l1987
  4844  07DC  2F71               	xorlw	22^21	; case 22
  4845  07DD  3A03               	skipnz
  4846  07DE  1903               	goto	l1989
  4847  07DF  2F79               	xorlw	23^22	; case 23
  4848  07E0  3A01               	skipnz
  4849  07E1  1903               	goto	l1991
  4850  07E2  2F81               	xorlw	24^23	; case 24
  4851  07E3  3A0F               	skipnz
  4852  07E4  1903               	goto	l1993
  4853  07E5  2F89               	goto	l209
  4854  07E6  2FE7               	opt asmopt_pop
  4855                           
  4856                           	
  4857                           l184:	
  4858  07E7                     	line	259
  4859                           	
  4860                           l209:	
  4861  07E7                     	return
  4862  07E7  0008               	opt stack 0
  4863                           GLOBAL	__end_of_digitalWrite
  4864                           	__end_of_digitalWrite:
  4865  07E8                     	signat	_digitalWrite,8313
  4866                           	global	_analogWrite
  4867                           
  4868 ;; *************** function _analogWrite *****************
  4869 ;; Defined at:
  4870 ;;		line 410 in file "source.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  pin             1    wreg     unsigned char 
  4873 ;;  value           2    0[COMMON] unsigned int 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  pin             1    5[COMMON] unsigned char 
  4876 ;;  MSB             1    4[COMMON] unsigned char 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      unsigned char 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4886 ;;      Params:         2       0       0       0       0
  4887 ;;      Locals:         2       0       0       0       0
  4888 ;;      Temps:          2       0       0       0       0
  4889 ;;      Totals:         6       0       0       0       0
  4890 ;;Total ram usage:        6 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_Adelante
  4896 ;;		_Atras
  4897 ;;		_Izquierda
  4898 ;;		_Derecha
  4899 ;;		_Detener
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4903                           	line	410
  4904                           global __ptext17
  4905                           __ptext17:	;psect for function _analogWrite
  4906  036C                     psect	text17
  4907                           	file	"source.c"
  4908                           	line	410
  4909                           	global	__size_of_analogWrite
  4910                           	__size_of_analogWrite	equ	__end_of_analogWrite-_analogWrite
  4911  004C                     	
  4912                           _analogWrite:	
  4913  036C                     ;incstack = 0
  4914                           	opt	stack 5
  4915                           ; Regs used in _analogWrite: [wreg-fsr0h+status,2+status,0]
  4916                           ;analogWrite@pin stored from wreg
  4917                           	movwf	(analogWrite@pin)
  4918  036C  00F5               	line	412
  4919                           	
  4920                           l2003:	
  4921  036D                     ;source.c: 410: uint8_t analogWrite(char pin, unsigned int value);source.c: 411: {;sourc
                                 e.c: 412:     char MSB = 0;
  4922                           	clrf	(analogWrite@MSB)
  4923  036D  01F4               	line	413
  4924                           ;source.c: 413:     switch(pin)
  4925                           	goto	l2019
  4926  036E  2BA7               	line	415
  4927                           ;source.c: 414:     {;source.c: 415:         case 22:
  4928                           	
  4929                           l268:	
  4930  036F                     	line	417
  4931                           	
  4932                           l2005:	
  4933  036F                     ;source.c: 417:             CCPR2L = value >> 2;
  4934                           	movf	(analogWrite@value+1),w
  4935  036F  0871               	movwf	(??_analogWrite+0)+0+1
  4936  0370  00F3               	movf	(analogWrite@value),w
  4937  0371  0870               	movwf	(??_analogWrite+0)+0
  4938  0372  00F2               	clrc
  4939  0373  1003               	rrf	(??_analogWrite+0)+1,f
  4940  0374  0CF3               	rrf	(??_analogWrite+0)+0,f
  4941  0375  0CF2               	clrc
  4942  0376  1003               	rrf	(??_analogWrite+0)+1,f
  4943  0377  0CF3               	rrf	(??_analogWrite+0)+0,f
  4944  0378  0CF2               	movf	0+(??_analogWrite+0)+0,w
  4945  0379  0872               	bcf	status, 5	;RP0=0, select bank0
  4946  037A  1283               	bcf	status, 6	;RP1=0, select bank0
  4947  037B  1303               	movwf	(27)	;volatile
  4948  037C  009B               	line	418
  4949                           	
  4950                           l2007:	
  4951  037D                     ;source.c: 418:             CCP2X = value & 2;
  4952                           	bcf	(237/8),(237)&7	;volatile
  4953  037D  129D               	line	419
  4954                           	
  4955                           l2009:	
  4956  037E                     ;source.c: 419:             CCP2Y = value & 1;
  4957                           	btfsc	(analogWrite@value),0
  4958  037E  1870               	goto	u501
  4959  037F  2B81               	goto	u500
  4960  0380  2B85               	
  4961                           u501:
  4962  0381                     	bcf	status, 5	;RP0=0, select bank0
  4963  0381  1283               	bcf	status, 6	;RP1=0, select bank0
  4964  0382  1303               	bsf	(236/8),(236)&7	;volatile
  4965  0383  161D               	goto	u514
  4966  0384  2B88               u500:
  4967  0385                     	bcf	status, 5	;RP0=0, select bank0
  4968  0385  1283               	bcf	status, 6	;RP1=0, select bank0
  4969  0386  1303               	bcf	(236/8),(236)&7	;volatile
  4970  0387  121D               u514:
  4971  0388                     	line	420
  4972                           ;source.c: 420:             break;
  4973                           	goto	l271
  4974  0388  2BB7               	line	421
  4975                           ;source.c: 421:         case 23:
  4976                           	
  4977                           l270:	
  4978  0389                     	line	422
  4979                           ;source.c: 422:             TRISCbits.TRISC2 = 0;
  4980                           	bsf	status, 5	;RP0=1, select bank1
  4981  0389  1683               	bcf	status, 6	;RP1=0, select bank1
  4982  038A  1303               	bcf	(135)^080h,2	;volatile
  4983  038B  1107               	line	423
  4984                           	
  4985                           l2011:	
  4986  038C                     ;source.c: 423:             CCPR1L = value >> 2;
  4987                           	movf	(analogWrite@value+1),w
  4988  038C  0871               	movwf	(??_analogWrite+0)+0+1
  4989  038D  00F3               	movf	(analogWrite@value),w
  4990  038E  0870               	movwf	(??_analogWrite+0)+0
  4991  038F  00F2               	clrc
  4992  0390  1003               	rrf	(??_analogWrite+0)+1,f
  4993  0391  0CF3               	rrf	(??_analogWrite+0)+0,f
  4994  0392  0CF2               	clrc
  4995  0393  1003               	rrf	(??_analogWrite+0)+1,f
  4996  0394  0CF3               	rrf	(??_analogWrite+0)+0,f
  4997  0395  0CF2               	movf	0+(??_analogWrite+0)+0,w
  4998  0396  0872               	bcf	status, 5	;RP0=0, select bank0
  4999  0397  1283               	bcf	status, 6	;RP1=0, select bank0
  5000  0398  1303               	movwf	(21)	;volatile
  5001  0399  0095               	line	424
  5002                           	
  5003                           l2013:	
  5004  039A                     ;source.c: 424:             CCP1X = value & 2;
  5005                           	bcf	(189/8),(189)&7	;volatile
  5006  039A  1297               	line	425
  5007                           	
  5008                           l2015:	
  5009  039B                     ;source.c: 425:             CCP1Y = value & 1;
  5010                           	btfsc	(analogWrite@value),0
  5011  039B  1870               	goto	u521
  5012  039C  2B9E               	goto	u520
  5013  039D  2BA2               	
  5014                           u521:
  5015  039E                     	bcf	status, 5	;RP0=0, select bank0
  5016  039E  1283               	bcf	status, 6	;RP1=0, select bank0
  5017  039F  1303               	bsf	(188/8),(188)&7	;volatile
  5018  03A0  1617               	goto	u534
  5019  03A1  2BA5               u520:
  5020  03A2                     	bcf	status, 5	;RP0=0, select bank0
  5021  03A2  1283               	bcf	status, 6	;RP1=0, select bank0
  5022  03A3  1303               	bcf	(188/8),(188)&7	;volatile
  5023  03A4  1217               u534:
  5024  03A5                     	line	426
  5025                           ;source.c: 426:             break;
  5026                           	goto	l271
  5027  03A5  2BB7               	line	427
  5028                           	
  5029                           l2017:	
  5030  03A6                     ;source.c: 427:     }
  5031                           	goto	l271
  5032  03A6  2BB7               	
  5033                           l267:	
  5034  03A7                     	
  5035                           l2019:	
  5036  03A7                     	movf	(analogWrite@pin),w
  5037  03A7  0875               	movwf	(??_analogWrite+0)+0
  5038  03A8  00F2               	clrf	(??_analogWrite+0)+0+1
  5039  03A9  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5040                           ; Switch size 1, requested type "space"
  5041                           ; Number of cases is 1, Range of values is 0 to 0
  5042                           ; switch strategies available:
  5043                           ; Name         Instructions Cycles
  5044                           ; simple_byte            4     3 (average)
  5045                           ; direct_byte           11     8 (fixed)
  5046                           ; jumptable            260     6 (fixed)
  5047                           ;	Chosen strategy is simple_byte
  5048                           
  5049                           	movf 1+(??_analogWrite+0)+0,w
  5050  03AA  0873               	opt asmopt_push
  5051                           	opt asmopt_off
  5052                           	xorlw	0^0	; case 0
  5053  03AB  3A00               	skipnz
  5054  03AC  1903               	goto	l2323
  5055  03AD  2BAF               	goto	l271
  5056  03AE  2BB7               	opt asmopt_pop
  5057                           	
  5058                           l2323:	
  5059  03AF                     ; Switch size 1, requested type "space"
  5060                           ; Number of cases is 2, Range of values is 22 to 23
  5061                           ; switch strategies available:
  5062                           ; Name         Instructions Cycles
  5063                           ; simple_byte            7     4 (average)
  5064                           ; direct_byte           17    11 (fixed)
  5065                           ; jumptable            263     9 (fixed)
  5066                           ;	Chosen strategy is simple_byte
  5067                           
  5068                           	movf 0+(??_analogWrite+0)+0,w
  5069  03AF  0872               	opt asmopt_push
  5070                           	opt asmopt_off
  5071                           	xorlw	22^0	; case 22
  5072  03B0  3A16               	skipnz
  5073  03B1  1903               	goto	l2005
  5074  03B2  2B6F               	xorlw	23^22	; case 23
  5075  03B3  3A01               	skipnz
  5076  03B4  1903               	goto	l270
  5077  03B5  2B89               	goto	l271
  5078  03B6  2BB7               	opt asmopt_pop
  5079                           
  5080                           	
  5081                           l269:	
  5082  03B7                     	line	429
  5083                           ;source.c: 428:     return 0;;	Return value of _analogWrite is never used
  5084                           	
  5085                           l271:	
  5086  03B7                     	return
  5087  03B7  0008               	opt stack 0
  5088                           GLOBAL	__end_of_analogWrite
  5089                           	__end_of_analogWrite:
  5090  03B8                     	signat	_analogWrite,8313
  5091                           	global	_Initialization
  5092                           
  5093 ;; *************** function _Initialization *****************
  5094 ;; Defined at:
  5095 ;;		line 18 in file "source.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;		None
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;		None
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      void 
  5102 ;; Registers used:
  5103 ;;		wreg, status,2, status,0, pclath, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5109 ;;      Params:         0       0       0       0       0
  5110 ;;      Locals:         0       0       0       0       0
  5111 ;;      Temps:          0       0       0       0       0
  5112 ;;      Totals:         0       0       0       0       0
  5113 ;;Total ram usage:        0 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:    1
  5116 ;; This function calls:
  5117 ;;		_CCP1Configuration
  5118 ;;		_CCP2Configuration
  5119 ;; This function is called by:
  5120 ;;		_main
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5124                           	line	18
  5125                           global __ptext18
  5126                           __ptext18:	;psect for function _Initialization
  5127  0161                     psect	text18
  5128                           	file	"source.c"
  5129                           	line	18
  5130                           	global	__size_of_Initialization
  5131                           	__size_of_Initialization	equ	__end_of_Initialization-_Initialization
  5132  0026                     	
  5133                           _Initialization:	
  5134  0161                     ;incstack = 0
  5135                           	opt	stack 6
  5136                           ; Regs used in _Initialization: [wreg+status,2+status,0+pclath+cstack]
  5137                           	line	21
  5138                           	
  5139                           l1367:	
  5140  0161                     ;source.c: 21:     ADCON0 = 0x81;
  5141                           	movlw	low(081h)
  5142  0161  3081               	bcf	status, 5	;RP0=0, select bank0
  5143  0162  1283               	bcf	status, 6	;RP1=0, select bank0
  5144  0163  1303               	movwf	(31)	;volatile
  5145  0164  009F               	line	22
  5146                           ;source.c: 22:     ADCON1 = 0xC2;
  5147                           	movlw	low(0C2h)
  5148  0165  30C2               	bsf	status, 5	;RP0=1, select bank1
  5149  0166  1683               	bcf	status, 6	;RP1=0, select bank1
  5150  0167  1303               	movwf	(159)^080h	;volatile
  5151  0168  009F               	line	24
  5152                           # 24 "source.c"
  5153                           CLRF PORTA ;# 
  5154  0169  0185               	line	25
  5155                           # 25 "source.c"
  5156                           MOVLW 0x3F ;# 
  5157  016A  303F               	line	26
  5158                           # 26 "source.c"
  5159                           MOVWF TRISA ;# 
  5160  016B  0085               	line	28
  5161                           # 28 "source.c"
  5162                           CLRF PORTB ;# 
  5163  016C  0186               	line	29
  5164                           # 29 "source.c"
  5165                           MOVLW 0x00 ;# 
  5166  016D  3000               	line	30
  5167                           # 30 "source.c"
  5168                           MOVWF TRISB ;# 
  5169  016E  0086               	line	32
  5170                           # 32 "source.c"
  5171                           CLRF PORTC ;# 
  5172  016F  0187               	line	33
  5173                           # 33 "source.c"
  5174                           MOVLW 0x00 ;# 
  5175  0170  3000               	line	34
  5176                           # 34 "source.c"
  5177                           MOVWF TRISC ;# 
  5178  0171  0087               psect	text18
  5179                           	line	35
  5180                           	
  5181                           l1369:	
  5182  0172                     ;source.c: 35:     CCP1Configuration();
  5183                           	fcall	_CCP1Configuration
  5184  0172  120A  118A  2100  120A  118A  	line	36
  5185                           	
  5186                           l1371:	
  5187  0177                     ;source.c: 36:     CCP2Configuration();
  5188                           	fcall	_CCP2Configuration
  5189  0177  120A  118A  20F3  120A  118A  	line	38
  5190                           # 38 "source.c"
  5191                           CLRF PORTD ;# 
  5192  017C  0188               	line	39
  5193                           # 39 "source.c"
  5194                           MOVLW 0x00 ;# 
  5195  017D  3000               	line	40
  5196                           # 40 "source.c"
  5197                           MOVF TRISD ;# 
  5198  017E  0888               psect	text18
  5199                           	line	41
  5200                           	
  5201                           l1373:	
  5202  017F                     ;source.c: 41:     PORTE = 0x00;
  5203                           	bcf	status, 5	;RP0=0, select bank0
  5204  017F  1283               	bcf	status, 6	;RP1=0, select bank0
  5205  0180  1303               	clrf	(9)	;volatile
  5206  0181  0189               	line	42
  5207                           	
  5208                           l1375:	
  5209  0182                     ;source.c: 42:     TRISE = 0x07;
  5210                           	movlw	low(07h)
  5211  0182  3007               	bsf	status, 5	;RP0=1, select bank1
  5212  0183  1683               	bcf	status, 6	;RP1=0, select bank1
  5213  0184  1303               	movwf	(137)^080h	;volatile
  5214  0185  0089               	line	43
  5215                           	
  5216                           l137:	
  5217  0186                     	return
  5218  0186  0008               	opt stack 0
  5219                           GLOBAL	__end_of_Initialization
  5220                           	__end_of_Initialization:
  5221  0187                     	signat	_Initialization,89
  5222                           	global	_CCP2Configuration
  5223                           
  5224 ;; *************** function _CCP2Configuration *****************
  5225 ;; Defined at:
  5226 ;;		line 55 in file "source.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		wreg
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5240 ;;      Params:         0       0       0       0       0
  5241 ;;      Locals:         0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0
  5243 ;;      Totals:         0       0       0       0       0
  5244 ;;Total ram usage:        0 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_Initialization
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5253                           	line	55
  5254                           global __ptext19
  5255                           __ptext19:	;psect for function _CCP2Configuration
  5256  00F3                     psect	text19
  5257                           	file	"source.c"
  5258                           	line	55
  5259                           	global	__size_of_CCP2Configuration
  5260                           	__size_of_CCP2Configuration	equ	__end_of_CCP2Configuration-_CCP2Configuration
  5261  0005                     	
  5262                           _CCP2Configuration:	
  5263  00F3                     ;incstack = 0
  5264                           	opt	stack 6
  5265                           ; Regs used in _CCP2Configuration: [wreg]
  5266                           	line	57
  5267                           	
  5268                           l1261:	
  5269  00F3                     ;source.c: 57:     CCP2CON = 0x4F;
  5270                           	movlw	low(04Fh)
  5271  00F3  304F               	bcf	status, 5	;RP0=0, select bank0
  5272  00F4  1283               	bcf	status, 6	;RP1=0, select bank0
  5273  00F5  1303               	movwf	(29)	;volatile
  5274  00F6  009D               	line	58
  5275                           	
  5276                           l146:	
  5277  00F7                     	return
  5278  00F7  0008               	opt stack 0
  5279                           GLOBAL	__end_of_CCP2Configuration
  5280                           	__end_of_CCP2Configuration:
  5281  00F8                     	signat	_CCP2Configuration,89
  5282                           	global	_CCP1Configuration
  5283                           
  5284 ;; *************** function _CCP1Configuration *****************
  5285 ;; Defined at:
  5286 ;;		line 44 in file "source.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;		None
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;		None
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  1    wreg      void 
  5293 ;; Registers used:
  5294 ;;		wreg
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5300 ;;      Params:         0       0       0       0       0
  5301 ;;      Locals:         0       0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0
  5303 ;;      Totals:         0       0       0       0       0
  5304 ;;Total ram usage:        0 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_Initialization
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  5313                           	line	44
  5314                           global __ptext20
  5315                           __ptext20:	;psect for function _CCP1Configuration
  5316  0100                     psect	text20
  5317                           	file	"source.c"
  5318                           	line	44
  5319                           	global	__size_of_CCP1Configuration
  5320                           	__size_of_CCP1Configuration	equ	__end_of_CCP1Configuration-_CCP1Configuration
  5321  000B                     	
  5322                           _CCP1Configuration:	
  5323  0100                     ;incstack = 0
  5324                           	opt	stack 6
  5325                           ; Regs used in _CCP1Configuration: [wreg]
  5326                           	line	46
  5327                           	
  5328                           l1259:	
  5329  0100                     ;source.c: 46:     PR2 = 0xFF;
  5330                           	movlw	low(0FFh)
  5331  0100  30FF               	bsf	status, 5	;RP0=1, select bank1
  5332  0101  1683               	bcf	status, 6	;RP1=0, select bank1
  5333  0102  1303               	movwf	(146)^080h	;volatile
  5334  0103  0092               	line	47
  5335                           ;source.c: 47:     T2CON = 0x05;
  5336                           	movlw	low(05h)
  5337  0104  3005               	bcf	status, 5	;RP0=0, select bank0
  5338  0105  1283               	bcf	status, 6	;RP1=0, select bank0
  5339  0106  1303               	movwf	(18)	;volatile
  5340  0107  0092               	line	48
  5341                           ;source.c: 48:     CCP1CON = 0x4F;
  5342                           	movlw	low(04Fh)
  5343  0108  304F               	movwf	(23)	;volatile
  5344  0109  0097               	line	49
  5345                           	
  5346                           l140:	
  5347  010A                     	return
  5348  010A  0008               	opt stack 0
  5349                           GLOBAL	__end_of_CCP1Configuration
  5350                           	__end_of_CCP1Configuration:
  5351  010B                     	signat	_CCP1Configuration,89
  5352                           global	___latbits
  5353                           ___latbits	equ	2
  5354  0002                     	global	btemp
  5355                           	btemp set 07Eh
  5356  007E                     
  5357                           	DABS	1,126,2	;btemp
  5358                           	global	wtemp0
  5359                           	wtemp0 set btemp+0
  5360  007E                     	end


Data Sizes:
    Strings     55
    Constant    0
    Data        8
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     19      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    SerialPrintLn@dataText	PTR unsigned char  size(1) Largest target is 10
		 -> STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[8]), 
		 -> STR_3(CODE[10]), STR_2(CODE[6]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _setup->_L298NInit
    _setup->_SerialBegin
    _SerialBegin->___aldiv
    _L298NInit->_pinMode
    _loop->_Adelante
    _loop->_Atras
    _loop->_Derecha
    _loop->_Izquierda
    _SerialPrintLn->_SerialWrite
    _Izquierda->_analogWrite
    _Detener->_analogWrite
    _Derecha->_analogWrite
    _Atras->_analogWrite
    _Adelante->_analogWrite

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_SerialBegin
    _SerialBegin->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   25070
                     _Initialization
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                7     7      0    5964
                                             12 BANK0      7     7      0
                          _L298NInit
                        _SerialBegin
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _SerialBegin                                         10     6      4     792
                                              9 COMMON     4     4      0
                                              6 BANK0      6     2      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _L298NInit                                            9     2      7    1748
                                              4 COMMON     9     2      7
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              4     3      1    1104
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _loop                                                 2     2      0   19106
                                              8 COMMON     2     2      0
                           _Adelante
                              _Atras
                            _Derecha
                            _Detener
                          _Izquierda
                    _SerialAvailable
                      _SerialPrintLn
                         _SerialRead
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _SerialRead                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SerialPrintLn                                        3     3      0     343
                                              1 COMMON     3     3      0
                        _SerialWrite
 ---------------------------------------------------------------------------------
 (3) _SerialWrite                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SerialAvailable                                      1     1      0       8
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Izquierda                                            2     0      2    3311
                                              6 COMMON     2     0      2
                        _analogWrite
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _Detener                                              0     0      0    3191
                        _analogWrite
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _Derecha                                              2     0      2    3311
                                              6 COMMON     2     0      2
                        _analogWrite
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _Atras                                                2     0      2    3311
                                              6 COMMON     2     0      2
                        _analogWrite
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _Adelante                                             2     0      2    3311
                                              6 COMMON     2     0      2
                        _analogWrite
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         4     3      1    2320
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _analogWrite                                          6     4      2     871
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Initialization                                       0     0      0       0
                  _CCP1Configuration
                  _CCP2Configuration
 ---------------------------------------------------------------------------------
 (2) _CCP2Configuration                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1Configuration                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialization
     _CCP1Configuration
     _CCP2Configuration
   _loop
     _Adelante
       _analogWrite
       _digitalWrite
     _Atras
       _analogWrite
       _digitalWrite
     _Derecha
       _analogWrite
       _digitalWrite
     _Detener
       _analogWrite
       _digitalWrite
     _Izquierda
       _analogWrite
       _digitalWrite
     _SerialAvailable
     _SerialPrintLn
       _SerialWrite
     _SerialRead
     _digitalWrite
   _setup
     _L298NInit
       _pinMode
     _SerialBegin
       ___aldiv
     _digitalWrite
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2E      12        0.0%
ABS                  0      0      2E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Dec 05 17:44:57 2019

                         pc 0002                 __CFG_CP$OFF 0000                          _va 003C  
                        _vb 003B                          fsr 0004                 __CFG_LVP$ON 0000  
                       l200 0749                         l201 0751                         l202 0759  
                       l203 0761                         l131 0140                         l140 010A  
                       l204 0769                         l132 0146                         l205 0771  
                       l133 0147                         l206 0779                         l134 0147  
                       l207 0781                         l208 0789                         l152 066F  
                       l160 05D6                         l137 0186                         l209 07E7  
                       l161 05DE                         l153 05A6                         l146 00F7  
                       l306 0118                         l154 06C4                         l170 0626  
                       l162 05E6                         l331 015F                         l307 0118  
                       l171 062E                         l163 05EE                         l155 05AE  
                       l332 0160                         l308 011F                         l324 019F  
                       l172 0636                         l164 05F6                         l156 05B6  
                       l309 0121                         l325 018B                         l173 063E  
                       l165 05FE                         l157 05BE                         l270 0389  
                       l182 0792                         l190 06F8                         l326 01AD  
                       l430 0458                         l174 0646                         l166 0606  
                       l158 05C6                         l271 03B7                         l191 0701  
                       l183 06C7                         l327 01B3                         l335 010C  
                       l431 0436                         l175 064E                         l167 060E  
                       l159 05CE                         l184 07E7                         l192 0709  
                       l336 010C                         l440 0458                         l432 03C8  
                       l176 0656                         l168 0616                         l193 0711  
                       l185 06CF                         l337 0113                         l433 0457  
                       l177 065E                         l169 061E                         l194 0719  
                       l186 06D7                         l338 0115                         l434 03D8  
                       l178 0666                         l267 03A7                         l195 0721  
                       l187 06DF                         l435 03E8                         l179 06C4  
                       l427 0324                         l268 036F                         l196 0729  
                       l188 06E7                         l436 03F8                         l269 03B7  
                       l197 0731                         l189 06EF                         l437 0408  
                       l461 036B                         l285 04E5                         l198 0739  
                       l470 02E0                         l438 0414                         l630 0547  
                       l286 04FD                         l199 0741                         l439 0425  
                       l631 0539                         l287 04FD                         l464 0229  
                       l632 054C                         l473 02A3                         l633 054D  
                       l634 0578                         l467 0266                         l635 0588  
                       l627 0512                         l476 01EC                         l636 059A  
                       l628 0526                         l637 05A3                         l629 0589  
                       _GIE 005F                         u500 0385                         u501 0381  
                       _PR2 0092                         u520 03A2                         _PEN 048A  
                       u521 039E                         u514 0388                         u610 0568  
              __CFG_CPD$OFF 0000                         u611 0567                         u700 0156  
                       u540 011E                         u701 0155                         u541 011D  
                       u605 054F                         u534 03A5                         u710 015C  
                       u630 0587                         u550 0505                         u711 015B  
                       u631 0586                         u615 0564                         u551 0504  
                       u720 0112                         u640 058E                         u560 0516  
                       u721 0111                         u641 058D                         u625 0579  
                       u561 0515                         u570 0536                         u650 046C  
                       u571 0535                         u660 0497                         _SEN 0488  
                       u661 0496                         u590 054B                         u670 04AA  
                       u591 054A                         u655 0467                         u680 01AC  
                       u681 01AB                         u585 053B                         u690 0152  
                       u691 0151                         u675 04A5                         _Led 0034  
                       _in1 007D                         _in2 003F                         _in3 003E  
                       _in4 003D                         fsr0 0004                         indf 0000  
              __CFG_FOSC$HS 0000                        l2011 038C                        l2003 036D  
                      l2013 039A                        l2005 036F                        l2101 04E5  
                      l2015 039B                        l2007 037D                        l2031 0501  
                      l2111 04F1                        l2103 04E9                        l2017 03A6  
                      l2009 037E                        l2025 0117                        l2121 0188  
                      l2201 0436                        l2041 052E                        l2033 0505  
                      l2113 04F4                        l2105 04EA                        PORTA 0005  
                      PORTB 0006                        l2019 03A7                        l2131 014A  
                      l2027 011F                        l2123 018B                        l2051 0556  
                      l2043 0536                        l2035 0516                        l2115 04F7  
                      l2107 04ED                        l2211 0140                        PORTC 0007  
                      PORTD 0008                        l1261 00F3                        l2133 0152  
                      l2125 0198                        l2141 010B                        l2053 0568  
                      l2045 0539                        l2061 0589                        l2037 0521  
                      l2029 04FE                        l2117 04FA                        l2109 04F0  
                      l2135 0156                        l2127 019F                        l2143 0113  
                      l2151 0354                        l2063 058E                        l2055 0576  
                      l2047 0547                        l2039 0526                        l2119 04FC  
                      l2071 045C                        l2207 0135                        l2321 079A  
                      l2137 015D                        l2129 01AD                        l2145 0115  
                      l2161 036B                        l2153 035A                        l2065 059A  
                      l2057 0578                        l2049 054D                        l2081 04D0  
                      l2073 048E                        l2209 013A                        l1259 0100  
                      l1371 0177                        l2323 03AF                        l2163 01ED  
                      l2171 01B4                        l2139 0160                        l2155 035E  
                      l2147 0326                        l2067 05A3                        l2059 0581  
                      l2091 04DB                        l2083 04D1                        l2075 0497  
                      l1373 017F                        l2165 022A                        l2181 03B8  
                      l2317 0677                        l2157 0362                        l2149 0350  
                      l2093 04DE                        l2085 04D4                        l2077 049A  
                      l2069 0459                        l2173 02E1                        l1375 0182  
                      l1367 0161                        l2167 02A4                        l2319 0440  
                      l2191 03F8                        l2183 03BD                        l2159 0366  
                      l2095 04E1                        l2087 04D7                        l2079 04CC  
                      l2175 02F0                        l1369 0172                        l2169 0267  
                      l2193 0408                        l2185 03C8                        l2097 04E3  
                      l2089 04D8                        l2177 0312                        l2195 0414  
                      l2187 03D8                        l2099 04E4                        l2179 031B  
                      l2197 0425                        l2189 03E8                        l1901 05F6  
                      l2199 0435                        l1911 061E                        l1903 05FE  
                      l1921 0646                        l1913 0626                        l1905 0606  
                      l1931 066E                        l1923 064E                        l1915 062E  
                      l1907 060E                        l1941 06C7                        l1925 0656  
                      l1917 0636                        l1909 0616                        l1933 066F  
                      l1951 06EF                        l1943 06CF                        l1927 065E  
                      l1919 063E                        l1961 0709                        l1953 06F2  
                      l1945 06D7                        l1929 0666                        l1881 05A6  
                      l1971 0731                        l1963 0711                        l1955 06F8  
                      l1947 06DF                        l1939 06C6                        l1891 05CE  
                      l1883 05AE                        l1981 0759                        l1973 0739  
                      l1965 0719                        l1957 06FB                        l1949 06E7  
                      l1877 015D                        l1893 05D6                        l1885 05B6  
                      l1991 0781                        l1983 0761                        l1975 0741  
                      l1967 0721                        l1959 0701                        l1895 05DE  
                      l1887 05BE                        l1879 05A5                        l1993 0789  
                      l1985 0769                        l1977 0749                        l1969 0729  
                      l1897 05E6                        l1889 05C6                        l1995 0791  
                      l1987 0771                        l1979 0751                        l1899 05EE  
                      l1989 0779                        l1997 0792                        TRISA 0085  
                      TRISB 0086                        TRISC 0087                        TRISD 0088  
                      STR_1 0013                        STR_2 003A                        STR_3 0009  
                      STR_4 001C                        STR_5 0024                        STR_6 002C  
                      STR_7 0033                        _BRGH 04C2                        _CREN 00C4  
                      _FERR 00C2                        _PEIE 005E                        _RCEN 048B  
                      _RCIF 0065                        _OERR 00C1                        _SPEN 00C7  
                      _RSEN 0489                        _TRMT 04C1                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4                __CFG_WRT$OFF 0000  
                      _data 0033                        _main 0135                        _loop 03B8  
                      btemp 007E                        start 0000             __end_of_Derecha 02A4  
           __end_of_Detener 01ED       SerialPrintLn@dataText 0073           _CCP2Configuration 00F3  
        ?_CCP2Configuration 0070             __end_of___aldiv 05A4                       ?_main 0070  
                     _ACKEN 048C                       _ACKDT 048D           __end_of_L298NInit 036C  
                     _CCP1X 00BD                       _CCP1Y 00BC                       _CCP2X 00ED  
                     _CCP2Y 00EC                       ?_loop 0070               __CFG_WDTE$OFF 0000  
                     _T2CON 0012                       _RCREG 001A       __end_of_SerialPrintLn 01B4  
                     _SPBRG 0099                       _PORTE 0009                       _SSPIE 0463  
                     _TRISE 0089                       _SSPIF 0063                       _TXREG 0019  
                     _InDos 0037                       _InUno 0038                       _Atras 022A  
       ??_CCP2Configuration 0070             __end_of_pinMode 06C5                       _setup 02E1  
            __CFG_BOREN$OFF 0000                       pclath 000A            __end_of_Adelante 022A  
                     status 0003                       wtemp0 007E        __size_of_analogWrite 004C  
__size_of_CCP1Configuration 000B        __end_of_digitalWrite 07E8             __initialization 07E8  
 __end_of_CCP2Configuration 00F8                __end_of_main 014A                __end_of_loop 0459  
   __size_of_Initialization 0026                      ??_main 007D                      ??_loop 0078  
                    ?_Atras 0076                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _CCPR1L 0015  
                    _CCPR2L 001B                      ?_setup 0070               ??_SerialBegin 0079  
                 ??_Derecha 0078                   ??_Detener 0076             _SerialAvailable 014A  
                    _SSPADD 0093         SerialBegin@BaudRate 0026                      _TRISC3 043B  
                    _TRISC4 043C                      _TRISC6 043E                      _TRISC7 043F  
                    _SSPCON 0014                      _SSPBUF 0013               ??_SerialWrite 0070  
                    _InTres 0036                  _SerialRead 010B              __CFG_PWRTE$OFF 0000  
                 ??___aldiv 0078                  _VelocidadA 003A                  _VelocidadB 0039  
        __size_of_Izquierda 003D                   ??_pinMode 0071     __end_of__initialization 07FC  
               pinMode@mode 0070               __end_of_Atras 0267         __end_of_SerialBegin 04FE  
__size_of_CCP2Configuration 0005              __pcstackCOMMON 0070                __pidataBANK0 00F8  
       __end_of_SerialWrite 0122               __end_of_setup 0325                   ?_Adelante 0076  
                   ??_Atras 0078     __end_of_SerialAvailable 0161                     ??_setup 002C  
                __pbssBANK0 003B       __size_of_digitalWrite 0123        SerialWrite@dataWrite 0070  
               ?_SerialRead 0070           __end_of_Izquierda 02E1                  __pmaintext 0135  
            _Initialization 0161                     _CCP1CON 0017                     _CCP2CON 001D  
                ??_Adelante 0078                   _L298NInit 0325                _digitalWrite 06C5  
                   _SSPCON2 0091                     _SSPSTAT 0094                  __stringtab 0003  
                   _Derecha 0267                     _Detener 01B4                 _SerialBegin 0459  
               _SerialWrite 0116      __end_of_Initialization 0187                     ___aldiv 04FE  
                   __ptext1 02E1                     __ptext2 0459                     __ptext3 04FE  
                   __ptext4 0325                     __ptext5 05A4                     __ptext6 03B8  
                   __ptext7 010B                     __ptext8 0187                     __ptext9 0116  
                   _pinMode 05A4            ___aldiv@dividend 0074         __size_of_SerialRead 000B  
                ?_L298NInit 0074            ?_SerialAvailable 0070        end_of_initialization 07FC  
             ??_analogWrite 0072      __size_of_SerialPrintLn 002D             ?_Initialization 0070  
          ___aldiv@quotient 0022                   _PORTAbits 0005                   _PORTBbits 0006  
                 _PORTCbits 0007                   _PORTDbits 0008                   _PORTEbits 0009  
                 _TRISAbits 0085                   _TRISBbits 0086                   _TRISCbits 0087  
                 _TRISDbits 0088         __end_of_analogWrite 03B8               _SerialPrintLn 0187  
       start_initialization 07E8           __size_of_Adelante 003D                 ??_L298NInit 007B  
              ??_SerialRead 0070                  init_fetch0 0122                   _Izquierda 02A4  
               __pdataBANK0 0033              ?_SerialPrintLn 0070                 __pbssCOMMON 007D  
                 ___latbits 0002               __pcstackBANK0 0020                  pinMode@pin 0073  
        __end_of_SerialRead 0116                 Adelante@Vel 0076                    ?_Derecha 0076  
              ?_SerialBegin 0026                    ?_Detener 0070                 _analogWrite 036C  
              ?_SerialWrite 0070                    ?___aldiv 0070                SerialBegin@x 002A  
                ?_Izquierda 0076                   __pstrings 0003                    ?_pinMode 0070  
            __size_of_Atras 003D              __size_of_setup 0044             ___aldiv@divisor 0070  
          ??_Initialization 0070             ___aldiv@counter 0020                    Atras@Vel 0076  
           ??_SerialPrintLn 0071                  _ADCON0bits 001F                 __stringbase 0008  
                  _Adelante 01ED                    _InCuatro 0035            __size_of_Derecha 003D  
          __size_of_Detener 0039              SerialPrintLn@i 0071    __size_of_SerialAvailable 0017  
               ??_Izquierda 0078            __size_of___aldiv 00A6          __end_of__stringtab 0009  
          __size_of_pinMode 0121                    __ptext10 014A                    __ptext11 02A4  
                  __ptext20 0100                    __ptext12 01B4                    __ptext13 0267  
                  __ptext14 022A                    __ptext15 01ED                    __ptext16 06C5  
                  __ptext17 036C                    __ptext18 0161                    __ptext19 00F3  
             __size_of_main 0015                Izquierda@Vel 0076               __size_of_loop 00A1  
      __size_of_SerialBegin 00A5        __size_of_SerialWrite 000C            analogWrite@value 0070  
             ?_digitalWrite 0070                    init_ram0 0126                  Derecha@Vel 0076  
         digitalWrite@value 0070                ?_analogWrite 0070                   stringcode 0003  
       _SerialAvailable$429 0070           ??_SerialAvailable 0070           _CCP1Configuration 0100  
        ?_CCP1Configuration 0070              ??_digitalWrite 0071                    stringdir 0003  
                  stringtab 0003         ??_CCP1Configuration 0070                ___aldiv@sign 0021  
            analogWrite@MSB 0074               L298NInit@VelA 0077               L298NInit@VelB 0079  
            analogWrite@pin 0075             digitalWrite@pin 0073          __size_of_L298NInit 0047  
              L298NInit@ina 007C                L298NInit@inb 0074                L298NInit@inc 0075  
              L298NInit@ind 0076   __end_of_CCP1Configuration 010B  
