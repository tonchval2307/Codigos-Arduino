

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Dec 12 01:41:57 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           	psect	nvCOMRAM
    27  000055                     __pnvCOMRAM:
    28                           	opt stack 0
    29  000055                     _freq:
    30                           	opt stack 0
    31  000055                     	ds	4
    32  0000                     _ADCON0	set	4034
    33  0000                     _ADCON1	set	4033
    34  0000                     _ADRESH	set	4036
    35  0000                     _ADRESL	set	4035
    36  0000                     _CCPR1L	set	4030
    37  0000                     _CCPR2L	set	4027
    38  0000                     _PR2	set	4043
    39  0000                     _CCP1M2	set	32234
    40  0000                     _CCP1M3	set	32235
    41  0000                     _CCP2M2	set	32210
    42  0000                     _CCP2M3	set	32211
    43  0000                     _GO_nDONE	set	32273
    44  0000                     _T2CKPS0	set	32336
    45  0000                     _T2CKPS1	set	32337
    46  0000                     _TMR2ON	set	32338
    47  0000                     _TRISC1	set	31905
    48  0000                     _TRISC2	set	31906
    49                           
    50                           ; #config settings
    51  0000                     
    52                           	psect	cinit
    53  007884                     __pcinit:
    54                           	opt stack 0
    55  007884                     start_initialization:
    56                           	opt stack 0
    57  007884                     __initialization:
    58                           	opt stack 0
    59  007884                     end_of_initialization:
    60                           	opt stack 0
    61  007884                     __end_of__initialization:
    62                           	opt stack 0
    63  007884  0100               	movlb	0
    64  007886  EF7A  F03F         	goto	_main	;jump to C main() function
    65                           
    66                           	psect	cstackCOMRAM
    67  000001                     __pcstackCOMRAM:
    68                           	opt stack 0
    69  000001                     ?_ADC_Read:
    70                           	opt stack 0
    71  000001                     ?___wmul:
    72                           	opt stack 0
    73  000001                     ?___ftpack:
    74                           	opt stack 0
    75  000001                     ?___aldiv:
    76                           	opt stack 0
    77  000001                     ___wmul@multiplier:
    78                           	opt stack 0
    79  000001                     ___ftpack@arg:
    80                           	opt stack 0
    81  000001                     ___aldiv@dividend:
    82                           	opt stack 0
    83                           
    84                           ; 4 bytes @ 0x0
    85  000001                     	ds	2
    86  000003                     ??_ADC_Read:
    87  000003                     ___wmul@multiplicand:
    88                           	opt stack 0
    89                           
    90                           ; 2 bytes @ 0x2
    91  000003                     	ds	1
    92  000004                     ___ftpack@exp:
    93                           	opt stack 0
    94                           
    95                           ; 1 bytes @ 0x3
    96  000004                     	ds	1
    97  000005                     ADC_Read@channel:
    98                           	opt stack 0
    99  000005                     ___ftpack@sign:
   100                           	opt stack 0
   101  000005                     ___wmul@product:
   102                           	opt stack 0
   103  000005                     ___aldiv@divisor:
   104                           	opt stack 0
   105                           
   106                           ; 4 bytes @ 0x4
   107  000005                     	ds	1
   108  000006                     ??___ftpack:
   109                           
   110                           ; 1 bytes @ 0x5
   111  000006                     	ds	3
   112  000009                     ?___lwtoft:
   113                           	opt stack 0
   114  000009                     ___aldiv@counter:
   115                           	opt stack 0
   116  000009                     ___lwtoft@c:
   117                           	opt stack 0
   118                           
   119                           ; 2 bytes @ 0x8
   120  000009                     	ds	1
   121  00000A                     ___aldiv@sign:
   122                           	opt stack 0
   123                           
   124                           ; 1 bytes @ 0x9
   125  00000A                     	ds	1
   126  00000B                     ___aldiv@quotient:
   127                           	opt stack 0
   128                           
   129                           ; 4 bytes @ 0xA
   130  00000B                     	ds	1
   131  00000C                     ?___ftdiv:
   132                           	opt stack 0
   133  00000C                     ___ftdiv@f1:
   134                           	opt stack 0
   135                           
   136                           ; 3 bytes @ 0xB
   137  00000C                     	ds	3
   138  00000F                     ?_PWM_Max_Duty:
   139                           	opt stack 0
   140  00000F                     ___ftdiv@f2:
   141                           	opt stack 0
   142  00000F                     PWM1_Init@fre:
   143                           	opt stack 0
   144                           
   145                           ; 4 bytes @ 0xE
   146  00000F                     	ds	2
   147  000011                     ??_PWM_Max_Duty:
   148                           
   149                           ; 1 bytes @ 0x10
   150  000011                     	ds	1
   151  000012                     ??___ftdiv:
   152                           
   153                           ; 1 bytes @ 0x11
   154  000012                     	ds	1
   155  000013                     ??_PWM1_Init:
   156                           
   157                           ; 1 bytes @ 0x12
   158  000013                     	ds	2
   159  000015                     ?___awtoft:
   160                           	opt stack 0
   161  000015                     ___ftdiv@cntr:
   162                           	opt stack 0
   163  000015                     ___awtoft@c:
   164                           	opt stack 0
   165                           
   166                           ; 2 bytes @ 0x14
   167  000015                     	ds	1
   168  000016                     ___ftdiv@f3:
   169                           	opt stack 0
   170                           
   171                           ; 3 bytes @ 0x15
   172  000016                     	ds	2
   173  000018                     ___awtoft@sign:
   174                           	opt stack 0
   175                           
   176                           ; 1 bytes @ 0x17
   177  000018                     	ds	1
   178  000019                     ___ftdiv@exp:
   179                           	opt stack 0
   180                           
   181                           ; 1 bytes @ 0x18
   182  000019                     	ds	1
   183  00001A                     ___ftdiv@sign:
   184                           	opt stack 0
   185                           
   186                           ; 1 bytes @ 0x19
   187  00001A                     	ds	1
   188  00001B                     ?___ftmul:
   189                           	opt stack 0
   190  00001B                     ___ftmul@f1:
   191                           	opt stack 0
   192                           
   193                           ; 3 bytes @ 0x1A
   194  00001B                     	ds	3
   195  00001E                     ___ftmul@f2:
   196                           	opt stack 0
   197                           
   198                           ; 3 bytes @ 0x1D
   199  00001E                     	ds	3
   200  000021                     ??___ftmul:
   201                           
   202                           ; 1 bytes @ 0x20
   203  000021                     	ds	3
   204  000024                     ___ftmul@exp:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0x23
   208  000024                     	ds	1
   209  000025                     ___ftmul@f3_as_product:
   210                           	opt stack 0
   211                           
   212                           ; 3 bytes @ 0x24
   213  000025                     	ds	3
   214  000028                     ___ftmul@cntr:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x27
   218  000028                     	ds	1
   219  000029                     ___ftmul@sign:
   220                           	opt stack 0
   221                           
   222                           ; 1 bytes @ 0x28
   223  000029                     	ds	1
   224  00002A                     ?___fttol:
   225                           	opt stack 0
   226  00002A                     ___fttol@f1:
   227                           	opt stack 0
   228                           
   229                           ; 3 bytes @ 0x29
   230  00002A                     	ds	4
   231  00002E                     ??___fttol:
   232                           
   233                           ; 1 bytes @ 0x2D
   234  00002E                     	ds	5
   235  000033                     ___fttol@sign1:
   236                           	opt stack 0
   237                           
   238                           ; 1 bytes @ 0x32
   239  000033                     	ds	1
   240  000034                     ___fttol@lval:
   241                           	opt stack 0
   242                           
   243                           ; 4 bytes @ 0x33
   244  000034                     	ds	4
   245  000038                     ___fttol@exp1:
   246                           	opt stack 0
   247                           
   248                           ; 1 bytes @ 0x37
   249  000038                     	ds	1
   250  000039                     PWM1_Duty@duty:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x38
   254  000039                     	ds	2
   255  00003B                     ??_PWM1_Duty:
   256                           
   257                           ; 1 bytes @ 0x3A
   258  00003B                     	ds	2
   259  00003D                     ??_main:
   260                           
   261                           ; 1 bytes @ 0x3C
   262  00003D                     	ds	2
   263  00003F                     main@kp:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0x3E
   267  00003F                     	ds	2
   268  000041                     main@td:
   269                           	opt stack 0
   270                           
   271                           ; 2 bytes @ 0x40
   272  000041                     	ds	2
   273  000043                     main@ti:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x42
   277  000043                     	ds	2
   278  000045                     main@sp:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x44
   282  000045                     	ds	2
   283  000047                     main@dato:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x46
   287  000047                     	ds	2
   288  000049                     main@dt:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0x48
   292  000049                     	ds	2
   293  00004B                     main@et0:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x4A
   297  00004B                     	ds	2
   298  00004D                     main@it0:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x4C
   302  00004D                     	ds	2
   303  00004F                     main@it:
   304                           	opt stack 0
   305                           
   306                           ; 2 bytes @ 0x4E
   307  00004F                     	ds	2
   308  000051                     main@ct:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0x50
   312  000051                     	ds	2
   313  000053                     main@err:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x52
   317  000053                     	ds	2
   318                           
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 191 in file "pid.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  err             2   82[COMRAM] int 
   329 ;;  ct              2   80[COMRAM] int 
   330 ;;  it              2   78[COMRAM] int 
   331 ;;  dt              2   72[COMRAM] int 
   332 ;;  dato            2   70[COMRAM] int 
   333 ;;  sp              2   68[COMRAM] int 
   334 ;;  it0             2   76[COMRAM] int 
   335 ;;  et0             2   74[COMRAM] int 
   336 ;;  ti              2   66[COMRAM] int 
   337 ;;  td              2   64[COMRAM] int 
   338 ;;  kp              2   62[COMRAM] int 
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   348 ;;      Params:         0       0       0       0       0       0       0       0       0
   349 ;;      Locals:        22       0       0       0       0       0       0       0       0
   350 ;;      Temps:          2       0       0       0       0       0       0       0       0
   351 ;;      Totals:        24       0       0       0       0       0       0       0       0
   352 ;;Total ram usage:       24 bytes
   353 ;; Hardware stack levels required when called:    3
   354 ;; This function calls:
   355 ;;		_ADC_Init
   356 ;;		_ADC_Read
   357 ;;		_PWM1_Duty
   358 ;;		_PWM1_Init
   359 ;;		_PWM1_Start
   360 ;;		___wmul
   361 ;; This function is called by:
   362 ;;		Startup code after reset
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           	psect	text0
   367  007EF4                     __ptext0:
   368                           	opt stack 0
   369  007EF4                     _main:
   370                           	opt stack 28
   371                           
   372                           ;pid.c: 261: int kp = 15;
   373                           
   374                           ;incstack = 0
   375  007EF4  0E00               	movlw	0
   376  007EF6  6E40               	movwf	main@kp+1,c
   377  007EF8  0E0F               	movlw	15
   378  007EFA  6E3F               	movwf	main@kp,c
   379                           
   380                           ;pid.c: 262: int td = 2;
   381  007EFC  0E00               	movlw	0
   382  007EFE  6E42               	movwf	main@td+1,c
   383  007F00  0E02               	movlw	2
   384  007F02  6E41               	movwf	main@td,c
   385                           
   386                           ;pid.c: 263: int ti = 5;
   387  007F04  0E00               	movlw	0
   388  007F06  6E44               	movwf	main@ti+1,c
   389  007F08  0E05               	movlw	5
   390  007F0A  6E43               	movwf	main@ti,c
   391                           
   392                           ;pid.c: 264: int et0=0 , it0 = 0;
   393  007F0C  0E00               	movlw	0
   394  007F0E  6E4C               	movwf	main@et0+1,c
   395  007F10  0E00               	movlw	0
   396  007F12  6E4B               	movwf	main@et0,c
   397  007F14  0E00               	movlw	0
   398  007F16  6E4E               	movwf	main@it0+1,c
   399  007F18  0E00               	movlw	0
   400  007F1A  6E4D               	movwf	main@it0,c
   401                           
   402                           ;pid.c: 265: ADC_Init();
   403  007F1C  EC45  F03C         	call	_ADC_Init	;wreg free
   404                           
   405                           ;pid.c: 266: PWM1_Init(5000);
   406  007F20  0E88               	movlw	136
   407  007F22  6E0F               	movwf	PWM1_Init@fre,c
   408  007F24  0E13               	movlw	19
   409  007F26  6E10               	movwf	PWM1_Init@fre+1,c
   410  007F28  0E00               	movlw	0
   411  007F2A  6E11               	movwf	PWM1_Init@fre+2,c
   412  007F2C  0E00               	movlw	0
   413  007F2E  6E12               	movwf	PWM1_Init@fre+3,c
   414  007F30  ECDA  F03C         	call	_PWM1_Init	;wreg free
   415                           
   416                           ;pid.c: 267: PWM1_Start();
   417  007F34  EC4A  F03C         	call	_PWM1_Start	;wreg free
   418  007F38                     l1314:
   419                           
   420                           ;pid.c: 269: int sp = 500;
   421  007F38  0E01               	movlw	1
   422  007F3A  6E46               	movwf	main@sp+1,c
   423  007F3C  0EF4               	movlw	244
   424  007F3E  6E45               	movwf	main@sp,c
   425                           
   426                           ;pid.c: 270: int dato = ADC_Read(0);
   427  007F40  0E00               	movlw	0
   428  007F42  EC90  F03C         	call	_ADC_Read
   429  007F46  C001  F047         	movff	?_ADC_Read,main@dato
   430  007F4A  C002  F048         	movff	?_ADC_Read+1,main@dato+1
   431                           
   432                           ;pid.c: 271: int err = sp - dato;
   433  007F4E  C047  F03D         	movff	main@dato,??_main
   434  007F52  C048  F03E         	movff	main@dato+1,??_main+1
   435  007F56  1E3D               	comf	??_main,f,c
   436  007F58  1E3E               	comf	??_main+1,f,c
   437  007F5A  4A3D               	infsnz	??_main,f,c
   438  007F5C  2A3E               	incf	??_main+1,f,c
   439  007F5E  5045               	movf	main@sp,w,c
   440  007F60  243D               	addwf	??_main,w,c
   441  007F62  6E53               	movwf	main@err,c
   442  007F64  5046               	movf	main@sp+1,w,c
   443  007F66  203E               	addwfc	??_main+1,w,c
   444  007F68  6E54               	movwf	main@err+1,c
   445                           
   446                           ;pid.c: 272: int it = it0+(err * ti);
   447  007F6A  C053  F001         	movff	main@err,___wmul@multiplier
   448  007F6E  C054  F002         	movff	main@err+1,___wmul@multiplier+1
   449  007F72  C043  F003         	movff	main@ti,___wmul@multiplicand
   450  007F76  C044  F004         	movff	main@ti+1,___wmul@multiplicand+1
   451  007F7A  EC61  F03C         	call	___wmul	;wreg free
   452  007F7E  504D               	movf	main@it0,w,c
   453  007F80  2401               	addwf	?___wmul,w,c
   454  007F82  6E4F               	movwf	main@it,c
   455  007F84  504E               	movf	main@it0+1,w,c
   456  007F86  2002               	addwfc	?___wmul+1,w,c
   457  007F88  6E50               	movwf	main@it+1,c
   458                           
   459                           ;pid.c: 273: int dt = td*(err - et0);
   460  007F8A  C04B  F03D         	movff	main@et0,??_main
   461  007F8E  C04C  F03E         	movff	main@et0+1,??_main+1
   462  007F92  1E3D               	comf	??_main,f,c
   463  007F94  1E3E               	comf	??_main+1,f,c
   464  007F96  4A3D               	infsnz	??_main,f,c
   465  007F98  2A3E               	incf	??_main+1,f,c
   466  007F9A  5053               	movf	main@err,w,c
   467  007F9C  243D               	addwf	??_main,w,c
   468  007F9E  6E01               	movwf	___wmul@multiplier,c
   469  007FA0  5054               	movf	main@err+1,w,c
   470  007FA2  203E               	addwfc	??_main+1,w,c
   471  007FA4  6E02               	movwf	___wmul@multiplier+1,c
   472  007FA6  C041  F003         	movff	main@td,___wmul@multiplicand
   473  007FAA  C042  F004         	movff	main@td+1,___wmul@multiplicand+1
   474  007FAE  EC61  F03C         	call	___wmul	;wreg free
   475  007FB2  C001  F049         	movff	?___wmul,main@dt
   476  007FB6  C002  F04A         	movff	?___wmul+1,main@dt+1
   477                           
   478                           ;pid.c: 274: int ct = it + dt + (kp*err);
   479  007FBA  C03F  F001         	movff	main@kp,___wmul@multiplier
   480  007FBE  C040  F002         	movff	main@kp+1,___wmul@multiplier+1
   481  007FC2  C053  F003         	movff	main@err,___wmul@multiplicand
   482  007FC6  C054  F004         	movff	main@err+1,___wmul@multiplicand+1
   483  007FCA  EC61  F03C         	call	___wmul	;wreg free
   484  007FCE  504F               	movf	main@it,w,c
   485  007FD0  2601               	addwf	?___wmul,f,c
   486  007FD2  5050               	movf	main@it+1,w,c
   487  007FD4  2202               	addwfc	?___wmul+1,f,c
   488  007FD6  5049               	movf	main@dt,w,c
   489  007FD8  2401               	addwf	?___wmul,w,c
   490  007FDA  6E51               	movwf	main@ct,c
   491  007FDC  504A               	movf	main@dt+1,w,c
   492  007FDE  2002               	addwfc	?___wmul+1,w,c
   493  007FE0  6E52               	movwf	main@ct+1,c
   494                           
   495                           ;pid.c: 284: }
   496                           ;pid.c: 285: }
   497                           ;pid.c: 286: PWM1_Duty(ct);
   498                           
   499                           ;pid.c: 278: }
   500  007FE2  C051  F039         	movff	main@ct,PWM1_Duty@duty
   501  007FE6  C052  F03A         	movff	main@ct+1,PWM1_Duty@duty+1
   502  007FEA  EC0F  F03D         	call	_PWM1_Duty	;wreg free
   503                           
   504                           ;pid.c: 287: et0 = err;
   505  007FEE  C053  F04B         	movff	main@err,main@et0
   506  007FF2  C054  F04C         	movff	main@err+1,main@et0+1
   507                           
   508                           ;pid.c: 288: it0 = it;
   509  007FF6  C04F  F04D         	movff	main@it,main@it0
   510  007FFA  C050  F04E         	movff	main@it+1,main@it0+1
   511  007FFE  D79C               	goto	l1314
   512  008000                     __end_of_main:
   513                           	opt stack 0
   514                           
   515 ;; *************** function ___wmul *****************
   516 ;; Defined at:
   517 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  multiplier      2    0[COMRAM] unsigned int 
   520 ;;  multiplicand    2    2[COMRAM] unsigned int 
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  product         2    4[COMRAM] unsigned int 
   523 ;; Return value:  Size  Location     Type
   524 ;;                  2    0[COMRAM] unsigned int 
   525 ;; Registers used:
   526 ;;		wreg, status,2, status,0, prodl, prodh
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   532 ;;      Params:         4       0       0       0       0       0       0       0       0
   533 ;;      Locals:         2       0       0       0       0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0       0       0
   535 ;;      Totals:         6       0       0       0       0       0       0       0       0
   536 ;;Total ram usage:        6 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text1
   546  0078C2                     __ptext1:
   547                           	opt stack 0
   548  0078C2                     ___wmul:
   549                           	opt stack 30
   550                           
   551                           ;incstack = 0
   552  0078C2  5001               	movf	___wmul@multiplier,w,c
   553  0078C4  0203               	mulwf	___wmul@multiplicand,c
   554  0078C6  CFF3 F005          	movff	prodl,___wmul@product
   555  0078CA  CFF4 F006          	movff	prodh,___wmul@product+1
   556  0078CE  5001               	movf	___wmul@multiplier,w,c
   557  0078D0  0204               	mulwf	___wmul@multiplicand+1,c
   558  0078D2  50F3               	movf	prodl,w,c
   559  0078D4  2606               	addwf	___wmul@product+1,f,c
   560  0078D6  5002               	movf	___wmul@multiplier+1,w,c
   561  0078D8  0203               	mulwf	___wmul@multiplicand,c
   562  0078DA  50F3               	movf	prodl,w,c
   563  0078DC  2606               	addwf	___wmul@product+1,f,c
   564  0078DE  C005  F001         	movff	___wmul@product,?___wmul
   565  0078E2  C006  F002         	movff	___wmul@product+1,?___wmul+1
   566  0078E6  0012               	return	
   567  0078E8                     __end_of___wmul:
   568                           	opt stack 0
   569                           prodh	equ	0xFF4
   570                           prodl	equ	0xFF3
   571                           
   572 ;; *************** function _PWM1_Start *****************
   573 ;; Defined at:
   574 ;;		line 125 in file "pid.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  2   57[None  ] int 
   581 ;; Registers used:
   582 ;;		None
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   588 ;;      Params:         0       0       0       0       0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text2
   602  007894                     __ptext2:
   603                           	opt stack 0
   604  007894                     _PWM1_Start:
   605                           	opt stack 30
   606                           
   607                           ;pid.c: 127: CCP1M3 = 1;
   608                           
   609                           ;incstack = 0
   610  007894  86BD               	bsf	4029,3,c	;volatile
   611                           
   612                           ;pid.c: 128: CCP1M2 = 1;
   613  007896  84BD               	bsf	4029,2,c	;volatile
   614                           
   615                           ;pid.c: 139: TMR2ON = 1;
   616  007898  84CA               	bsf	4042,2,c	;volatile
   617                           
   618                           ;pid.c: 140: TRISC2 = 0;
   619  00789A  9494               	bcf	3988,2,c	;volatile
   620  00789C  0012               	return		;funcret
   621  00789E                     __end_of_PWM1_Start:
   622                           	opt stack 0
   623                           prodh	equ	0xFF4
   624                           prodl	equ	0xFF3
   625                           
   626 ;; *************** function _PWM1_Init *****************
   627 ;; Defined at:
   628 ;;		line 96 in file "pid.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;  fre             4   14[COMRAM] long 
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  2   14[COMRAM] int 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   642 ;;      Params:         4       0       0       0       0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0
   644 ;;      Temps:          4       0       0       0       0       0       0       0       0
   645 ;;      Totals:         8       0       0       0       0       0       0       0       0
   646 ;;Total ram usage:        8 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    1
   649 ;; This function calls:
   650 ;;		___aldiv
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text3
   657  0079B4                     __ptext3:
   658                           	opt stack 0
   659  0079B4                     _PWM1_Init:
   660                           	opt stack 29
   661                           
   662                           ;pid.c: 98: PR2 = (48000000/(fre*4*4))-1;
   663                           
   664                           ;incstack = 0
   665  0079B4  0E00               	movlw	0
   666  0079B6  6E01               	movwf	___aldiv@dividend,c
   667  0079B8  0E6C               	movlw	108
   668  0079BA  6E02               	movwf	___aldiv@dividend+1,c
   669  0079BC  0EDC               	movlw	220
   670  0079BE  6E03               	movwf	___aldiv@dividend+2,c
   671  0079C0  0E02               	movlw	2
   672  0079C2  6E04               	movwf	___aldiv@dividend+3,c
   673  0079C4  C00F  F013         	movff	PWM1_Init@fre,??_PWM1_Init
   674  0079C8  C010  F014         	movff	PWM1_Init@fre+1,??_PWM1_Init+1
   675  0079CC  C011  F015         	movff	PWM1_Init@fre+2,??_PWM1_Init+2
   676  0079D0  C012  F016         	movff	PWM1_Init@fre+3,??_PWM1_Init+3
   677  0079D4  0E02               	movlw	2
   678  0079D6                     u795:
   679  0079D6  90D8               	bcf	status,0,c
   680  0079D8  3613               	rlcf	??_PWM1_Init,f,c
   681  0079DA  3614               	rlcf	??_PWM1_Init+1,f,c
   682  0079DC  3615               	rlcf	??_PWM1_Init+2,f,c
   683  0079DE  3616               	rlcf	??_PWM1_Init+3,f,c
   684  0079E0  2EE8               	decfsz	wreg,f,c
   685  0079E2  D7F9               	goto	u795
   686  0079E4  0E02               	movlw	2
   687  0079E6                     u805:
   688  0079E6  90D8               	bcf	status,0,c
   689  0079E8  3613               	rlcf	??_PWM1_Init,f,c
   690  0079EA  3614               	rlcf	??_PWM1_Init+1,f,c
   691  0079EC  3615               	rlcf	??_PWM1_Init+2,f,c
   692  0079EE  3616               	rlcf	??_PWM1_Init+3,f,c
   693  0079F0  2EE8               	decfsz	wreg,f,c
   694  0079F2  D7F9               	goto	u805
   695  0079F4  C013  F005         	movff	??_PWM1_Init,___aldiv@divisor
   696  0079F8  C014  F006         	movff	??_PWM1_Init+1,___aldiv@divisor+1
   697  0079FC  C015  F007         	movff	??_PWM1_Init+2,___aldiv@divisor+2
   698  007A00  C016  F008         	movff	??_PWM1_Init+3,___aldiv@divisor+3
   699  007A04  ECAD  F03D         	call	___aldiv	;wreg free
   700  007A08  0401               	decf	?___aldiv,w,c
   701  007A0A  6ECB               	movwf	4043,c	;volatile
   702                           
   703                           ;pid.c: 99: freq = fre;
   704  007A0C  C00F  F055         	movff	PWM1_Init@fre,_freq
   705  007A10  C010  F056         	movff	PWM1_Init@fre+1,_freq+1
   706  007A14  C011  F057         	movff	PWM1_Init@fre+2,_freq+2
   707  007A18  C012  F058         	movff	PWM1_Init@fre+3,_freq+3
   708  007A1C  0012               	return		;funcret
   709  007A1E                     __end_of_PWM1_Init:
   710                           	opt stack 0
   711                           prodh	equ	0xFF4
   712                           prodl	equ	0xFF3
   713                           wreg	equ	0xFE8
   714                           status	equ	0xFD8
   715                           
   716 ;; *************** function _PWM1_Duty *****************
   717 ;; Defined at:
   718 ;;		line 106 in file "pid.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  duty            2   56[COMRAM] unsigned int 
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  2   56[COMRAM] int 
   725 ;; Registers used:
   726 ;;		wreg, status,2, status,0, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   732 ;;      Params:         2       0       0       0       0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0       0       0       0       0
   734 ;;      Temps:          2       0       0       0       0       0       0       0       0
   735 ;;      Totals:         4       0       0       0       0       0       0       0       0
   736 ;;Total ram usage:        4 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; Hardware stack levels required when called:    2
   739 ;; This function calls:
   740 ;;		_PWM_Max_Duty
   741 ;;		___awtoft
   742 ;;		___ftdiv
   743 ;;		___ftmul
   744 ;;		___fttol
   745 ;;		___lwtoft
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text4
   752  007A1E                     __ptext4:
   753                           	opt stack 0
   754  007A1E                     _PWM1_Duty:
   755                           	opt stack 28
   756                           
   757                           ;pid.c: 108: if(duty<1024)
   758                           
   759                           ;incstack = 0
   760  007A1E  0E04               	movlw	4
   761  007A20  5C3A               	subwf	PWM1_Duty@duty+1,w,c
   762  007A22  B0D8               	btfsc	status,0,c
   763  007A24  0012               	return	
   764                           
   765                           ;pid.c: 109: {
   766                           ;pid.c: 110: duty = ((float)duty/1023)*PWM_Max_Duty();
   767  007A26  ECB3  F03C         	call	_PWM_Max_Duty	;wreg free
   768  007A2A  C00F  F015         	movff	?_PWM_Max_Duty,___awtoft@c
   769  007A2E  C010  F016         	movff	?_PWM_Max_Duty+1,___awtoft@c+1
   770  007A32  EC74  F03C         	call	___awtoft	;wreg free
   771  007A36  C015  F01E         	movff	?___awtoft,___ftmul@f2
   772  007A3A  C016  F01F         	movff	?___awtoft+1,___ftmul@f2+1
   773  007A3E  C017  F020         	movff	?___awtoft+2,___ftmul@f2+2
   774  007A42  0EC0               	movlw	192
   775  007A44  6E0F               	movwf	___ftdiv@f2,c
   776  007A46  0E7F               	movlw	127
   777  007A48  6E10               	movwf	___ftdiv@f2+1,c
   778  007A4A  0E44               	movlw	68
   779  007A4C  6E11               	movwf	___ftdiv@f2+2,c
   780  007A4E  C039  F009         	movff	PWM1_Duty@duty,___lwtoft@c
   781  007A52  C03A  F00A         	movff	PWM1_Duty@duty+1,___lwtoft@c+1
   782  007A56  EC4F  F03C         	call	___lwtoft	;wreg free
   783  007A5A  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
   784  007A5E  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
   785  007A62  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
   786  007A66  EC13  F03E         	call	___ftdiv	;wreg free
   787  007A6A  C00C  F01B         	movff	?___ftdiv,___ftmul@f1
   788  007A6E  C00D  F01C         	movff	?___ftdiv+1,___ftmul@f1+1
   789  007A72  C00E  F01D         	movff	?___ftdiv+2,___ftmul@f1+2
   790  007A76  EC86  F03E         	call	___ftmul	;wreg free
   791  007A7A  C01B  F02A         	movff	?___ftmul,___fttol@f1
   792  007A7E  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   793  007A82  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   794  007A86  EC00  F03F         	call	___fttol	;wreg free
   795  007A8A  C02A  F039         	movff	?___fttol,PWM1_Duty@duty
   796  007A8E  C02B  F03A         	movff	?___fttol+1,PWM1_Duty@duty+1
   797                           
   798                           ;pid.c: 112: CCPR1L = duty>>2;
   799  007A92  C039  F03B         	movff	PWM1_Duty@duty,??_PWM1_Duty
   800  007A96  C03A  F03C         	movff	PWM1_Duty@duty+1,??_PWM1_Duty+1
   801  007A9A  90D8               	bcf	status,0,c
   802  007A9C  323C               	rrcf	??_PWM1_Duty+1,f,c
   803  007A9E  323B               	rrcf	??_PWM1_Duty,f,c
   804  007AA0  90D8               	bcf	status,0,c
   805  007AA2  323C               	rrcf	??_PWM1_Duty+1,f,c
   806  007AA4  323B               	rrcf	??_PWM1_Duty,f,c
   807  007AA6  503B               	movf	??_PWM1_Duty,w,c
   808  007AA8  6EBE               	movwf	4030,c	;volatile
   809  007AAA  0012               	return	
   810  007AAC                     __end_of_PWM1_Duty:
   811                           	opt stack 0
   812                           prodh	equ	0xFF4
   813                           prodl	equ	0xFF3
   814                           wreg	equ	0xFE8
   815                           status	equ	0xFD8
   816                           
   817 ;; *************** function ___lwtoft *****************
   818 ;; Defined at:
   819 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  c               2    8[COMRAM] unsigned int 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  3    8[COMRAM] float 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   833 ;;      Params:         3       0       0       0       0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0
   836 ;;      Totals:         3       0       0       0       0       0       0       0       0
   837 ;;Total ram usage:        3 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; Hardware stack levels required when called:    1
   840 ;; This function calls:
   841 ;;		___ftpack
   842 ;; This function is called by:
   843 ;;		_PWM1_Duty
   844 ;;		_PWM2_Duty
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text5
   849  00789E                     __ptext5:
   850                           	opt stack 0
   851  00789E                     ___lwtoft:
   852                           	opt stack 28
   853                           
   854                           ;incstack = 0
   855  00789E  C009  F001         	movff	___lwtoft@c,___ftpack@arg
   856  0078A2  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
   857  0078A6  6A03               	clrf	___ftpack@arg+2,c
   858  0078A8  0E8E               	movlw	142
   859  0078AA  6E04               	movwf	___ftpack@exp,c
   860  0078AC  0E00               	movlw	0
   861  0078AE  6E05               	movwf	___ftpack@sign,c
   862  0078B0  EC56  F03D         	call	___ftpack	;wreg free
   863  0078B4  C001  F009         	movff	?___ftpack,?___lwtoft
   864  0078B8  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
   865  0078BC  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
   866  0078C0  0012               	return	
   867  0078C2                     __end_of___lwtoft:
   868                           	opt stack 0
   869                           prodh	equ	0xFF4
   870                           prodl	equ	0xFF3
   871                           wreg	equ	0xFE8
   872                           status	equ	0xFD8
   873                           
   874 ;; *************** function ___fttol *****************
   875 ;; Defined at:
   876 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  f1              3   41[COMRAM] float 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  lval            4   51[COMRAM] unsigned long 
   881 ;;  exp1            1   55[COMRAM] unsigned char 
   882 ;;  sign1           1   50[COMRAM] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  4   41[COMRAM] long 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   892 ;;      Params:         4       0       0       0       0       0       0       0       0
   893 ;;      Locals:         6       0       0       0       0       0       0       0       0
   894 ;;      Temps:          5       0       0       0       0       0       0       0       0
   895 ;;      Totals:        15       0       0       0       0       0       0       0       0
   896 ;;Total ram usage:       15 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_PWM1_Duty
   902 ;;		_PWM2_Duty
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text6
   907  007E00                     __ptext6:
   908                           	opt stack 0
   909  007E00                     ___fttol:
   910                           	opt stack 29
   911                           
   912                           ;incstack = 0
   913  007E00  C02C  F02E         	movff	___fttol@f1+2,??___fttol
   914  007E04  6A2F               	clrf	(??___fttol+1)& (0+255),c
   915  007E06  6A30               	clrf	(??___fttol+2)& (0+255),c
   916  007E08  342B               	rlcf	___fttol@f1+1,w,c
   917  007E0A  362E               	rlcf	??___fttol& (0+255),f,c
   918  007E0C  E301               	bnc	u711
   919  007E0E  802F               	bsf	(??___fttol+1)& (0+255),0,c
   920  007E10                     u711:
   921  007E10  502E               	movf	??___fttol,w,c
   922  007E12  6E38               	movwf	___fttol@exp1,c
   923  007E14  5038               	movf	___fttol@exp1,w,c
   924  007E16  A4D8               	btfss	status,2,c
   925  007E18  D009               	goto	l1220
   926  007E1A  0E00               	movlw	0
   927  007E1C  6E2A               	movwf	?___fttol,c
   928  007E1E  0E00               	movlw	0
   929  007E20  6E2B               	movwf	?___fttol+1,c
   930  007E22  0E00               	movlw	0
   931  007E24  6E2C               	movwf	?___fttol+2,c
   932  007E26  0E00               	movlw	0
   933  007E28  6E2D               	movwf	?___fttol+3,c
   934  007E2A  0012               	return	
   935  007E2C                     l1220:
   936  007E2C  0E17               	movlw	23
   937  007E2E  6E2E               	movwf	??___fttol& (0+255),c
   938  007E30  C02A  F02F         	movff	___fttol@f1,??___fttol+1
   939  007E34  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
   940  007E38  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
   941  007E3C  282E               	incf	??___fttol,w,c
   942  007E3E  6E32               	movwf	(??___fttol+4)& (0+255),c
   943  007E40  D004               	goto	u730
   944  007E42                     u735:
   945  007E42  90D8               	bcf	status,0,c
   946  007E44  3231               	rrcf	??___fttol+3,f,c
   947  007E46  3230               	rrcf	??___fttol+2,f,c
   948  007E48  322F               	rrcf	??___fttol+1,f,c
   949  007E4A                     u730:
   950  007E4A  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
   951  007E4C  D7FA               	goto	u735
   952  007E4E  502F               	movf	??___fttol+1,w,c
   953  007E50  6E33               	movwf	___fttol@sign1,c
   954  007E52  8E2B               	bsf	___fttol@f1+1,7,c
   955  007E54  0EFF               	movlw	255
   956  007E56  162A               	andwf	___fttol@f1,f,c
   957  007E58  0EFF               	movlw	255
   958  007E5A  162B               	andwf	___fttol@f1+1,f,c
   959  007E5C  0E00               	movlw	0
   960  007E5E  162C               	andwf	___fttol@f1+2,f,c
   961  007E60  502A               	movf	___fttol@f1,w,c
   962  007E62  6E34               	movwf	___fttol@lval,c
   963  007E64  502B               	movf	___fttol@f1+1,w,c
   964  007E66  6E35               	movwf	___fttol@lval+1,c
   965  007E68  502C               	movf	___fttol@f1+2,w,c
   966  007E6A  6E36               	movwf	___fttol@lval+2,c
   967  007E6C  6A37               	clrf	___fttol@lval+3,c
   968  007E6E  0E8E               	movlw	142
   969  007E70  5E38               	subwf	___fttol@exp1,f,c
   970  007E72  AE38               	btfss	___fttol@exp1,7,c
   971  007E74  D016               	goto	l1242
   972  007E76  5038               	movf	___fttol@exp1,w,c
   973  007E78  0A80               	xorlw	128
   974  007E7A  0F8F               	addlw	143
   975  007E7C  B0D8               	btfsc	status,0,c
   976  007E7E  D009               	goto	l1238
   977  007E80  0E00               	movlw	0
   978  007E82  6E2A               	movwf	?___fttol,c
   979  007E84  0E00               	movlw	0
   980  007E86  6E2B               	movwf	?___fttol+1,c
   981  007E88  0E00               	movlw	0
   982  007E8A  6E2C               	movwf	?___fttol+2,c
   983  007E8C  0E00               	movlw	0
   984  007E8E  6E2D               	movwf	?___fttol+3,c
   985  007E90  0012               	return	
   986  007E92                     l1238:
   987  007E92  90D8               	bcf	status,0,c
   988  007E94  3237               	rrcf	___fttol@lval+3,f,c
   989  007E96  3236               	rrcf	___fttol@lval+2,f,c
   990  007E98  3235               	rrcf	___fttol@lval+1,f,c
   991  007E9A  3234               	rrcf	___fttol@lval,f,c
   992  007E9C  3E38               	incfsz	___fttol@exp1,f,c
   993  007E9E  D7F9               	goto	l1238
   994  007EA0  D015               	goto	l1252
   995  007EA2                     l1242:
   996  007EA2  0E17               	movlw	23
   997  007EA4  6438               	cpfsgt	___fttol@exp1,c
   998  007EA6  D00F               	goto	l1250
   999  007EA8  0E00               	movlw	0
  1000  007EAA  6E2A               	movwf	?___fttol,c
  1001  007EAC  0E00               	movlw	0
  1002  007EAE  6E2B               	movwf	?___fttol+1,c
  1003  007EB0  0E00               	movlw	0
  1004  007EB2  6E2C               	movwf	?___fttol+2,c
  1005  007EB4  0E00               	movlw	0
  1006  007EB6  6E2D               	movwf	?___fttol+3,c
  1007  007EB8  0012               	return	
  1008  007EBA                     l1248:
  1009  007EBA  90D8               	bcf	status,0,c
  1010  007EBC  3634               	rlcf	___fttol@lval,f,c
  1011  007EBE  3635               	rlcf	___fttol@lval+1,f,c
  1012  007EC0  3636               	rlcf	___fttol@lval+2,f,c
  1013  007EC2  3637               	rlcf	___fttol@lval+3,f,c
  1014  007EC4  0638               	decf	___fttol@exp1,f,c
  1015  007EC6                     l1250:
  1016  007EC6  5038               	movf	___fttol@exp1,w,c
  1017  007EC8  A4D8               	btfss	status,2,c
  1018  007ECA  D7F7               	goto	l1248
  1019  007ECC                     l1252:
  1020  007ECC  5033               	movf	___fttol@sign1,w,c
  1021  007ECE  B4D8               	btfsc	status,2,c
  1022  007ED0  D008               	goto	l1256
  1023  007ED2  1E37               	comf	___fttol@lval+3,f,c
  1024  007ED4  1E36               	comf	___fttol@lval+2,f,c
  1025  007ED6  1E35               	comf	___fttol@lval+1,f,c
  1026  007ED8  6C34               	negf	___fttol@lval,c
  1027  007EDA  0E00               	movlw	0
  1028  007EDC  2235               	addwfc	___fttol@lval+1,f,c
  1029  007EDE  2236               	addwfc	___fttol@lval+2,f,c
  1030  007EE0  2237               	addwfc	___fttol@lval+3,f,c
  1031  007EE2                     l1256:
  1032  007EE2  C034  F02A         	movff	___fttol@lval,?___fttol
  1033  007EE6  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
  1034  007EEA  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
  1035  007EEE  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
  1036  007EF2  0012               	return	
  1037  007EF4                     __end_of___fttol:
  1038                           	opt stack 0
  1039                           prodh	equ	0xFF4
  1040                           prodl	equ	0xFF3
  1041                           wreg	equ	0xFE8
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function ___ftmul *****************
  1045 ;; Defined at:
  1046 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  f1              3   26[COMRAM] float 
  1049 ;;  f2              3   29[COMRAM] float 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  1052 ;;  sign            1   40[COMRAM] unsigned char 
  1053 ;;  cntr            1   39[COMRAM] unsigned char 
  1054 ;;  exp             1   35[COMRAM] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  3   26[COMRAM] float 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1064 ;;      Params:         6       0       0       0       0       0       0       0       0
  1065 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1066 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1067 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1068 ;;Total ram usage:       15 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    1
  1071 ;; This function calls:
  1072 ;;		___ftpack
  1073 ;; This function is called by:
  1074 ;;		_PWM1_Duty
  1075 ;;		_PWM2_Duty
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text7
  1080  007D0C                     __ptext7:
  1081                           	opt stack 0
  1082  007D0C                     ___ftmul:
  1083                           	opt stack 28
  1084                           
  1085                           ;incstack = 0
  1086  007D0C  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  1087  007D10  6A22               	clrf	(??___ftmul+1)& (0+255),c
  1088  007D12  6A23               	clrf	(??___ftmul+2)& (0+255),c
  1089  007D14  341C               	rlcf	___ftmul@f1+1,w,c
  1090  007D16  3621               	rlcf	??___ftmul& (0+255),f,c
  1091  007D18  E301               	bnc	u641
  1092  007D1A  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  1093  007D1C                     u641:
  1094  007D1C  5021               	movf	??___ftmul,w,c
  1095  007D1E  6E24               	movwf	___ftmul@exp,c
  1096  007D20  5024               	movf	___ftmul@exp,w,c
  1097  007D22  A4D8               	btfss	status,2,c
  1098  007D24  D007               	goto	l1160
  1099  007D26  0E00               	movlw	0
  1100  007D28  6E1B               	movwf	?___ftmul,c
  1101  007D2A  0E00               	movlw	0
  1102  007D2C  6E1C               	movwf	?___ftmul+1,c
  1103  007D2E  0E00               	movlw	0
  1104  007D30  6E1D               	movwf	?___ftmul+2,c
  1105  007D32  0012               	return	
  1106  007D34                     l1160:
  1107  007D34  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  1108  007D38  6A22               	clrf	(??___ftmul+1)& (0+255),c
  1109  007D3A  6A23               	clrf	(??___ftmul+2)& (0+255),c
  1110  007D3C  341F               	rlcf	___ftmul@f2+1,w,c
  1111  007D3E  3621               	rlcf	??___ftmul& (0+255),f,c
  1112  007D40  E301               	bnc	u661
  1113  007D42  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  1114  007D44                     u661:
  1115  007D44  5021               	movf	??___ftmul,w,c
  1116  007D46  6E29               	movwf	___ftmul@sign,c
  1117  007D48  5029               	movf	___ftmul@sign,w,c
  1118  007D4A  A4D8               	btfss	status,2,c
  1119  007D4C  D007               	goto	l1166
  1120  007D4E  0E00               	movlw	0
  1121  007D50  6E1B               	movwf	?___ftmul,c
  1122  007D52  0E00               	movlw	0
  1123  007D54  6E1C               	movwf	?___ftmul+1,c
  1124  007D56  0E00               	movlw	0
  1125  007D58  6E1D               	movwf	?___ftmul+2,c
  1126  007D5A  0012               	return	
  1127  007D5C                     l1166:
  1128  007D5C  5029               	movf	___ftmul@sign,w,c
  1129  007D5E  0F7B               	addlw	123
  1130  007D60  2624               	addwf	___ftmul@exp,f,c
  1131  007D62  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  1132  007D66  5020               	movf	___ftmul@f2+2,w,c
  1133  007D68  1A29               	xorwf	___ftmul@sign,f,c
  1134  007D6A  0E80               	movlw	128
  1135  007D6C  1629               	andwf	___ftmul@sign,f,c
  1136  007D6E  8E1C               	bsf	___ftmul@f1+1,7,c
  1137  007D70  8E1F               	bsf	___ftmul@f2+1,7,c
  1138  007D72  0EFF               	movlw	255
  1139  007D74  161E               	andwf	___ftmul@f2,f,c
  1140  007D76  0EFF               	movlw	255
  1141  007D78  161F               	andwf	___ftmul@f2+1,f,c
  1142  007D7A  0E00               	movlw	0
  1143  007D7C  1620               	andwf	___ftmul@f2+2,f,c
  1144  007D7E  0E00               	movlw	0
  1145  007D80  6E25               	movwf	___ftmul@f3_as_product,c
  1146  007D82  0E00               	movlw	0
  1147  007D84  6E26               	movwf	___ftmul@f3_as_product+1,c
  1148  007D86  0E00               	movlw	0
  1149  007D88  6E27               	movwf	___ftmul@f3_as_product+2,c
  1150  007D8A  0E07               	movlw	7
  1151  007D8C  6E28               	movwf	___ftmul@cntr,c
  1152  007D8E                     l1180:
  1153  007D8E  A01B               	btfss	___ftmul@f1,0,c
  1154  007D90  D006               	goto	l1184
  1155  007D92  501E               	movf	___ftmul@f2,w,c
  1156  007D94  2625               	addwf	___ftmul@f3_as_product,f,c
  1157  007D96  501F               	movf	___ftmul@f2+1,w,c
  1158  007D98  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  1159  007D9A  5020               	movf	___ftmul@f2+2,w,c
  1160  007D9C  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  1161  007D9E                     l1184:
  1162  007D9E  90D8               	bcf	status,0,c
  1163  007DA0  321D               	rrcf	___ftmul@f1+2,f,c
  1164  007DA2  321C               	rrcf	___ftmul@f1+1,f,c
  1165  007DA4  321B               	rrcf	___ftmul@f1,f,c
  1166  007DA6  90D8               	bcf	status,0,c
  1167  007DA8  361E               	rlcf	___ftmul@f2,f,c
  1168  007DAA  361F               	rlcf	___ftmul@f2+1,f,c
  1169  007DAC  3620               	rlcf	___ftmul@f2+2,f,c
  1170  007DAE  2E28               	decfsz	___ftmul@cntr,f,c
  1171  007DB0  D7EE               	goto	l1180
  1172  007DB2  0E09               	movlw	9
  1173  007DB4  6E28               	movwf	___ftmul@cntr,c
  1174  007DB6                     l1190:
  1175  007DB6  A01B               	btfss	___ftmul@f1,0,c
  1176  007DB8  D006               	goto	l1194
  1177  007DBA  501E               	movf	___ftmul@f2,w,c
  1178  007DBC  2625               	addwf	___ftmul@f3_as_product,f,c
  1179  007DBE  501F               	movf	___ftmul@f2+1,w,c
  1180  007DC0  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  1181  007DC2  5020               	movf	___ftmul@f2+2,w,c
  1182  007DC4  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  1183  007DC6                     l1194:
  1184  007DC6  90D8               	bcf	status,0,c
  1185  007DC8  321D               	rrcf	___ftmul@f1+2,f,c
  1186  007DCA  321C               	rrcf	___ftmul@f1+1,f,c
  1187  007DCC  321B               	rrcf	___ftmul@f1,f,c
  1188  007DCE  90D8               	bcf	status,0,c
  1189  007DD0  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  1190  007DD2  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  1191  007DD4  3225               	rrcf	___ftmul@f3_as_product,f,c
  1192  007DD6  2E28               	decfsz	___ftmul@cntr,f,c
  1193  007DD8  D7EE               	goto	l1190
  1194  007DDA  C025  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1195  007DDE  C026  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1196  007DE2  C027  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1197  007DE6  C024  F004         	movff	___ftmul@exp,___ftpack@exp
  1198  007DEA  C029  F005         	movff	___ftmul@sign,___ftpack@sign
  1199  007DEE  EC56  F03D         	call	___ftpack	;wreg free
  1200  007DF2  C001  F01B         	movff	?___ftpack,?___ftmul
  1201  007DF6  C002  F01C         	movff	?___ftpack+1,?___ftmul+1
  1202  007DFA  C003  F01D         	movff	?___ftpack+2,?___ftmul+2
  1203  007DFE  0012               	return	
  1204  007E00                     __end_of___ftmul:
  1205                           	opt stack 0
  1206                           prodh	equ	0xFF4
  1207                           prodl	equ	0xFF3
  1208                           wreg	equ	0xFE8
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function ___ftdiv *****************
  1212 ;; Defined at:
  1213 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  f1              3   11[COMRAM] float 
  1216 ;;  f2              3   14[COMRAM] float 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  f3              3   21[COMRAM] float 
  1219 ;;  sign            1   25[COMRAM] unsigned char 
  1220 ;;  exp             1   24[COMRAM] unsigned char 
  1221 ;;  cntr            1   20[COMRAM] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  3   11[COMRAM] float 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1231 ;;      Params:         6       0       0       0       0       0       0       0       0
  1232 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1233 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1234 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1235 ;;Total ram usage:       15 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    1
  1238 ;; This function calls:
  1239 ;;		___ftpack
  1240 ;; This function is called by:
  1241 ;;		_PWM1_Duty
  1242 ;;		_PWM2_Duty
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text8
  1247  007C26                     __ptext8:
  1248                           	opt stack 0
  1249  007C26                     ___ftdiv:
  1250                           	opt stack 28
  1251                           
  1252                           ;incstack = 0
  1253  007C26  C00E  F012         	movff	___ftdiv@f1+2,??___ftdiv
  1254  007C2A  6A13               	clrf	(??___ftdiv+1)& (0+255),c
  1255  007C2C  6A14               	clrf	(??___ftdiv+2)& (0+255),c
  1256  007C2E  340D               	rlcf	___ftdiv@f1+1,w,c
  1257  007C30  3612               	rlcf	??___ftdiv& (0+255),f,c
  1258  007C32  E301               	bnc	u591
  1259  007C34  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  1260  007C36                     u591:
  1261  007C36  5012               	movf	??___ftdiv,w,c
  1262  007C38  6E19               	movwf	___ftdiv@exp,c
  1263  007C3A  5019               	movf	___ftdiv@exp,w,c
  1264  007C3C  A4D8               	btfss	status,2,c
  1265  007C3E  D007               	goto	l1114
  1266  007C40  0E00               	movlw	0
  1267  007C42  6E0C               	movwf	?___ftdiv,c
  1268  007C44  0E00               	movlw	0
  1269  007C46  6E0D               	movwf	?___ftdiv+1,c
  1270  007C48  0E00               	movlw	0
  1271  007C4A  6E0E               	movwf	?___ftdiv+2,c
  1272  007C4C  0012               	return	
  1273  007C4E                     l1114:
  1274  007C4E  C011  F012         	movff	___ftdiv@f2+2,??___ftdiv
  1275  007C52  6A13               	clrf	(??___ftdiv+1)& (0+255),c
  1276  007C54  6A14               	clrf	(??___ftdiv+2)& (0+255),c
  1277  007C56  3410               	rlcf	___ftdiv@f2+1,w,c
  1278  007C58  3612               	rlcf	??___ftdiv& (0+255),f,c
  1279  007C5A  E301               	bnc	u611
  1280  007C5C  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  1281  007C5E                     u611:
  1282  007C5E  5012               	movf	??___ftdiv,w,c
  1283  007C60  6E1A               	movwf	___ftdiv@sign,c
  1284  007C62  501A               	movf	___ftdiv@sign,w,c
  1285  007C64  A4D8               	btfss	status,2,c
  1286  007C66  D007               	goto	l1120
  1287  007C68  0E00               	movlw	0
  1288  007C6A  6E0C               	movwf	?___ftdiv,c
  1289  007C6C  0E00               	movlw	0
  1290  007C6E  6E0D               	movwf	?___ftdiv+1,c
  1291  007C70  0E00               	movlw	0
  1292  007C72  6E0E               	movwf	?___ftdiv+2,c
  1293  007C74  0012               	return	
  1294  007C76                     l1120:
  1295  007C76  0E00               	movlw	0
  1296  007C78  6E16               	movwf	___ftdiv@f3,c
  1297  007C7A  0E00               	movlw	0
  1298  007C7C  6E17               	movwf	___ftdiv@f3+1,c
  1299  007C7E  0E00               	movlw	0
  1300  007C80  6E18               	movwf	___ftdiv@f3+2,c
  1301  007C82  501A               	movf	___ftdiv@sign,w,c
  1302  007C84  0F89               	addlw	137
  1303  007C86  5E19               	subwf	___ftdiv@exp,f,c
  1304  007C88  C00E  F01A         	movff	___ftdiv@f1+2,___ftdiv@sign
  1305  007C8C  5011               	movf	___ftdiv@f2+2,w,c
  1306  007C8E  1A1A               	xorwf	___ftdiv@sign,f,c
  1307  007C90  0E80               	movlw	128
  1308  007C92  161A               	andwf	___ftdiv@sign,f,c
  1309  007C94  8E0D               	bsf	___ftdiv@f1+1,7,c
  1310  007C96  0EFF               	movlw	255
  1311  007C98  160C               	andwf	___ftdiv@f1,f,c
  1312  007C9A  0EFF               	movlw	255
  1313  007C9C  160D               	andwf	___ftdiv@f1+1,f,c
  1314  007C9E  0E00               	movlw	0
  1315  007CA0  160E               	andwf	___ftdiv@f1+2,f,c
  1316  007CA2  8E10               	bsf	___ftdiv@f2+1,7,c
  1317  007CA4  0EFF               	movlw	255
  1318  007CA6  160F               	andwf	___ftdiv@f2,f,c
  1319  007CA8  0EFF               	movlw	255
  1320  007CAA  1610               	andwf	___ftdiv@f2+1,f,c
  1321  007CAC  0E00               	movlw	0
  1322  007CAE  1611               	andwf	___ftdiv@f2+2,f,c
  1323  007CB0  0E18               	movlw	24
  1324  007CB2  6E15               	movwf	___ftdiv@cntr,c
  1325  007CB4                     l1140:
  1326  007CB4  90D8               	bcf	status,0,c
  1327  007CB6  3616               	rlcf	___ftdiv@f3,f,c
  1328  007CB8  3617               	rlcf	___ftdiv@f3+1,f,c
  1329  007CBA  3618               	rlcf	___ftdiv@f3+2,f,c
  1330  007CBC  500F               	movf	___ftdiv@f2,w,c
  1331  007CBE  5C0C               	subwf	___ftdiv@f1,w,c
  1332  007CC0  5010               	movf	___ftdiv@f2+1,w,c
  1333  007CC2  580D               	subwfb	___ftdiv@f1+1,w,c
  1334  007CC4  5011               	movf	___ftdiv@f2+2,w,c
  1335  007CC6  580E               	subwfb	___ftdiv@f1+2,w,c
  1336  007CC8  A0D8               	btfss	status,0,c
  1337  007CCA  D007               	goto	l369
  1338  007CCC  500F               	movf	___ftdiv@f2,w,c
  1339  007CCE  5E0C               	subwf	___ftdiv@f1,f,c
  1340  007CD0  5010               	movf	___ftdiv@f2+1,w,c
  1341  007CD2  5A0D               	subwfb	___ftdiv@f1+1,f,c
  1342  007CD4  5011               	movf	___ftdiv@f2+2,w,c
  1343  007CD6  5A0E               	subwfb	___ftdiv@f1+2,f,c
  1344  007CD8  8016               	bsf	___ftdiv@f3,0,c
  1345  007CDA                     l369:
  1346  007CDA  90D8               	bcf	status,0,c
  1347  007CDC  360C               	rlcf	___ftdiv@f1,f,c
  1348  007CDE  360D               	rlcf	___ftdiv@f1+1,f,c
  1349  007CE0  360E               	rlcf	___ftdiv@f1+2,f,c
  1350  007CE2  2E15               	decfsz	___ftdiv@cntr,f,c
  1351  007CE4  D7E7               	goto	l1140
  1352  007CE6  C016  F001         	movff	___ftdiv@f3,___ftpack@arg
  1353  007CEA  C017  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1354  007CEE  C018  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1355  007CF2  C019  F004         	movff	___ftdiv@exp,___ftpack@exp
  1356  007CF6  C01A  F005         	movff	___ftdiv@sign,___ftpack@sign
  1357  007CFA  EC56  F03D         	call	___ftpack	;wreg free
  1358  007CFE  C001  F00C         	movff	?___ftpack,?___ftdiv
  1359  007D02  C002  F00D         	movff	?___ftpack+1,?___ftdiv+1
  1360  007D06  C003  F00E         	movff	?___ftpack+2,?___ftdiv+2
  1361  007D0A  0012               	return	
  1362  007D0C                     __end_of___ftdiv:
  1363                           	opt stack 0
  1364                           prodh	equ	0xFF4
  1365                           prodl	equ	0xFF3
  1366                           wreg	equ	0xFE8
  1367                           status	equ	0xFD8
  1368                           
  1369 ;; *************** function ___awtoft *****************
  1370 ;; Defined at:
  1371 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  c               2   20[COMRAM] int 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  sign            1   23[COMRAM] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  3   20[COMRAM] float 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1385 ;;      Params:         3       0       0       0       0       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1388 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1389 ;;Total ram usage:        4 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    1
  1392 ;; This function calls:
  1393 ;;		___ftpack
  1394 ;; This function is called by:
  1395 ;;		_PWM1_Duty
  1396 ;;		_PWM2_Duty
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text9
  1401  0078E8                     __ptext9:
  1402                           	opt stack 0
  1403  0078E8                     ___awtoft:
  1404                           	opt stack 28
  1405                           
  1406                           ;incstack = 0
  1407  0078E8  0E00               	movlw	0
  1408  0078EA  6E18               	movwf	___awtoft@sign,c
  1409  0078EC  AE16               	btfss	___awtoft@c+1,7,c
  1410  0078EE  D006               	goto	l1210
  1411  0078F0  6C15               	negf	___awtoft@c,c
  1412  0078F2  1E16               	comf	___awtoft@c+1,f,c
  1413  0078F4  B0D8               	btfsc	status,0,c
  1414  0078F6  2A16               	incf	___awtoft@c+1,f,c
  1415  0078F8  0E01               	movlw	1
  1416  0078FA  6E18               	movwf	___awtoft@sign,c
  1417  0078FC                     l1210:
  1418  0078FC  C015  F001         	movff	___awtoft@c,___ftpack@arg
  1419  007900  C016  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1420  007904  6A03               	clrf	___ftpack@arg+2,c
  1421  007906  0E8E               	movlw	142
  1422  007908  6E04               	movwf	___ftpack@exp,c
  1423  00790A  C018  F005         	movff	___awtoft@sign,___ftpack@sign
  1424  00790E  EC56  F03D         	call	___ftpack	;wreg free
  1425  007912  C001  F015         	movff	?___ftpack,?___awtoft
  1426  007916  C002  F016         	movff	?___ftpack+1,?___awtoft+1
  1427  00791A  C003  F017         	movff	?___ftpack+2,?___awtoft+2
  1428  00791E  0012               	return	
  1429  007920                     __end_of___awtoft:
  1430                           	opt stack 0
  1431                           prodh	equ	0xFF4
  1432                           prodl	equ	0xFF3
  1433                           wreg	equ	0xFE8
  1434                           status	equ	0xFD8
  1435                           
  1436 ;; *************** function ___ftpack *****************
  1437 ;; Defined at:
  1438 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  arg             3    0[COMRAM] unsigned um
  1441 ;;  exp             1    3[COMRAM] unsigned char 
  1442 ;;  sign            1    4[COMRAM] unsigned char 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  3    0[COMRAM] float 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1454 ;;      Params:         5       0       0       0       0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1456 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1457 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1458 ;;Total ram usage:        8 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		___awtoft
  1464 ;;		___ftdiv
  1465 ;;		___ftmul
  1466 ;;		___lwtoft
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text10
  1471  007AAC                     __ptext10:
  1472                           	opt stack 0
  1473  007AAC                     ___ftpack:
  1474                           	opt stack 28
  1475                           
  1476                           ;incstack = 0
  1477  007AAC  5004               	movf	___ftpack@exp,w,c
  1478  007AAE  B4D8               	btfsc	status,2,c
  1479  007AB0  D005               	goto	l1028
  1480  007AB2  5001               	movf	___ftpack@arg,w,c
  1481  007AB4  1002               	iorwf	___ftpack@arg+1,w,c
  1482  007AB6  1003               	iorwf	___ftpack@arg+2,w,c
  1483  007AB8  A4D8               	btfss	status,2,c
  1484  007ABA  D00C               	goto	l1034
  1485  007ABC                     l1028:
  1486  007ABC  0E00               	movlw	0
  1487  007ABE  6E01               	movwf	?___ftpack,c
  1488  007AC0  0E00               	movlw	0
  1489  007AC2  6E02               	movwf	?___ftpack+1,c
  1490  007AC4  0E00               	movlw	0
  1491  007AC6  6E03               	movwf	?___ftpack+2,c
  1492  007AC8  0012               	return	
  1493  007ACA                     l1032:
  1494  007ACA  2A04               	incf	___ftpack@exp,f,c
  1495  007ACC  90D8               	bcf	status,0,c
  1496  007ACE  3203               	rrcf	___ftpack@arg+2,f,c
  1497  007AD0  3202               	rrcf	___ftpack@arg+1,f,c
  1498  007AD2  3201               	rrcf	___ftpack@arg,f,c
  1499  007AD4                     l1034:
  1500  007AD4  0E00               	movlw	0
  1501  007AD6  1401               	andwf	___ftpack@arg,w,c
  1502  007AD8  6E06               	movwf	??___ftpack& (0+255),c
  1503  007ADA  0E00               	movlw	0
  1504  007ADC  1402               	andwf	___ftpack@arg+1,w,c
  1505  007ADE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1506  007AE0  0EFE               	movlw	254
  1507  007AE2  1403               	andwf	___ftpack@arg+2,w,c
  1508  007AE4  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1509  007AE6  5006               	movf	??___ftpack,w,c
  1510  007AE8  1007               	iorwf	??___ftpack+1,w,c
  1511  007AEA  1008               	iorwf	??___ftpack+2,w,c
  1512  007AEC  B4D8               	btfsc	status,2,c
  1513  007AEE  D00C               	goto	l1040
  1514  007AF0  D7EC               	goto	l1032
  1515  007AF2                     l1036:
  1516  007AF2  2A04               	incf	___ftpack@exp,f,c
  1517  007AF4  0E01               	movlw	1
  1518  007AF6  2601               	addwf	___ftpack@arg,f,c
  1519  007AF8  0E00               	movlw	0
  1520  007AFA  2202               	addwfc	___ftpack@arg+1,f,c
  1521  007AFC  0E00               	movlw	0
  1522  007AFE  2203               	addwfc	___ftpack@arg+2,f,c
  1523  007B00  90D8               	bcf	status,0,c
  1524  007B02  3203               	rrcf	___ftpack@arg+2,f,c
  1525  007B04  3202               	rrcf	___ftpack@arg+1,f,c
  1526  007B06  3201               	rrcf	___ftpack@arg,f,c
  1527  007B08                     l1040:
  1528  007B08  0E00               	movlw	0
  1529  007B0A  1401               	andwf	___ftpack@arg,w,c
  1530  007B0C  6E06               	movwf	??___ftpack& (0+255),c
  1531  007B0E  0E00               	movlw	0
  1532  007B10  1402               	andwf	___ftpack@arg+1,w,c
  1533  007B12  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1534  007B14  0EFF               	movlw	255
  1535  007B16  1403               	andwf	___ftpack@arg+2,w,c
  1536  007B18  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1537  007B1A  5006               	movf	??___ftpack,w,c
  1538  007B1C  1007               	iorwf	??___ftpack+1,w,c
  1539  007B1E  1008               	iorwf	??___ftpack+2,w,c
  1540  007B20  B4D8               	btfsc	status,2,c
  1541  007B22  D006               	goto	l1044
  1542  007B24  D7E6               	goto	l1036
  1543  007B26                     l1042:
  1544  007B26  0604               	decf	___ftpack@exp,f,c
  1545  007B28  90D8               	bcf	status,0,c
  1546  007B2A  3601               	rlcf	___ftpack@arg,f,c
  1547  007B2C  3602               	rlcf	___ftpack@arg+1,f,c
  1548  007B2E  3603               	rlcf	___ftpack@arg+2,f,c
  1549  007B30                     l1044:
  1550  007B30  BE02               	btfsc	___ftpack@arg+1,7,c
  1551  007B32  D003               	goto	l311
  1552  007B34  0E02               	movlw	2
  1553  007B36  6004               	cpfslt	___ftpack@exp,c
  1554  007B38  D7F6               	goto	l1042
  1555  007B3A                     l311:
  1556  007B3A  A004               	btfss	___ftpack@exp,0,c
  1557  007B3C  9E02               	bcf	___ftpack@arg+1,7,c
  1558  007B3E  90D8               	bcf	status,0,c
  1559  007B40  3204               	rrcf	___ftpack@exp,f,c
  1560  007B42  5004               	movf	___ftpack@exp,w,c
  1561  007B44  1203               	iorwf	___ftpack@arg+2,f,c
  1562  007B46  5005               	movf	___ftpack@sign,w,c
  1563  007B48  A4D8               	btfss	status,2,c
  1564  007B4A  8E03               	bsf	___ftpack@arg+2,7,c
  1565  007B4C  C001  F001         	movff	___ftpack@arg,?___ftpack
  1566  007B50  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1567  007B54  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1568  007B58  0012               	return	
  1569  007B5A                     __end_of___ftpack:
  1570                           	opt stack 0
  1571                           prodh	equ	0xFF4
  1572                           prodl	equ	0xFF3
  1573                           wreg	equ	0xFE8
  1574                           status	equ	0xFD8
  1575                           
  1576 ;; *************** function _PWM_Max_Duty *****************
  1577 ;; Defined at:
  1578 ;;		line 91 in file "pid.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  2   14[COMRAM] int 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1592 ;;      Params:         2       0       0       0       0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1594 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1595 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1596 ;;Total ram usage:        6 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    1
  1599 ;; This function calls:
  1600 ;;		___aldiv
  1601 ;; This function is called by:
  1602 ;;		_PWM1_Duty
  1603 ;;		_PWM2_Duty
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text11
  1608  007966                     __ptext11:
  1609                           	opt stack 0
  1610  007966                     _PWM_Max_Duty:
  1611                           	opt stack 28
  1612                           
  1613                           ;pid.c: 93: return(48000000/(freq*4));
  1614                           
  1615                           ;incstack = 0
  1616  007966  0E00               	movlw	0
  1617  007968  6E01               	movwf	___aldiv@dividend,c
  1618  00796A  0E6C               	movlw	108
  1619  00796C  6E02               	movwf	___aldiv@dividend+1,c
  1620  00796E  0EDC               	movlw	220
  1621  007970  6E03               	movwf	___aldiv@dividend+2,c
  1622  007972  0E02               	movlw	2
  1623  007974  6E04               	movwf	___aldiv@dividend+3,c
  1624  007976  C055  F011         	movff	_freq,??_PWM_Max_Duty
  1625  00797A  C056  F012         	movff	_freq+1,??_PWM_Max_Duty+1
  1626  00797E  C057  F013         	movff	_freq+2,??_PWM_Max_Duty+2
  1627  007982  C058  F014         	movff	_freq+3,??_PWM_Max_Duty+3
  1628  007986  0E02               	movlw	2
  1629  007988                     u585:
  1630  007988  90D8               	bcf	status,0,c
  1631  00798A  3611               	rlcf	??_PWM_Max_Duty,f,c
  1632  00798C  3612               	rlcf	??_PWM_Max_Duty+1,f,c
  1633  00798E  3613               	rlcf	??_PWM_Max_Duty+2,f,c
  1634  007990  3614               	rlcf	??_PWM_Max_Duty+3,f,c
  1635  007992  2EE8               	decfsz	wreg,f,c
  1636  007994  D7F9               	goto	u585
  1637  007996  C011  F005         	movff	??_PWM_Max_Duty,___aldiv@divisor
  1638  00799A  C012  F006         	movff	??_PWM_Max_Duty+1,___aldiv@divisor+1
  1639  00799E  C013  F007         	movff	??_PWM_Max_Duty+2,___aldiv@divisor+2
  1640  0079A2  C014  F008         	movff	??_PWM_Max_Duty+3,___aldiv@divisor+3
  1641  0079A6  ECAD  F03D         	call	___aldiv	;wreg free
  1642  0079AA  C001  F00F         	movff	?___aldiv,?_PWM_Max_Duty
  1643  0079AE  C002  F010         	movff	?___aldiv+1,?_PWM_Max_Duty+1
  1644  0079B2  0012               	return	
  1645  0079B4                     __end_of_PWM_Max_Duty:
  1646                           	opt stack 0
  1647                           prodh	equ	0xFF4
  1648                           prodl	equ	0xFF3
  1649                           wreg	equ	0xFE8
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function ___aldiv *****************
  1653 ;; Defined at:
  1654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  dividend        4    0[COMRAM] long 
  1657 ;;  divisor         4    4[COMRAM] long 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  quotient        4   10[COMRAM] long 
  1660 ;;  sign            1    9[COMRAM] unsigned char 
  1661 ;;  counter         1    8[COMRAM] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  4    0[COMRAM] long 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1671 ;;      Params:         8       0       0       0       0       0       0       0       0
  1672 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1674 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1675 ;;Total ram usage:       14 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_PWM_Max_Duty
  1681 ;;		_PWM1_Init
  1682 ;;		_PWM2_Init
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text12
  1687  007B5A                     __ptext12:
  1688                           	opt stack 0
  1689  007B5A                     ___aldiv:
  1690                           	opt stack 29
  1691                           
  1692                           ;incstack = 0
  1693  007B5A  0E00               	movlw	0
  1694  007B5C  6E0A               	movwf	___aldiv@sign,c
  1695  007B5E  AE08               	btfss	___aldiv@divisor+3,7,c
  1696  007B60  D00A               	goto	l1068
  1697  007B62  1E08               	comf	___aldiv@divisor+3,f,c
  1698  007B64  1E07               	comf	___aldiv@divisor+2,f,c
  1699  007B66  1E06               	comf	___aldiv@divisor+1,f,c
  1700  007B68  6C05               	negf	___aldiv@divisor,c
  1701  007B6A  0E00               	movlw	0
  1702  007B6C  2206               	addwfc	___aldiv@divisor+1,f,c
  1703  007B6E  2207               	addwfc	___aldiv@divisor+2,f,c
  1704  007B70  2208               	addwfc	___aldiv@divisor+3,f,c
  1705  007B72  0E01               	movlw	1
  1706  007B74  6E0A               	movwf	___aldiv@sign,c
  1707  007B76                     l1068:
  1708  007B76  AE04               	btfss	___aldiv@dividend+3,7,c
  1709  007B78  D00A               	goto	l1074
  1710  007B7A  1E04               	comf	___aldiv@dividend+3,f,c
  1711  007B7C  1E03               	comf	___aldiv@dividend+2,f,c
  1712  007B7E  1E02               	comf	___aldiv@dividend+1,f,c
  1713  007B80  6C01               	negf	___aldiv@dividend,c
  1714  007B82  0E00               	movlw	0
  1715  007B84  2202               	addwfc	___aldiv@dividend+1,f,c
  1716  007B86  2203               	addwfc	___aldiv@dividend+2,f,c
  1717  007B88  2204               	addwfc	___aldiv@dividend+3,f,c
  1718  007B8A  0E01               	movlw	1
  1719  007B8C  1A0A               	xorwf	___aldiv@sign,f,c
  1720  007B8E                     l1074:
  1721  007B8E  0E00               	movlw	0
  1722  007B90  6E0B               	movwf	___aldiv@quotient,c
  1723  007B92  0E00               	movlw	0
  1724  007B94  6E0C               	movwf	___aldiv@quotient+1,c
  1725  007B96  0E00               	movlw	0
  1726  007B98  6E0D               	movwf	___aldiv@quotient+2,c
  1727  007B9A  0E00               	movlw	0
  1728  007B9C  6E0E               	movwf	___aldiv@quotient+3,c
  1729  007B9E  5005               	movf	___aldiv@divisor,w,c
  1730  007BA0  1006               	iorwf	___aldiv@divisor+1,w,c
  1731  007BA2  1007               	iorwf	___aldiv@divisor+2,w,c
  1732  007BA4  1008               	iorwf	___aldiv@divisor+3,w,c
  1733  007BA6  B4D8               	btfsc	status,2,c
  1734  007BA8  D02A               	goto	l1096
  1735  007BAA  0E01               	movlw	1
  1736  007BAC  6E09               	movwf	___aldiv@counter,c
  1737  007BAE  D006               	goto	l1082
  1738  007BB0                     l1080:
  1739  007BB0  90D8               	bcf	status,0,c
  1740  007BB2  3605               	rlcf	___aldiv@divisor,f,c
  1741  007BB4  3606               	rlcf	___aldiv@divisor+1,f,c
  1742  007BB6  3607               	rlcf	___aldiv@divisor+2,f,c
  1743  007BB8  3608               	rlcf	___aldiv@divisor+3,f,c
  1744  007BBA  2A09               	incf	___aldiv@counter,f,c
  1745  007BBC                     l1082:
  1746  007BBC  AE08               	btfss	___aldiv@divisor+3,7,c
  1747  007BBE  D7F8               	goto	l1080
  1748  007BC0                     l1084:
  1749  007BC0  90D8               	bcf	status,0,c
  1750  007BC2  360B               	rlcf	___aldiv@quotient,f,c
  1751  007BC4  360C               	rlcf	___aldiv@quotient+1,f,c
  1752  007BC6  360D               	rlcf	___aldiv@quotient+2,f,c
  1753  007BC8  360E               	rlcf	___aldiv@quotient+3,f,c
  1754  007BCA  5005               	movf	___aldiv@divisor,w,c
  1755  007BCC  5C01               	subwf	___aldiv@dividend,w,c
  1756  007BCE  5006               	movf	___aldiv@divisor+1,w,c
  1757  007BD0  5802               	subwfb	___aldiv@dividend+1,w,c
  1758  007BD2  5007               	movf	___aldiv@divisor+2,w,c
  1759  007BD4  5803               	subwfb	___aldiv@dividend+2,w,c
  1760  007BD6  5008               	movf	___aldiv@divisor+3,w,c
  1761  007BD8  5804               	subwfb	___aldiv@dividend+3,w,c
  1762  007BDA  A0D8               	btfss	status,0,c
  1763  007BDC  D009               	goto	l1092
  1764  007BDE  5005               	movf	___aldiv@divisor,w,c
  1765  007BE0  5E01               	subwf	___aldiv@dividend,f,c
  1766  007BE2  5006               	movf	___aldiv@divisor+1,w,c
  1767  007BE4  5A02               	subwfb	___aldiv@dividend+1,f,c
  1768  007BE6  5007               	movf	___aldiv@divisor+2,w,c
  1769  007BE8  5A03               	subwfb	___aldiv@dividend+2,f,c
  1770  007BEA  5008               	movf	___aldiv@divisor+3,w,c
  1771  007BEC  5A04               	subwfb	___aldiv@dividend+3,f,c
  1772  007BEE  800B               	bsf	___aldiv@quotient,0,c
  1773  007BF0                     l1092:
  1774  007BF0  90D8               	bcf	status,0,c
  1775  007BF2  3208               	rrcf	___aldiv@divisor+3,f,c
  1776  007BF4  3207               	rrcf	___aldiv@divisor+2,f,c
  1777  007BF6  3206               	rrcf	___aldiv@divisor+1,f,c
  1778  007BF8  3205               	rrcf	___aldiv@divisor,f,c
  1779  007BFA  2E09               	decfsz	___aldiv@counter,f,c
  1780  007BFC  D7E1               	goto	l1084
  1781  007BFE                     l1096:
  1782  007BFE  500A               	movf	___aldiv@sign,w,c
  1783  007C00  B4D8               	btfsc	status,2,c
  1784  007C02  D008               	goto	l1100
  1785  007C04  1E0E               	comf	___aldiv@quotient+3,f,c
  1786  007C06  1E0D               	comf	___aldiv@quotient+2,f,c
  1787  007C08  1E0C               	comf	___aldiv@quotient+1,f,c
  1788  007C0A  6C0B               	negf	___aldiv@quotient,c
  1789  007C0C  0E00               	movlw	0
  1790  007C0E  220C               	addwfc	___aldiv@quotient+1,f,c
  1791  007C10  220D               	addwfc	___aldiv@quotient+2,f,c
  1792  007C12  220E               	addwfc	___aldiv@quotient+3,f,c
  1793  007C14                     l1100:
  1794  007C14  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1795  007C18  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1796  007C1C  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1797  007C20  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1798  007C24  0012               	return	
  1799  007C26                     __end_of___aldiv:
  1800                           	opt stack 0
  1801                           prodh	equ	0xFF4
  1802                           prodl	equ	0xFF3
  1803                           wreg	equ	0xFE8
  1804                           status	equ	0xFD8
  1805                           
  1806 ;; *************** function _ADC_Read *****************
  1807 ;; Defined at:
  1808 ;;		line 178 in file "pid.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  channel         1    wreg     unsigned char 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  channel         1    4[COMRAM] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  2    0[COMRAM] unsigned int 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1822 ;;      Params:         2       0       0       0       0       0       0       0       0
  1823 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1824 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1825 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1826 ;;Total ram usage:        5 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_main
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text13
  1836  007920                     __ptext13:
  1837                           	opt stack 0
  1838  007920                     _ADC_Read:
  1839                           	opt stack 30
  1840                           
  1841                           ;incstack = 0
  1842                           ;ADC_Read@channel stored from wreg
  1843  007920  6E05               	movwf	ADC_Read@channel,c
  1844                           
  1845                           ;pid.c: 180: if(channel > 7)
  1846  007922  0E07               	movlw	7
  1847  007924  6405               	cpfsgt	ADC_Read@channel,c
  1848  007926  D005               	goto	l1280
  1849                           
  1850                           ;pid.c: 181: return 0;
  1851  007928  0E00               	movlw	0
  1852  00792A  6E02               	movwf	?_ADC_Read+1,c
  1853  00792C  0E00               	movlw	0
  1854  00792E  6E01               	movwf	?_ADC_Read,c
  1855  007930  0012               	return	
  1856  007932                     l1280:
  1857                           
  1858                           ;pid.c: 183: ADCON0 &= 0xC5;
  1859  007932  0EC5               	movlw	197
  1860  007934  16C2               	andwf	4034,f,c	;volatile
  1861                           
  1862                           ;pid.c: 184: ADCON0 |= channel<<3;
  1863  007936  3805               	swapf	ADC_Read@channel,w,c
  1864  007938  42E8               	rrncf	wreg,f,c
  1865  00793A  0BF8               	andlw	248
  1866  00793C  12C2               	iorwf	4034,f,c	;volatile
  1867                           
  1868                           ;pid.c: 185: _delay((unsigned long)((2)*(48000000/4000.0)));
  1869  00793E  0E20               	movlw	32
  1870  007940  6E03               	movwf	??_ADC_Read& (0+255),c
  1871  007942  0E2A               	movlw	42
  1872  007944                     u877:
  1873  007944  2EE8               	decfsz	wreg,f,c
  1874  007946  D7FE               	goto	u877
  1875  007948  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  1876  00794A  D7FC               	goto	u877
  1877                           
  1878                           ;pid.c: 186: GO_nDONE = 1;
  1879  00794C  82C2               	bsf	4034,1,c	;volatile
  1880  00794E                     l75:
  1881  00794E  B2C2               	btfsc	4034,1,c	;volatile
  1882  007950  D7FE               	goto	l75
  1883                           
  1884                           ;pid.c: 188: return ((ADRESH<<8)+ADRESL);
  1885  007952  50C4               	movf	4036,w,c	;volatile
  1886  007954  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  1887  007956  6A03               	clrf	??_ADC_Read& (0+255),c
  1888  007958  50C3               	movf	4035,w,c	;volatile
  1889  00795A  2403               	addwf	??_ADC_Read,w,c
  1890  00795C  6E01               	movwf	?_ADC_Read,c
  1891  00795E  0E00               	movlw	0
  1892  007960  2004               	addwfc	??_ADC_Read+1,w,c
  1893  007962  6E02               	movwf	?_ADC_Read+1,c
  1894  007964  0012               	return	
  1895  007966                     __end_of_ADC_Read:
  1896                           	opt stack 0
  1897                           prodh	equ	0xFF4
  1898                           prodl	equ	0xFF3
  1899                           wreg	equ	0xFE8
  1900                           status	equ	0xFD8
  1901                           
  1902 ;; *************** function _ADC_Init *****************
  1903 ;; Defined at:
  1904 ;;		line 172 in file "pid.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;		None
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1918 ;;      Params:         0       0       0       0       0       0       0       0       0
  1919 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1920 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1921 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1922 ;;Total ram usage:        0 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text14
  1932  00788A                     __ptext14:
  1933                           	opt stack 0
  1934  00788A                     _ADC_Init:
  1935                           	opt stack 30
  1936                           
  1937                           ;pid.c: 174: ADCON0 = 0x71;
  1938                           
  1939                           ;incstack = 0
  1940  00788A  0E71               	movlw	113
  1941  00788C  6EC2               	movwf	4034,c	;volatile
  1942                           
  1943                           ;pid.c: 175: ADCON1 = 0x07;
  1944  00788E  0E07               	movlw	7
  1945  007890  6EC1               	movwf	4033,c	;volatile
  1946  007892  0012               	return		;funcret
  1947  007894                     __end_of_ADC_Init:
  1948                           	opt stack 0
  1949  0000                     prodh	equ	0xFF4
  1950                           prodl	equ	0xFF3
  1951                           wreg	equ	0xFE8
  1952                           status	equ	0xFD8
  1953                           prodh	equ	0xFF4
  1954                           prodl	equ	0xFF3
  1955                           wreg	equ	0xFE8
  1956                           status	equ	0xFD8
  1957                           
  1958                           	psect	rparam
  1959  0000                     prodh	equ	0xFF4
  1960                           prodl	equ	0xFF3
  1961                           wreg	equ	0xFE8
  1962                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     84      88
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PWM1_Duty
    _PWM1_Init->___aldiv
    _PWM1_Duty->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    ___awtoft->_PWM_Max_Duty
    _PWM_Max_Duty->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   12932
                                             60 COMRAM    24    24      0
                           _ADC_Init
                           _ADC_Read
                          _PWM1_Duty
                          _PWM1_Init
                         _PWM1_Start
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     543
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     4      4     792
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM1_Duty                                            4     2      2   11166
                                             56 COMRAM     4     2      2
                       _PWM_Max_Duty
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2220
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     380
                                             41 COMRAM    15    11      4
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2754
                                             26 COMRAM    15     9      6
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2708
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2289
                                             20 COMRAM     4     1      3
                       _PWM_Max_Duty (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2070
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _PWM_Max_Duty                                         6     4      2     684
                                             14 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     684
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _PWM1_Duty
     _PWM_Max_Duty
       ___aldiv
     ___awtoft
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awtoft (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM1_Init
     ___aldiv
   _PWM1_Start
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     54      58       1       92.6%
STACK                0      0       0       2        0.0%
DATA                 0      0      58       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0      58      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Dec 12 01:41:57 2016

                     l75 794E      ___wmul@multiplicand 0003              __CFG_BORV$3 000000  
     __CFG_FOSC$XTPLL_XT 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l311 7B3A  
                    l369 7CDA             __CFG_CPB$OFF 000000                      _PR2 000FCB  
           __CFG_CPD$OFF 000000                      u611 7C5E                      u711 7E10  
                    u641 7D1C                      u730 7E4A                      u661 7D44  
                    u805 79E6                      u591 7C36                      u735 7E42  
                    u585 7988                      u795 79D6                      u877 7944  
           __CFG_BOR$OFF 000000                      wreg 000FE8             __CFG_LVP$OFF 000000  
           ___ftdiv@cntr 0015             ___ftdiv@sign 001A             __CFG_WDT$OFF 000000  
                   l1100 7C14                     l1040 7B08                     l1032 7ACA  
                   l1120 7C76                     l1042 7B26                     l1034 7AD4  
                   l1210 78FC                     l1114 7C4E                     l1044 7B30  
                   l1036 7AF2                     l1028 7ABC                     l1140 7CB4  
                   l1220 7E2C                     l1080 7BB0                     l1160 7D34  
                   l1082 7BBC                     l1074 7B8E                     l1250 7EC6  
                   l1242 7EA2                     l1314 7F38                     l1092 7BF0  
                   l1084 7BC0                     l1068 7B76                     l1180 7D8E  
                   l1252 7ECC                     l1190 7DB6                     l1166 7D5C  
                   l1238 7E92                     l1280 7932                     l1096 7BFE  
                   l1184 7D9E                     l1256 7EE2                     l1248 7EBA  
                   l1194 7DC6             _PWM_Max_Duty 7966                     _main 7EF4  
                   _freq 0055             ___ftpack@arg 0001             ___ftpack@exp 0004  
       __end_of_ADC_Init 7894         __end_of_ADC_Read 7966                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___ftmul@cntr 0028             ___param_bank 000010  
           ___ftmul@sign 0029             ___fttol@exp1 0038             ___fttol@lval 0034  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000          __end_of___aldiv 7C26  
                  ?_main 0001          __end_of___ftdiv 7D0C          __end_of___ftmul 7E00  
        __end_of___fttol 7EF4            __CFG_USBDIV$1 000000            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
     __size_of_PWM1_Init 006A       __size_of_PWM1_Duty 008E              ?_PWM1_Start 0001  
         __CFG_EBTRB$OFF 000000            ___awtoft@sign 0018            ___ftpack@sign 0005  
                  status 000FD8           __CFG_ICPRT$OFF 000000          __initialization 7884  
           __end_of_main 8000                   ??_main 003D            ___fttol@sign1 0033  
          __activetblptr 000000                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _CCP1M2 007DEA                   _CCP1M3 007DEB                   _CCP2M2 007DD2  
                 _CCP2M3 007DD3                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB         __end_of___awtoft 7920  
       __end_of___ftpack 7B5A         __end_of___lwtoft 78C2                   _TMR2ON 007E52  
                 _TRISC1 007CA1                   _TRISC2 007CA2           __CFG_XINST$OFF 000000  
      __end_of_PWM1_Init 7A1E        __end_of_PWM1_Duty 7AAC                ??___aldiv 0009  
                 ___wmul 78C2           __CFG_STVREN$ON 000000      __size_of_PWM1_Start 000A  
              ??___ftdiv 0012                ??___ftmul 0021                ??___fttol 002E  
        ADC_Read@channel 0005                   main@ct 0051                   main@dt 0049  
                 main@it 004F                   main@kp 003F                   main@td 0041  
                 main@ti 0043                   main@sp 0045    ___ftmul@f3_as_product 0025  
              ?_ADC_Init 0001                ?_ADC_Read 0001               __accesstop 0060  
__end_of__initialization 7884          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
             ___ftdiv@f1 000C               ___ftdiv@f2 000F               ___ftdiv@f3 0016  
             ___awtoft@c 0015               ___ftmul@f1 001B               ___ftmul@f2 001E  
             ___fttol@f1 002A           __pcstackCOMRAM 0001               ___lwtoft@c 0009  
             ??_ADC_Init 0001               ??_ADC_Read 0003               __pnvCOMRAM 0055  
                ?___wmul 0001                ?___awtoft 0015                ?___ftpack 0001  
                _T2CKPS0 007E50                  _T2CKPS1 007E51                ?___lwtoft 0009  
           ??_PWM1_Start 0001          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___aldiv 7B5A                  ___ftdiv 7C26  
        __size_of___wmul 0026                  ___ftmul 7D0C                  ___fttol 7E00  
     __end_of_PWM1_Start 789E                  __pcinit 7884               ??___awtoft 0018  
             ??___ftpack 0006                  __ramtop 0800                  __ptext0 7EF4  
                __ptext1 78C2                  __ptext2 7894                  __ptext3 79B4  
                __ptext4 7A1E                  __ptext5 789E                  __ptext6 7E00  
                __ptext7 7D0C                  __ptext8 7C26                  __ptext9 78E8  
             ??___lwtoft 000C         ___aldiv@dividend 0001                  main@et0 004B  
                main@it0 004D                  main@err 0053     end_of_initialization 7884  
       ___aldiv@quotient 000B                _PWM1_Init 79B4                _PWM1_Duty 7A1E  
      __size_of_ADC_Init 000A        __size_of_ADC_Read 0046              ___ftdiv@exp 0019  
            ___ftmul@exp 0024           __end_of___wmul 78E8               ?_PWM1_Init 000F  
             ?_PWM1_Duty 0039      start_initialization 7884            ?_PWM_Max_Duty 000F  
               ??___wmul 0005         __CFG_LPT1OSC$OFF 000000        __size_of___awtoft 0038  
      __size_of___ftpack 00AE        __size_of___lwtoft 0024           ??_PWM_Max_Duty 0011  
               ?___aldiv 0001                 ?___ftdiv 000C                 ?___ftmul 001B  
               ?___fttol 002A              ??_PWM1_Init 0013              ??_PWM1_Duty 003B  
               _ADC_Init 788A                 _ADC_Read 7920          ___aldiv@divisor 0005  
        ___aldiv@counter 0009           ___wmul@product 0005            PWM1_Duty@duty 0039  
               _GO_nDONE 007E11         __CFG_WDTPS$32768 000000        ___wmul@multiplier 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of___aldiv 00CC  
   __end_of_PWM_Max_Duty 79B4         __size_of___ftdiv 00E6         __size_of___ftmul 00F4  
       __size_of___fttol 00F4                 ___awtoft 78E8                 ___ftpack 7AAC  
               ___lwtoft 789E                 __ptext10 7AAC                 __ptext11 7966  
               __ptext12 7B5A                 __ptext13 7920                 __ptext14 788A  
          __size_of_main 010C             PWM1_Init@fre 000F                 main@dato 0047  
  __CFG_CPUDIV$OSC1_PLL2 000000             ___aldiv@sign 000A               _PWM1_Start 7894  
  __size_of_PWM_Max_Duty 004E  
